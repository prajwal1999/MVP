// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data : $uint<32>  $depth 2 
// can point into 
// in scope  top-level
$pipe [in_data] 32 $depth 2 
// $pipe  out_data : $uint<32>  $depth 2 
// can point into 
// in scope  top-level
$pipe [out_data] 32 $depth 2 
// load store constants for object A_0
$constant $W[A_0_base_address] : $int<8> := _b00000000
// load store constants for object A_1
$constant $W[A_1_base_address] : $int<8> := _b00000000
// load store constants for object A_2
$constant $W[A_2_base_address] : $int<8> := _b00000000
// load store constants for object A_3
$constant $W[A_3_base_address] : $int<8> := _b00000000
// load store constants for object x_0
$constant $W[x_0_base_address] : $int<3> := _b000
// load store constants for object x_1
$constant $W[x_1_base_address] : $int<3> := _b000
// load store constants for object x_2
$constant $W[x_2_base_address] : $int<3> := _b000
// load store constants for object x_3
$constant $W[x_3_base_address] : $int<3> := _b000
// load store constants for object y
$constant $W[y_base_address] : $int<5> := _b00000
$memoryspace [memory_space_0] 
{
  $capacity 256
  $datawidth 32
  $addrwidth 8
  $maxaccesswidth 32
  // $storage  A_0 : $array[32][8] $of $uint<32> // memory space index = 0  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [A_0] : $array[256] $of $int<32>
}
$memoryspace [memory_space_1] 
{
  $capacity 256
  $datawidth 32
  $addrwidth 8
  $maxaccesswidth 32
  // $storage  A_1 : $array[32][8] $of $uint<32> // memory space index = 1  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [A_1] : $array[256] $of $int<32>
}
$memoryspace [memory_space_2] 
{
  $capacity 256
  $datawidth 32
  $addrwidth 8
  $maxaccesswidth 32
  // $storage  A_2 : $array[32][8] $of $uint<32> // memory space index = 2  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [A_2] : $array[256] $of $int<32>
}
$memoryspace [memory_space_3] 
{
  $capacity 256
  $datawidth 32
  $addrwidth 8
  $maxaccesswidth 32
  // $storage  A_3 : $array[32][8] $of $uint<32> // memory space index = 3  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [A_3] : $array[256] $of $int<32>
}
$memoryspace [memory_space_4] 
{
  $capacity 8
  $datawidth 32
  $addrwidth 3
  $maxaccesswidth 32
  // $storage  x_0 : $array[8] $of $uint<32> // memory space index = 4  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [x_0] : $array[8] $of $int<32>
}
$memoryspace [memory_space_5] 
{
  $capacity 8
  $datawidth 32
  $addrwidth 3
  $maxaccesswidth 32
  // $storage  x_1 : $array[8] $of $uint<32> // memory space index = 5  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [x_1] : $array[8] $of $int<32>
}
$memoryspace [memory_space_6] 
{
  $capacity 8
  $datawidth 32
  $addrwidth 3
  $maxaccesswidth 32
  // $storage  x_2 : $array[8] $of $uint<32> // memory space index = 6  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [x_2] : $array[8] $of $int<32>
}
$memoryspace [memory_space_7] 
{
  $capacity 8
  $datawidth 32
  $addrwidth 3
  $maxaccesswidth 32
  // $storage  x_3 : $array[8] $of $uint<32> // memory space index = 7  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [x_3] : $array[8] $of $int<32>
}
$memoryspace [memory_space_8] 
{
  $capacity 32
  $datawidth 32
  $addrwidth 5
  $maxaccesswidth 32
  // $storage  y : $array[32] $of $uint<32> // memory space index = 8  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [y] : $array[32] $of $int<32>
}
$module [dotP_even] 
{
  $in R:$int<8>
  // can point into 
  $out result:$int<32>
  // can point into 
  // pipe-declarations for block %dotP_even
  //  file .Aa/mvp.opt.aa, line 23
  // pipe-declarations for block %dotP_even%mmloop
  //  file .Aa/mvp.opt.aa, line 28
  // memory-space 2 is read from.
  // memory-space 5 is read from.
  // memory-space 1 is read from.
  // memory-space 0 is read from.
  // memory-space 4 is read from.
  // memory-space 7 is read from.
  // memory-space 6 is read from.
  // memory-space 3 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_19] // Branch Block  file .Aa/mvp.opt.aa, line 28
    {
      $P [branch_block_stmt_19__entry__]
      branch_block_stmt_19__entry__ <-| ($entry)
      $P [branch_block_stmt_19__exit__]
      branch_block_stmt_19__exit__ |-> ($exit)
      $P [do_while_stmt_20__entry__] 
      $P [do_while_stmt_20__exit__] 
      // do-while-statement  
      //  file .Aa/mvp.opt.aa, line 30
      <o> [do_while_stmt_20]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_20__entry__] 
        $P[do_while_stmt_20__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_20_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_22
          // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_22_sample_start_] 
          $T[phi_stmt_22_sample_completed_] 
          $T[phi_stmt_22_update_start_] 
          $T[phi_stmt_22_update_completed_] 
          $T[phi_stmt_22_sample_start__ps] 
          phi_stmt_22_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_22_sample_completed__ps] 
          phi_stmt_22_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_22_update_start__ps] 
          phi_stmt_22_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_22_update_completed__ps] 
          phi_stmt_22_update_completed_ <-& (phi_stmt_22_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_22_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_22_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_22_update_start_)
          $T[phi_stmt_22_loopback_trigger] 
          phi_stmt_22_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_22_loopback_sample_req] 
          $T[phi_stmt_22_loopback_sample_req_ps] 
          phi_stmt_22_loopback_sample_req <-& (phi_stmt_22_loopback_sample_req_ps)
          phi_stmt_22_loopback_sample_req &-> ($null)
          $T[phi_stmt_22_entry_trigger] 
          phi_stmt_22_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_22_entry_sample_req] 
          $T[phi_stmt_22_entry_sample_req_ps] 
          phi_stmt_22_entry_sample_req <-& (phi_stmt_22_entry_sample_req_ps)
          phi_stmt_22_entry_sample_req &-> ($null)
          phi_stmt_22_update_start_ o<-& (phi_stmt_22_update_completed_ 0)
          phi_stmt_22_sample_start_ o<-& (phi_stmt_22_sample_completed_ 1)
          $T[phi_stmt_22_merged_reqs] 
          $T[phi_stmt_22_phi_mux_ack] 
          $T[phi_stmt_22_phi_mux_ack_ps] 
          phi_stmt_22_phi_mux_ack_ps <-& (phi_stmt_22_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_22_update_completed_)
          $T[type_cast_25_sample_start__ps] 
          $T[type_cast_25_sample_completed__ps] 
          $T[type_cast_25_update_start__ps] 
          $T[type_cast_25_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_25_sample_start_] 
          $T[type_cast_25_sample_completed_] 
          type_cast_25_sample_completed_ <-& (type_cast_25_sample_start_)
          $T[type_cast_25_update_start_] 
          $T [type_cast_25_update_completed_] $delay 
          type_cast_25_update_completed_ <-& (type_cast_25_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_25_sample_start_ <-& (type_cast_25_sample_start__ps)
          type_cast_25_update_start_ <-& (type_cast_25_update_start__ps)
          // Phi complete dependency.
          type_cast_25_sample_completed__ps <-& (type_cast_25_sample_completed_)
          type_cast_25_update_completed__ps <-& (type_cast_25_update_completed_)
          $T[R_nC_26_sample_start__ps] 
          $T[R_nC_26_sample_completed__ps] 
          $T[R_nC_26_update_start__ps] 
          $T[R_nC_26_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nC_26_sample_start_] 
          $T[R_nC_26_sample_completed_] 
          $T[R_nC_26_update_start_] 
          $T[R_nC_26_update_completed_] 
          ;;[R_nC_26_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nC_26_sample_start_ &-> (R_nC_26_Sample)
          R_nC_26_sample_completed_ <-& (R_nC_26_Sample)
          ;;[R_nC_26_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nC_26_update_start_ &-> (R_nC_26_Update)
          R_nC_26_update_completed_ <-& (R_nC_26_Update)
          // RAW reenables for nC
          // Phi start dependency for implicit/constant alternative.
          R_nC_26_sample_start_ <-& (R_nC_26_sample_start__ps)
          R_nC_26_update_start_ <-& (R_nC_26_update_start__ps)
          // Phi complete dependency.
          R_nC_26_sample_completed__ps <-& (R_nC_26_sample_completed_)
          R_nC_26_update_completed__ps <-& (R_nC_26_update_completed_)
          $phisequencer [ phi_stmt_22_phi_seq] : 
          phi_stmt_22_entry_trigger type_cast_25_sample_start__ps type_cast_25_sample_completed__ps type_cast_25_update_start__ps type_cast_25_update_completed__ps phi_stmt_22_loopback_trigger R_nC_26_sample_start__ps R_nC_26_sample_completed__ps R_nC_26_update_start__ps R_nC_26_update_completed__ps :
          phi_stmt_22_sample_start__ps phi_stmt_22_sample_completed__ps phi_stmt_22_update_start__ps phi_stmt_22_update_completed__ps :
          phi_stmt_22_entry_sample_req_ps phi_stmt_22_loopback_sample_req_ps : 
          phi_stmt_22_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_22
          // start:  PHI statement phi_stmt_27
          // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_27_sample_start_] 
          $T[phi_stmt_27_sample_completed_] 
          $T[phi_stmt_27_update_start_] 
          $T[phi_stmt_27_update_completed_] 
          $T[phi_stmt_27_sample_start__ps] 
          phi_stmt_27_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_27_sample_completed__ps] 
          phi_stmt_27_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_27_update_start__ps] 
          phi_stmt_27_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_27_update_completed__ps] 
          phi_stmt_27_update_completed_ <-& (phi_stmt_27_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_27_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_27_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_27_update_start_)
          $T[phi_stmt_27_loopback_trigger] 
          phi_stmt_27_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_27_loopback_sample_req] 
          $T[phi_stmt_27_loopback_sample_req_ps] 
          phi_stmt_27_loopback_sample_req <-& (phi_stmt_27_loopback_sample_req_ps)
          phi_stmt_27_loopback_sample_req &-> ($null)
          $T[phi_stmt_27_entry_trigger] 
          phi_stmt_27_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_27_entry_sample_req] 
          $T[phi_stmt_27_entry_sample_req_ps] 
          phi_stmt_27_entry_sample_req <-& (phi_stmt_27_entry_sample_req_ps)
          phi_stmt_27_entry_sample_req &-> ($null)
          phi_stmt_27_update_start_ o<-& (phi_stmt_27_update_completed_ 0)
          phi_stmt_27_sample_start_ o<-& (phi_stmt_27_sample_completed_ 1)
          $T[phi_stmt_27_merged_reqs] 
          $T[phi_stmt_27_phi_mux_ack] 
          $T[phi_stmt_27_phi_mux_ack_ps] 
          phi_stmt_27_phi_mux_ack_ps <-& (phi_stmt_27_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_27_update_completed_)
          $T[type_cast_30_sample_start__ps] 
          $T[type_cast_30_sample_completed__ps] 
          $T[type_cast_30_update_start__ps] 
          $T[type_cast_30_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_30_sample_start_] 
          $T[type_cast_30_sample_completed_] 
          type_cast_30_sample_completed_ <-& (type_cast_30_sample_start_)
          $T[type_cast_30_update_start_] 
          $T [type_cast_30_update_completed_] $delay 
          type_cast_30_update_completed_ <-& (type_cast_30_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_30_sample_start_ <-& (type_cast_30_sample_start__ps)
          type_cast_30_update_start_ <-& (type_cast_30_update_start__ps)
          // Phi complete dependency.
          type_cast_30_sample_completed__ps <-& (type_cast_30_sample_completed_)
          type_cast_30_update_completed__ps <-& (type_cast_30_update_completed_)
          $T[R_nval_0_31_sample_start__ps] 
          $T[R_nval_0_31_sample_completed__ps] 
          $T[R_nval_0_31_update_start__ps] 
          $T[R_nval_0_31_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_0_31_sample_start_] 
          $T[R_nval_0_31_sample_completed_] 
          $T[R_nval_0_31_update_start_] 
          $T[R_nval_0_31_update_completed_] 
          ;;[R_nval_0_31_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_0_31_sample_start_ &-> (R_nval_0_31_Sample)
          R_nval_0_31_sample_completed_ <-& (R_nval_0_31_Sample)
          ;;[R_nval_0_31_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_0_31_update_start_ &-> (R_nval_0_31_Update)
          R_nval_0_31_update_completed_ <-& (R_nval_0_31_Update)
          // RAW reenables for nval_0
          // Phi start dependency for implicit/constant alternative.
          R_nval_0_31_sample_start_ <-& (R_nval_0_31_sample_start__ps)
          R_nval_0_31_update_start_ <-& (R_nval_0_31_update_start__ps)
          // Phi complete dependency.
          R_nval_0_31_sample_completed__ps <-& (R_nval_0_31_sample_completed_)
          R_nval_0_31_update_completed__ps <-& (R_nval_0_31_update_completed_)
          $phisequencer [ phi_stmt_27_phi_seq] : 
          phi_stmt_27_entry_trigger type_cast_30_sample_start__ps type_cast_30_sample_completed__ps type_cast_30_update_start__ps type_cast_30_update_completed__ps phi_stmt_27_loopback_trigger R_nval_0_31_sample_start__ps R_nval_0_31_sample_completed__ps R_nval_0_31_update_start__ps R_nval_0_31_update_completed__ps :
          phi_stmt_27_sample_start__ps phi_stmt_27_sample_completed__ps phi_stmt_27_update_start__ps phi_stmt_27_update_completed__ps :
          phi_stmt_27_entry_sample_req_ps phi_stmt_27_loopback_sample_req_ps : 
          phi_stmt_27_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_27
          // start:  PHI statement phi_stmt_32
          // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_32_sample_start_] 
          $T[phi_stmt_32_sample_completed_] 
          $T[phi_stmt_32_update_start_] 
          $T[phi_stmt_32_update_completed_] 
          $T[phi_stmt_32_sample_start__ps] 
          phi_stmt_32_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_32_sample_completed__ps] 
          phi_stmt_32_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_32_update_start__ps] 
          phi_stmt_32_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_32_update_completed__ps] 
          phi_stmt_32_update_completed_ <-& (phi_stmt_32_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_32_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_32_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_32_update_start_)
          $T[phi_stmt_32_loopback_trigger] 
          phi_stmt_32_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_32_loopback_sample_req] 
          $T[phi_stmt_32_loopback_sample_req_ps] 
          phi_stmt_32_loopback_sample_req <-& (phi_stmt_32_loopback_sample_req_ps)
          phi_stmt_32_loopback_sample_req &-> ($null)
          $T[phi_stmt_32_entry_trigger] 
          phi_stmt_32_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_32_entry_sample_req] 
          $T[phi_stmt_32_entry_sample_req_ps] 
          phi_stmt_32_entry_sample_req <-& (phi_stmt_32_entry_sample_req_ps)
          phi_stmt_32_entry_sample_req &-> ($null)
          phi_stmt_32_update_start_ o<-& (phi_stmt_32_update_completed_ 0)
          phi_stmt_32_sample_start_ o<-& (phi_stmt_32_sample_completed_ 1)
          $T[phi_stmt_32_merged_reqs] 
          $T[phi_stmt_32_phi_mux_ack] 
          $T[phi_stmt_32_phi_mux_ack_ps] 
          phi_stmt_32_phi_mux_ack_ps <-& (phi_stmt_32_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_32_update_completed_)
          $T[type_cast_35_sample_start__ps] 
          $T[type_cast_35_sample_completed__ps] 
          $T[type_cast_35_update_start__ps] 
          $T[type_cast_35_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_35_sample_start_] 
          $T[type_cast_35_sample_completed_] 
          type_cast_35_sample_completed_ <-& (type_cast_35_sample_start_)
          $T[type_cast_35_update_start_] 
          $T [type_cast_35_update_completed_] $delay 
          type_cast_35_update_completed_ <-& (type_cast_35_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_35_sample_start_ <-& (type_cast_35_sample_start__ps)
          type_cast_35_update_start_ <-& (type_cast_35_update_start__ps)
          // Phi complete dependency.
          type_cast_35_sample_completed__ps <-& (type_cast_35_sample_completed_)
          type_cast_35_update_completed__ps <-& (type_cast_35_update_completed_)
          $T[R_nval_1_36_sample_start__ps] 
          $T[R_nval_1_36_sample_completed__ps] 
          $T[R_nval_1_36_update_start__ps] 
          $T[R_nval_1_36_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_1_36_sample_start_] 
          $T[R_nval_1_36_sample_completed_] 
          $T[R_nval_1_36_update_start_] 
          $T[R_nval_1_36_update_completed_] 
          ;;[R_nval_1_36_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_1_36_sample_start_ &-> (R_nval_1_36_Sample)
          R_nval_1_36_sample_completed_ <-& (R_nval_1_36_Sample)
          ;;[R_nval_1_36_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_1_36_update_start_ &-> (R_nval_1_36_Update)
          R_nval_1_36_update_completed_ <-& (R_nval_1_36_Update)
          // RAW reenables for nval_1
          // Phi start dependency for implicit/constant alternative.
          R_nval_1_36_sample_start_ <-& (R_nval_1_36_sample_start__ps)
          R_nval_1_36_update_start_ <-& (R_nval_1_36_update_start__ps)
          // Phi complete dependency.
          R_nval_1_36_sample_completed__ps <-& (R_nval_1_36_sample_completed_)
          R_nval_1_36_update_completed__ps <-& (R_nval_1_36_update_completed_)
          $phisequencer [ phi_stmt_32_phi_seq] : 
          phi_stmt_32_entry_trigger type_cast_35_sample_start__ps type_cast_35_sample_completed__ps type_cast_35_update_start__ps type_cast_35_update_completed__ps phi_stmt_32_loopback_trigger R_nval_1_36_sample_start__ps R_nval_1_36_sample_completed__ps R_nval_1_36_update_start__ps R_nval_1_36_update_completed__ps :
          phi_stmt_32_sample_start__ps phi_stmt_32_sample_completed__ps phi_stmt_32_update_start__ps phi_stmt_32_update_completed__ps :
          phi_stmt_32_entry_sample_req_ps phi_stmt_32_loopback_sample_req_ps : 
          phi_stmt_32_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_32
          // start:  PHI statement phi_stmt_37
          // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_37_sample_start_] 
          $T[phi_stmt_37_sample_completed_] 
          $T[phi_stmt_37_update_start_] 
          $T[phi_stmt_37_update_completed_] 
          $T[phi_stmt_37_sample_start__ps] 
          phi_stmt_37_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_37_sample_completed__ps] 
          phi_stmt_37_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_37_update_start__ps] 
          phi_stmt_37_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_37_update_completed__ps] 
          phi_stmt_37_update_completed_ <-& (phi_stmt_37_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_37_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_37_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_37_update_start_)
          $T[phi_stmt_37_loopback_trigger] 
          phi_stmt_37_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_37_loopback_sample_req] 
          $T[phi_stmt_37_loopback_sample_req_ps] 
          phi_stmt_37_loopback_sample_req <-& (phi_stmt_37_loopback_sample_req_ps)
          phi_stmt_37_loopback_sample_req &-> ($null)
          $T[phi_stmt_37_entry_trigger] 
          phi_stmt_37_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_37_entry_sample_req] 
          $T[phi_stmt_37_entry_sample_req_ps] 
          phi_stmt_37_entry_sample_req <-& (phi_stmt_37_entry_sample_req_ps)
          phi_stmt_37_entry_sample_req &-> ($null)
          phi_stmt_37_update_start_ o<-& (phi_stmt_37_update_completed_ 0)
          phi_stmt_37_sample_start_ o<-& (phi_stmt_37_sample_completed_ 1)
          $T[phi_stmt_37_merged_reqs] 
          $T[phi_stmt_37_phi_mux_ack] 
          $T[phi_stmt_37_phi_mux_ack_ps] 
          phi_stmt_37_phi_mux_ack_ps <-& (phi_stmt_37_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_37_update_completed_)
          $T[type_cast_40_sample_start__ps] 
          $T[type_cast_40_sample_completed__ps] 
          $T[type_cast_40_update_start__ps] 
          $T[type_cast_40_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_40_sample_start_] 
          $T[type_cast_40_sample_completed_] 
          type_cast_40_sample_completed_ <-& (type_cast_40_sample_start_)
          $T[type_cast_40_update_start_] 
          $T [type_cast_40_update_completed_] $delay 
          type_cast_40_update_completed_ <-& (type_cast_40_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_40_sample_start_ <-& (type_cast_40_sample_start__ps)
          type_cast_40_update_start_ <-& (type_cast_40_update_start__ps)
          // Phi complete dependency.
          type_cast_40_sample_completed__ps <-& (type_cast_40_sample_completed_)
          type_cast_40_update_completed__ps <-& (type_cast_40_update_completed_)
          $T[R_nval_2_41_sample_start__ps] 
          $T[R_nval_2_41_sample_completed__ps] 
          $T[R_nval_2_41_update_start__ps] 
          $T[R_nval_2_41_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_2_41_sample_start_] 
          $T[R_nval_2_41_sample_completed_] 
          $T[R_nval_2_41_update_start_] 
          $T[R_nval_2_41_update_completed_] 
          ;;[R_nval_2_41_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_2_41_sample_start_ &-> (R_nval_2_41_Sample)
          R_nval_2_41_sample_completed_ <-& (R_nval_2_41_Sample)
          ;;[R_nval_2_41_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_2_41_update_start_ &-> (R_nval_2_41_Update)
          R_nval_2_41_update_completed_ <-& (R_nval_2_41_Update)
          // RAW reenables for nval_2
          // Phi start dependency for implicit/constant alternative.
          R_nval_2_41_sample_start_ <-& (R_nval_2_41_sample_start__ps)
          R_nval_2_41_update_start_ <-& (R_nval_2_41_update_start__ps)
          // Phi complete dependency.
          R_nval_2_41_sample_completed__ps <-& (R_nval_2_41_sample_completed_)
          R_nval_2_41_update_completed__ps <-& (R_nval_2_41_update_completed_)
          $phisequencer [ phi_stmt_37_phi_seq] : 
          phi_stmt_37_entry_trigger type_cast_40_sample_start__ps type_cast_40_sample_completed__ps type_cast_40_update_start__ps type_cast_40_update_completed__ps phi_stmt_37_loopback_trigger R_nval_2_41_sample_start__ps R_nval_2_41_sample_completed__ps R_nval_2_41_update_start__ps R_nval_2_41_update_completed__ps :
          phi_stmt_37_sample_start__ps phi_stmt_37_sample_completed__ps phi_stmt_37_update_start__ps phi_stmt_37_update_completed__ps :
          phi_stmt_37_entry_sample_req_ps phi_stmt_37_loopback_sample_req_ps : 
          phi_stmt_37_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_37
          // start:  PHI statement phi_stmt_42
          // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_42_sample_start_] 
          $T[phi_stmt_42_sample_completed_] 
          $T[phi_stmt_42_update_start_] 
          $T[phi_stmt_42_update_completed_] 
          $T[phi_stmt_42_sample_start__ps] 
          phi_stmt_42_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_42_sample_completed__ps] 
          phi_stmt_42_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_42_update_start__ps] 
          phi_stmt_42_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_42_update_completed__ps] 
          phi_stmt_42_update_completed_ <-& (phi_stmt_42_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_42_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_42_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_42_update_start_)
          $T[phi_stmt_42_loopback_trigger] 
          phi_stmt_42_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_42_loopback_sample_req] 
          $T[phi_stmt_42_loopback_sample_req_ps] 
          phi_stmt_42_loopback_sample_req <-& (phi_stmt_42_loopback_sample_req_ps)
          phi_stmt_42_loopback_sample_req &-> ($null)
          $T[phi_stmt_42_entry_trigger] 
          phi_stmt_42_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_42_entry_sample_req] 
          $T[phi_stmt_42_entry_sample_req_ps] 
          phi_stmt_42_entry_sample_req <-& (phi_stmt_42_entry_sample_req_ps)
          phi_stmt_42_entry_sample_req &-> ($null)
          phi_stmt_42_update_start_ o<-& (phi_stmt_42_update_completed_ 0)
          phi_stmt_42_sample_start_ o<-& (phi_stmt_42_sample_completed_ 1)
          $T[phi_stmt_42_merged_reqs] 
          $T[phi_stmt_42_phi_mux_ack] 
          $T[phi_stmt_42_phi_mux_ack_ps] 
          phi_stmt_42_phi_mux_ack_ps <-& (phi_stmt_42_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_42_update_completed_)
          $T[type_cast_45_sample_start__ps] 
          $T[type_cast_45_sample_completed__ps] 
          $T[type_cast_45_update_start__ps] 
          $T[type_cast_45_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_45_sample_start_] 
          $T[type_cast_45_sample_completed_] 
          type_cast_45_sample_completed_ <-& (type_cast_45_sample_start_)
          $T[type_cast_45_update_start_] 
          $T [type_cast_45_update_completed_] $delay 
          type_cast_45_update_completed_ <-& (type_cast_45_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_45_sample_start_ <-& (type_cast_45_sample_start__ps)
          type_cast_45_update_start_ <-& (type_cast_45_update_start__ps)
          // Phi complete dependency.
          type_cast_45_sample_completed__ps <-& (type_cast_45_sample_completed_)
          type_cast_45_update_completed__ps <-& (type_cast_45_update_completed_)
          $T[R_nval_3_46_sample_start__ps] 
          $T[R_nval_3_46_sample_completed__ps] 
          $T[R_nval_3_46_update_start__ps] 
          $T[R_nval_3_46_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_3_46_sample_start_] 
          $T[R_nval_3_46_sample_completed_] 
          $T[R_nval_3_46_update_start_] 
          $T[R_nval_3_46_update_completed_] 
          ;;[R_nval_3_46_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_3_46_sample_start_ &-> (R_nval_3_46_Sample)
          R_nval_3_46_sample_completed_ <-& (R_nval_3_46_Sample)
          ;;[R_nval_3_46_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_3_46_update_start_ &-> (R_nval_3_46_Update)
          R_nval_3_46_update_completed_ <-& (R_nval_3_46_Update)
          // RAW reenables for nval_3
          // Phi start dependency for implicit/constant alternative.
          R_nval_3_46_sample_start_ <-& (R_nval_3_46_sample_start__ps)
          R_nval_3_46_update_start_ <-& (R_nval_3_46_update_start__ps)
          // Phi complete dependency.
          R_nval_3_46_sample_completed__ps <-& (R_nval_3_46_sample_completed_)
          R_nval_3_46_update_completed__ps <-& (R_nval_3_46_update_completed_)
          $phisequencer [ phi_stmt_42_phi_seq] : 
          phi_stmt_42_entry_trigger type_cast_45_sample_start__ps type_cast_45_sample_completed__ps type_cast_45_update_start__ps type_cast_45_update_completed__ps phi_stmt_42_loopback_trigger R_nval_3_46_sample_start__ps R_nval_3_46_sample_completed__ps R_nval_3_46_update_start__ps R_nval_3_46_update_completed__ps :
          phi_stmt_42_sample_start__ps phi_stmt_42_sample_completed__ps phi_stmt_42_update_start__ps phi_stmt_42_update_completed__ps :
          phi_stmt_42_entry_sample_req_ps phi_stmt_42_loopback_sample_req_ps : 
          phi_stmt_42_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_42
          // start: WAR dependencies for Cr
          // done: WAR dependencies for Cr
          // start:  			$volatile Cr := ( $slice C 7 2 )  $buffering 1
          //  file .Aa/mvp.opt.aa, line 44
          // volatile! 
          // Source expression
          // ( $slice C 7 2 ) 
          // C
          // Target expression
          // (as target) Cr
          // start: WAR dependencies for Cr
          // done: WAR dependencies for Cr
          // end:  			$volatile Cr := ( $slice C 7 2 )  $buffering 1
          // start:  			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 45
          // Source expression
          // A_0[R][Cr]
          $T[array_obj_ref_56_base_address_calculated] 
          $T[array_obj_ref_56_sample_start_] 
          $T[array_obj_ref_56_sample_completed_] 
          $T[array_obj_ref_56_update_start_] 
          $T[array_obj_ref_56_update_completed_] 
          $T[array_obj_ref_56_word_address_calculated] 
          $T[array_obj_ref_56_root_address_calculated] 
          $T[array_obj_ref_56_offset_calculated] 
          $T[array_obj_ref_56_index_resized_0] 
          $T[array_obj_ref_56_index_scaled_0] 
          $T[array_obj_ref_56_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_56_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_56_index_computed_0
          ;;[array_obj_ref_56_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_56_index_computed_0 &-> (array_obj_ref_56_index_resize_0)
          array_obj_ref_56_index_resized_0 <-& (array_obj_ref_56_index_resize_0)
          $T[array_obj_ref_56_index_scale_0_sample_start] 
          $T[array_obj_ref_56_index_scale_0_sample_complete] 
          $T[array_obj_ref_56_index_scale_0_update_start] 
          $T[array_obj_ref_56_index_scale_0_update_complete] 
          ;;[array_obj_ref_56_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_56_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_56_index_resized_0 &-> (array_obj_ref_56_index_scale_0_sample_start)
          array_obj_ref_56_index_scale_0_sample_start &-> (array_obj_ref_56_index_scale_0_Sample)
          array_obj_ref_56_index_scale_0_sample_complete <-& (array_obj_ref_56_index_scale_0_Sample)
          array_obj_ref_56_index_scale_0_update_start &-> (array_obj_ref_56_index_scale_0_Update)
          array_obj_ref_56_index_scale_0_update_complete <-& (array_obj_ref_56_index_scale_0_Update)
          array_obj_ref_56_index_scaled_0 <-& (array_obj_ref_56_index_scale_0_update_complete)
          array_obj_ref_56_index_scale_0_sample_start o<-& (array_obj_ref_56_index_scale_0_sample_complete 1)
          array_obj_ref_56_index_scale_0_update_start o<-& (array_obj_ref_56_index_scale_0_update_complete 0)
          $T[array_obj_ref_56_index_resized_1] 
          $T[array_obj_ref_56_index_scaled_1] 
          $T[array_obj_ref_56_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_56_index_computed_1
          array_obj_ref_56_index_computed_1 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_56_index_computed_1
          ;;[array_obj_ref_56_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_56_index_computed_1 &-> (array_obj_ref_56_index_resize_1)
          array_obj_ref_56_index_resized_1 <-& (array_obj_ref_56_index_resize_1)
          ;;[array_obj_ref_56_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_56_index_resized_1 &-> (array_obj_ref_56_index_scale_1)
          array_obj_ref_56_index_scaled_1 <-& (array_obj_ref_56_index_scale_1)
          $T[array_obj_ref_56_partial_sum_1_sample_start] 
          $T[array_obj_ref_56_partial_sum_1_sample_complete] 
          $T[array_obj_ref_56_partial_sum_1_update_start] 
          $T[array_obj_ref_56_partial_sum_1_update_complete] 
          ;;[array_obj_ref_56_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_56_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_56_partial_sum_1_sample_start &-> (array_obj_ref_56_partial_sum_1_Sample)
          array_obj_ref_56_partial_sum_1_sample_complete <-& (array_obj_ref_56_partial_sum_1_Sample)
          array_obj_ref_56_partial_sum_1_update_start &-> (array_obj_ref_56_partial_sum_1_Update)
          array_obj_ref_56_partial_sum_1_update_complete <-& (array_obj_ref_56_partial_sum_1_Update)
          array_obj_ref_56_partial_sum_1_sample_start o<-& (array_obj_ref_56_partial_sum_1_sample_complete 1)
          array_obj_ref_56_partial_sum_1_update_start o<-& (array_obj_ref_56_partial_sum_1_update_complete 0)
          array_obj_ref_56_partial_sum_1_sample_start <-& (array_obj_ref_56_index_scaled_0)
          array_obj_ref_56_partial_sum_1_sample_start <-& (array_obj_ref_56_index_scaled_1)
          array_obj_ref_56_index_scaled_0 o<-& (array_obj_ref_56_partial_sum_1_sample_complete 1)
          phi_stmt_22_update_start_ o<-& (array_obj_ref_56_partial_sum_1_sample_complete 1)
          array_obj_ref_56_offset_calculated <-& (array_obj_ref_56_partial_sum_1_update_complete)
          ;;[array_obj_ref_56_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_56_partial_sum_1_update_complete &-> (array_obj_ref_56_final_index_sum_regn)
          array_obj_ref_56_offset_calculated <-& (array_obj_ref_56_final_index_sum_regn)
          ;;[array_obj_ref_56_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_56_offset_calculated &-> (array_obj_ref_56_base_plus_offset)
          array_obj_ref_56_root_address_calculated <-& (array_obj_ref_56_base_plus_offset)
          ;;[array_obj_ref_56_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_56_root_address_calculated &-> (array_obj_ref_56_word_addrgen)
          array_obj_ref_56_word_address_calculated <-& (array_obj_ref_56_word_addrgen)
          ;;[array_obj_ref_56_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_56_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_56_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_56_sample_start_ <-& (array_obj_ref_56_word_address_calculated)
          // reenable-joins
          array_obj_ref_56_partial_sum_1_update_start o<-& (array_obj_ref_56_sample_completed_ 0)
          array_obj_ref_56_sample_start_ &-> (array_obj_ref_56_Sample)
          array_obj_ref_56_sample_completed_ <-& (array_obj_ref_56_Sample)
          array_obj_ref_56_sample_completed_ &-> ($null)
          array_obj_ref_56_update_start_ &-> (array_obj_ref_56_Update)
          array_obj_ref_56_update_completed_ <-& (array_obj_ref_56_Update)
          // self-release: 
          array_obj_ref_56_sample_start_ o<-& (array_obj_ref_56_sample_completed_ 1)
          $null &-> (array_obj_ref_56_update_start_)
          array_obj_ref_56_update_start_ o<-& (array_obj_ref_56_update_completed_ 0)
          // Target expression
          // (as target) a_rc_0
          // start: WAR dependencies for a_rc_0
          // done: WAR dependencies for a_rc_0
          // end:  			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 46
          // Source expression
          // A_1[R][Cr]
          $T[array_obj_ref_61_base_address_calculated] 
          $T[array_obj_ref_61_sample_start_] 
          $T[array_obj_ref_61_sample_completed_] 
          $T[array_obj_ref_61_update_start_] 
          $T[array_obj_ref_61_update_completed_] 
          $T[array_obj_ref_61_word_address_calculated] 
          $T[array_obj_ref_61_root_address_calculated] 
          $T[array_obj_ref_61_offset_calculated] 
          $T[array_obj_ref_61_index_resized_0] 
          $T[array_obj_ref_61_index_scaled_0] 
          $T[array_obj_ref_61_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_61_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_61_index_computed_0
          ;;[array_obj_ref_61_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_61_index_computed_0 &-> (array_obj_ref_61_index_resize_0)
          array_obj_ref_61_index_resized_0 <-& (array_obj_ref_61_index_resize_0)
          $T[array_obj_ref_61_index_scale_0_sample_start] 
          $T[array_obj_ref_61_index_scale_0_sample_complete] 
          $T[array_obj_ref_61_index_scale_0_update_start] 
          $T[array_obj_ref_61_index_scale_0_update_complete] 
          ;;[array_obj_ref_61_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_61_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_61_index_resized_0 &-> (array_obj_ref_61_index_scale_0_sample_start)
          array_obj_ref_61_index_scale_0_sample_start &-> (array_obj_ref_61_index_scale_0_Sample)
          array_obj_ref_61_index_scale_0_sample_complete <-& (array_obj_ref_61_index_scale_0_Sample)
          array_obj_ref_61_index_scale_0_update_start &-> (array_obj_ref_61_index_scale_0_Update)
          array_obj_ref_61_index_scale_0_update_complete <-& (array_obj_ref_61_index_scale_0_Update)
          array_obj_ref_61_index_scaled_0 <-& (array_obj_ref_61_index_scale_0_update_complete)
          array_obj_ref_61_index_scale_0_sample_start o<-& (array_obj_ref_61_index_scale_0_sample_complete 1)
          array_obj_ref_61_index_scale_0_update_start o<-& (array_obj_ref_61_index_scale_0_update_complete 0)
          $T[array_obj_ref_61_index_resized_1] 
          $T[array_obj_ref_61_index_scaled_1] 
          $T[array_obj_ref_61_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_61_index_computed_1
          array_obj_ref_61_index_computed_1 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_61_index_computed_1
          ;;[array_obj_ref_61_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_61_index_computed_1 &-> (array_obj_ref_61_index_resize_1)
          array_obj_ref_61_index_resized_1 <-& (array_obj_ref_61_index_resize_1)
          ;;[array_obj_ref_61_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_61_index_resized_1 &-> (array_obj_ref_61_index_scale_1)
          array_obj_ref_61_index_scaled_1 <-& (array_obj_ref_61_index_scale_1)
          $T[array_obj_ref_61_partial_sum_1_sample_start] 
          $T[array_obj_ref_61_partial_sum_1_sample_complete] 
          $T[array_obj_ref_61_partial_sum_1_update_start] 
          $T[array_obj_ref_61_partial_sum_1_update_complete] 
          ;;[array_obj_ref_61_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_61_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_61_partial_sum_1_sample_start &-> (array_obj_ref_61_partial_sum_1_Sample)
          array_obj_ref_61_partial_sum_1_sample_complete <-& (array_obj_ref_61_partial_sum_1_Sample)
          array_obj_ref_61_partial_sum_1_update_start &-> (array_obj_ref_61_partial_sum_1_Update)
          array_obj_ref_61_partial_sum_1_update_complete <-& (array_obj_ref_61_partial_sum_1_Update)
          array_obj_ref_61_partial_sum_1_sample_start o<-& (array_obj_ref_61_partial_sum_1_sample_complete 1)
          array_obj_ref_61_partial_sum_1_update_start o<-& (array_obj_ref_61_partial_sum_1_update_complete 0)
          array_obj_ref_61_partial_sum_1_sample_start <-& (array_obj_ref_61_index_scaled_0)
          array_obj_ref_61_partial_sum_1_sample_start <-& (array_obj_ref_61_index_scaled_1)
          array_obj_ref_61_index_scaled_0 o<-& (array_obj_ref_61_partial_sum_1_sample_complete 1)
          phi_stmt_22_update_start_ o<-& (array_obj_ref_61_partial_sum_1_sample_complete 1)
          array_obj_ref_61_offset_calculated <-& (array_obj_ref_61_partial_sum_1_update_complete)
          ;;[array_obj_ref_61_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_61_partial_sum_1_update_complete &-> (array_obj_ref_61_final_index_sum_regn)
          array_obj_ref_61_offset_calculated <-& (array_obj_ref_61_final_index_sum_regn)
          ;;[array_obj_ref_61_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_61_offset_calculated &-> (array_obj_ref_61_base_plus_offset)
          array_obj_ref_61_root_address_calculated <-& (array_obj_ref_61_base_plus_offset)
          ;;[array_obj_ref_61_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_61_root_address_calculated &-> (array_obj_ref_61_word_addrgen)
          array_obj_ref_61_word_address_calculated <-& (array_obj_ref_61_word_addrgen)
          ;;[array_obj_ref_61_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_61_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_61_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_61_sample_start_ <-& (array_obj_ref_61_word_address_calculated)
          // reenable-joins
          array_obj_ref_61_partial_sum_1_update_start o<-& (array_obj_ref_61_sample_completed_ 0)
          array_obj_ref_61_sample_start_ &-> (array_obj_ref_61_Sample)
          array_obj_ref_61_sample_completed_ <-& (array_obj_ref_61_Sample)
          array_obj_ref_61_sample_completed_ &-> ($null)
          array_obj_ref_61_update_start_ &-> (array_obj_ref_61_Update)
          array_obj_ref_61_update_completed_ <-& (array_obj_ref_61_Update)
          // self-release: 
          array_obj_ref_61_sample_start_ o<-& (array_obj_ref_61_sample_completed_ 1)
          $null &-> (array_obj_ref_61_update_start_)
          array_obj_ref_61_update_start_ o<-& (array_obj_ref_61_update_completed_ 0)
          // Target expression
          // (as target) a_rc_1
          // start: WAR dependencies for a_rc_1
          // done: WAR dependencies for a_rc_1
          // end:  			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 47
          // Source expression
          // A_2[R][Cr]
          $T[array_obj_ref_66_base_address_calculated] 
          $T[array_obj_ref_66_sample_start_] 
          $T[array_obj_ref_66_sample_completed_] 
          $T[array_obj_ref_66_update_start_] 
          $T[array_obj_ref_66_update_completed_] 
          $T[array_obj_ref_66_word_address_calculated] 
          $T[array_obj_ref_66_root_address_calculated] 
          $T[array_obj_ref_66_offset_calculated] 
          $T[array_obj_ref_66_index_resized_0] 
          $T[array_obj_ref_66_index_scaled_0] 
          $T[array_obj_ref_66_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_66_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_66_index_computed_0
          ;;[array_obj_ref_66_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_66_index_computed_0 &-> (array_obj_ref_66_index_resize_0)
          array_obj_ref_66_index_resized_0 <-& (array_obj_ref_66_index_resize_0)
          $T[array_obj_ref_66_index_scale_0_sample_start] 
          $T[array_obj_ref_66_index_scale_0_sample_complete] 
          $T[array_obj_ref_66_index_scale_0_update_start] 
          $T[array_obj_ref_66_index_scale_0_update_complete] 
          ;;[array_obj_ref_66_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_66_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_66_index_resized_0 &-> (array_obj_ref_66_index_scale_0_sample_start)
          array_obj_ref_66_index_scale_0_sample_start &-> (array_obj_ref_66_index_scale_0_Sample)
          array_obj_ref_66_index_scale_0_sample_complete <-& (array_obj_ref_66_index_scale_0_Sample)
          array_obj_ref_66_index_scale_0_update_start &-> (array_obj_ref_66_index_scale_0_Update)
          array_obj_ref_66_index_scale_0_update_complete <-& (array_obj_ref_66_index_scale_0_Update)
          array_obj_ref_66_index_scaled_0 <-& (array_obj_ref_66_index_scale_0_update_complete)
          array_obj_ref_66_index_scale_0_sample_start o<-& (array_obj_ref_66_index_scale_0_sample_complete 1)
          array_obj_ref_66_index_scale_0_update_start o<-& (array_obj_ref_66_index_scale_0_update_complete 0)
          $T[array_obj_ref_66_index_resized_1] 
          $T[array_obj_ref_66_index_scaled_1] 
          $T[array_obj_ref_66_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_66_index_computed_1
          array_obj_ref_66_index_computed_1 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_66_index_computed_1
          ;;[array_obj_ref_66_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_66_index_computed_1 &-> (array_obj_ref_66_index_resize_1)
          array_obj_ref_66_index_resized_1 <-& (array_obj_ref_66_index_resize_1)
          ;;[array_obj_ref_66_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_66_index_resized_1 &-> (array_obj_ref_66_index_scale_1)
          array_obj_ref_66_index_scaled_1 <-& (array_obj_ref_66_index_scale_1)
          $T[array_obj_ref_66_partial_sum_1_sample_start] 
          $T[array_obj_ref_66_partial_sum_1_sample_complete] 
          $T[array_obj_ref_66_partial_sum_1_update_start] 
          $T[array_obj_ref_66_partial_sum_1_update_complete] 
          ;;[array_obj_ref_66_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_66_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_66_partial_sum_1_sample_start &-> (array_obj_ref_66_partial_sum_1_Sample)
          array_obj_ref_66_partial_sum_1_sample_complete <-& (array_obj_ref_66_partial_sum_1_Sample)
          array_obj_ref_66_partial_sum_1_update_start &-> (array_obj_ref_66_partial_sum_1_Update)
          array_obj_ref_66_partial_sum_1_update_complete <-& (array_obj_ref_66_partial_sum_1_Update)
          array_obj_ref_66_partial_sum_1_sample_start o<-& (array_obj_ref_66_partial_sum_1_sample_complete 1)
          array_obj_ref_66_partial_sum_1_update_start o<-& (array_obj_ref_66_partial_sum_1_update_complete 0)
          array_obj_ref_66_partial_sum_1_sample_start <-& (array_obj_ref_66_index_scaled_0)
          array_obj_ref_66_partial_sum_1_sample_start <-& (array_obj_ref_66_index_scaled_1)
          array_obj_ref_66_index_scaled_0 o<-& (array_obj_ref_66_partial_sum_1_sample_complete 1)
          phi_stmt_22_update_start_ o<-& (array_obj_ref_66_partial_sum_1_sample_complete 1)
          array_obj_ref_66_offset_calculated <-& (array_obj_ref_66_partial_sum_1_update_complete)
          ;;[array_obj_ref_66_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_66_partial_sum_1_update_complete &-> (array_obj_ref_66_final_index_sum_regn)
          array_obj_ref_66_offset_calculated <-& (array_obj_ref_66_final_index_sum_regn)
          ;;[array_obj_ref_66_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_66_offset_calculated &-> (array_obj_ref_66_base_plus_offset)
          array_obj_ref_66_root_address_calculated <-& (array_obj_ref_66_base_plus_offset)
          ;;[array_obj_ref_66_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_66_root_address_calculated &-> (array_obj_ref_66_word_addrgen)
          array_obj_ref_66_word_address_calculated <-& (array_obj_ref_66_word_addrgen)
          ;;[array_obj_ref_66_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_66_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_66_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_66_sample_start_ <-& (array_obj_ref_66_word_address_calculated)
          // reenable-joins
          array_obj_ref_66_partial_sum_1_update_start o<-& (array_obj_ref_66_sample_completed_ 0)
          array_obj_ref_66_sample_start_ &-> (array_obj_ref_66_Sample)
          array_obj_ref_66_sample_completed_ <-& (array_obj_ref_66_Sample)
          array_obj_ref_66_sample_completed_ &-> ($null)
          array_obj_ref_66_update_start_ &-> (array_obj_ref_66_Update)
          array_obj_ref_66_update_completed_ <-& (array_obj_ref_66_Update)
          // self-release: 
          array_obj_ref_66_sample_start_ o<-& (array_obj_ref_66_sample_completed_ 1)
          $null &-> (array_obj_ref_66_update_start_)
          array_obj_ref_66_update_start_ o<-& (array_obj_ref_66_update_completed_ 0)
          // Target expression
          // (as target) a_rc_2
          // start: WAR dependencies for a_rc_2
          // done: WAR dependencies for a_rc_2
          // end:  			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 48
          // Source expression
          // A_3[R][Cr]
          $T[array_obj_ref_71_base_address_calculated] 
          $T[array_obj_ref_71_sample_start_] 
          $T[array_obj_ref_71_sample_completed_] 
          $T[array_obj_ref_71_update_start_] 
          $T[array_obj_ref_71_update_completed_] 
          $T[array_obj_ref_71_word_address_calculated] 
          $T[array_obj_ref_71_root_address_calculated] 
          $T[array_obj_ref_71_offset_calculated] 
          $T[array_obj_ref_71_index_resized_0] 
          $T[array_obj_ref_71_index_scaled_0] 
          $T[array_obj_ref_71_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_71_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_71_index_computed_0
          ;;[array_obj_ref_71_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_71_index_computed_0 &-> (array_obj_ref_71_index_resize_0)
          array_obj_ref_71_index_resized_0 <-& (array_obj_ref_71_index_resize_0)
          $T[array_obj_ref_71_index_scale_0_sample_start] 
          $T[array_obj_ref_71_index_scale_0_sample_complete] 
          $T[array_obj_ref_71_index_scale_0_update_start] 
          $T[array_obj_ref_71_index_scale_0_update_complete] 
          ;;[array_obj_ref_71_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_71_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_71_index_resized_0 &-> (array_obj_ref_71_index_scale_0_sample_start)
          array_obj_ref_71_index_scale_0_sample_start &-> (array_obj_ref_71_index_scale_0_Sample)
          array_obj_ref_71_index_scale_0_sample_complete <-& (array_obj_ref_71_index_scale_0_Sample)
          array_obj_ref_71_index_scale_0_update_start &-> (array_obj_ref_71_index_scale_0_Update)
          array_obj_ref_71_index_scale_0_update_complete <-& (array_obj_ref_71_index_scale_0_Update)
          array_obj_ref_71_index_scaled_0 <-& (array_obj_ref_71_index_scale_0_update_complete)
          array_obj_ref_71_index_scale_0_sample_start o<-& (array_obj_ref_71_index_scale_0_sample_complete 1)
          array_obj_ref_71_index_scale_0_update_start o<-& (array_obj_ref_71_index_scale_0_update_complete 0)
          $T[array_obj_ref_71_index_resized_1] 
          $T[array_obj_ref_71_index_scaled_1] 
          $T[array_obj_ref_71_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_71_index_computed_1
          array_obj_ref_71_index_computed_1 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_71_index_computed_1
          ;;[array_obj_ref_71_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_71_index_computed_1 &-> (array_obj_ref_71_index_resize_1)
          array_obj_ref_71_index_resized_1 <-& (array_obj_ref_71_index_resize_1)
          ;;[array_obj_ref_71_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_71_index_resized_1 &-> (array_obj_ref_71_index_scale_1)
          array_obj_ref_71_index_scaled_1 <-& (array_obj_ref_71_index_scale_1)
          $T[array_obj_ref_71_partial_sum_1_sample_start] 
          $T[array_obj_ref_71_partial_sum_1_sample_complete] 
          $T[array_obj_ref_71_partial_sum_1_update_start] 
          $T[array_obj_ref_71_partial_sum_1_update_complete] 
          ;;[array_obj_ref_71_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_71_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_71_partial_sum_1_sample_start &-> (array_obj_ref_71_partial_sum_1_Sample)
          array_obj_ref_71_partial_sum_1_sample_complete <-& (array_obj_ref_71_partial_sum_1_Sample)
          array_obj_ref_71_partial_sum_1_update_start &-> (array_obj_ref_71_partial_sum_1_Update)
          array_obj_ref_71_partial_sum_1_update_complete <-& (array_obj_ref_71_partial_sum_1_Update)
          array_obj_ref_71_partial_sum_1_sample_start o<-& (array_obj_ref_71_partial_sum_1_sample_complete 1)
          array_obj_ref_71_partial_sum_1_update_start o<-& (array_obj_ref_71_partial_sum_1_update_complete 0)
          array_obj_ref_71_partial_sum_1_sample_start <-& (array_obj_ref_71_index_scaled_0)
          array_obj_ref_71_partial_sum_1_sample_start <-& (array_obj_ref_71_index_scaled_1)
          array_obj_ref_71_index_scaled_0 o<-& (array_obj_ref_71_partial_sum_1_sample_complete 1)
          phi_stmt_22_update_start_ o<-& (array_obj_ref_71_partial_sum_1_sample_complete 1)
          array_obj_ref_71_offset_calculated <-& (array_obj_ref_71_partial_sum_1_update_complete)
          ;;[array_obj_ref_71_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_71_partial_sum_1_update_complete &-> (array_obj_ref_71_final_index_sum_regn)
          array_obj_ref_71_offset_calculated <-& (array_obj_ref_71_final_index_sum_regn)
          ;;[array_obj_ref_71_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_71_offset_calculated &-> (array_obj_ref_71_base_plus_offset)
          array_obj_ref_71_root_address_calculated <-& (array_obj_ref_71_base_plus_offset)
          ;;[array_obj_ref_71_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_71_root_address_calculated &-> (array_obj_ref_71_word_addrgen)
          array_obj_ref_71_word_address_calculated <-& (array_obj_ref_71_word_addrgen)
          ;;[array_obj_ref_71_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_71_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_71_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_71_sample_start_ <-& (array_obj_ref_71_word_address_calculated)
          // reenable-joins
          array_obj_ref_71_partial_sum_1_update_start o<-& (array_obj_ref_71_sample_completed_ 0)
          array_obj_ref_71_sample_start_ &-> (array_obj_ref_71_Sample)
          array_obj_ref_71_sample_completed_ <-& (array_obj_ref_71_Sample)
          array_obj_ref_71_sample_completed_ &-> ($null)
          array_obj_ref_71_update_start_ &-> (array_obj_ref_71_Update)
          array_obj_ref_71_update_completed_ <-& (array_obj_ref_71_Update)
          // self-release: 
          array_obj_ref_71_sample_start_ o<-& (array_obj_ref_71_sample_completed_ 1)
          $null &-> (array_obj_ref_71_update_start_)
          array_obj_ref_71_update_start_ o<-& (array_obj_ref_71_update_completed_ 0)
          // Target expression
          // (as target) a_rc_3
          // start: WAR dependencies for a_rc_3
          // done: WAR dependencies for a_rc_3
          // end:  			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 49
          // Source expression
          // x_0[Cr]
          $T[array_obj_ref_75_base_address_calculated] 
          $T[array_obj_ref_75_sample_start_] 
          $T[array_obj_ref_75_sample_completed_] 
          $T[array_obj_ref_75_update_start_] 
          $T[array_obj_ref_75_update_completed_] 
          $T[array_obj_ref_75_word_address_calculated] 
          $T[array_obj_ref_75_root_address_calculated] 
          $T[array_obj_ref_75_offset_calculated] 
          $T[array_obj_ref_75_index_resized_0] 
          $T[array_obj_ref_75_index_scaled_0] 
          $T[array_obj_ref_75_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_75_index_computed_0
          array_obj_ref_75_index_computed_0 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_75_index_computed_0
          ;;[array_obj_ref_75_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_75_index_computed_0 &-> (array_obj_ref_75_index_resize_0)
          array_obj_ref_75_index_resized_0 <-& (array_obj_ref_75_index_resize_0)
          ;;[array_obj_ref_75_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_75_index_resized_0 &-> (array_obj_ref_75_index_scale_0)
          array_obj_ref_75_index_scaled_0 <-& (array_obj_ref_75_index_scale_0)
          ;;[array_obj_ref_75_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_75_index_scaled_0 &-> (array_obj_ref_75_final_index_sum_regn)
          array_obj_ref_75_offset_calculated <-& (array_obj_ref_75_final_index_sum_regn)
          ;;[array_obj_ref_75_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_75_offset_calculated &-> (array_obj_ref_75_base_plus_offset)
          array_obj_ref_75_root_address_calculated <-& (array_obj_ref_75_base_plus_offset)
          ;;[array_obj_ref_75_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_75_root_address_calculated &-> (array_obj_ref_75_word_addrgen)
          array_obj_ref_75_word_address_calculated <-& (array_obj_ref_75_word_addrgen)
          ;;[array_obj_ref_75_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_75_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_75_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_75_sample_start_ <-& (array_obj_ref_75_word_address_calculated)
          // reenable-joins
          phi_stmt_22_update_start_ o<-& (array_obj_ref_75_sample_completed_ 0)
          array_obj_ref_75_sample_start_ &-> (array_obj_ref_75_Sample)
          array_obj_ref_75_sample_completed_ <-& (array_obj_ref_75_Sample)
          array_obj_ref_75_sample_completed_ &-> ($null)
          array_obj_ref_75_update_start_ &-> (array_obj_ref_75_Update)
          array_obj_ref_75_update_completed_ <-& (array_obj_ref_75_Update)
          // self-release: 
          array_obj_ref_75_sample_start_ o<-& (array_obj_ref_75_sample_completed_ 1)
          $null &-> (array_obj_ref_75_update_start_)
          array_obj_ref_75_update_start_ o<-& (array_obj_ref_75_update_completed_ 0)
          // Target expression
          // (as target) xval_0
          // start: WAR dependencies for xval_0
          // done: WAR dependencies for xval_0
          // end:  			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 50
          // Source expression
          // x_1[Cr]
          $T[array_obj_ref_79_base_address_calculated] 
          $T[array_obj_ref_79_sample_start_] 
          $T[array_obj_ref_79_sample_completed_] 
          $T[array_obj_ref_79_update_start_] 
          $T[array_obj_ref_79_update_completed_] 
          $T[array_obj_ref_79_word_address_calculated] 
          $T[array_obj_ref_79_root_address_calculated] 
          $T[array_obj_ref_79_offset_calculated] 
          $T[array_obj_ref_79_index_resized_0] 
          $T[array_obj_ref_79_index_scaled_0] 
          $T[array_obj_ref_79_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_79_index_computed_0
          array_obj_ref_79_index_computed_0 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_79_index_computed_0
          ;;[array_obj_ref_79_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_79_index_computed_0 &-> (array_obj_ref_79_index_resize_0)
          array_obj_ref_79_index_resized_0 <-& (array_obj_ref_79_index_resize_0)
          ;;[array_obj_ref_79_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_79_index_resized_0 &-> (array_obj_ref_79_index_scale_0)
          array_obj_ref_79_index_scaled_0 <-& (array_obj_ref_79_index_scale_0)
          ;;[array_obj_ref_79_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_79_index_scaled_0 &-> (array_obj_ref_79_final_index_sum_regn)
          array_obj_ref_79_offset_calculated <-& (array_obj_ref_79_final_index_sum_regn)
          ;;[array_obj_ref_79_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_79_offset_calculated &-> (array_obj_ref_79_base_plus_offset)
          array_obj_ref_79_root_address_calculated <-& (array_obj_ref_79_base_plus_offset)
          ;;[array_obj_ref_79_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_79_root_address_calculated &-> (array_obj_ref_79_word_addrgen)
          array_obj_ref_79_word_address_calculated <-& (array_obj_ref_79_word_addrgen)
          ;;[array_obj_ref_79_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_79_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_79_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_79_sample_start_ <-& (array_obj_ref_79_word_address_calculated)
          // reenable-joins
          phi_stmt_22_update_start_ o<-& (array_obj_ref_79_sample_completed_ 0)
          array_obj_ref_79_sample_start_ &-> (array_obj_ref_79_Sample)
          array_obj_ref_79_sample_completed_ <-& (array_obj_ref_79_Sample)
          array_obj_ref_79_sample_completed_ &-> ($null)
          array_obj_ref_79_update_start_ &-> (array_obj_ref_79_Update)
          array_obj_ref_79_update_completed_ <-& (array_obj_ref_79_Update)
          // self-release: 
          array_obj_ref_79_sample_start_ o<-& (array_obj_ref_79_sample_completed_ 1)
          $null &-> (array_obj_ref_79_update_start_)
          array_obj_ref_79_update_start_ o<-& (array_obj_ref_79_update_completed_ 0)
          // Target expression
          // (as target) xval_1
          // start: WAR dependencies for xval_1
          // done: WAR dependencies for xval_1
          // end:  			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 51
          // Source expression
          // x_2[Cr]
          $T[array_obj_ref_83_base_address_calculated] 
          $T[array_obj_ref_83_sample_start_] 
          $T[array_obj_ref_83_sample_completed_] 
          $T[array_obj_ref_83_update_start_] 
          $T[array_obj_ref_83_update_completed_] 
          $T[array_obj_ref_83_word_address_calculated] 
          $T[array_obj_ref_83_root_address_calculated] 
          $T[array_obj_ref_83_offset_calculated] 
          $T[array_obj_ref_83_index_resized_0] 
          $T[array_obj_ref_83_index_scaled_0] 
          $T[array_obj_ref_83_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_83_index_computed_0
          array_obj_ref_83_index_computed_0 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_83_index_computed_0
          ;;[array_obj_ref_83_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_83_index_computed_0 &-> (array_obj_ref_83_index_resize_0)
          array_obj_ref_83_index_resized_0 <-& (array_obj_ref_83_index_resize_0)
          ;;[array_obj_ref_83_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_83_index_resized_0 &-> (array_obj_ref_83_index_scale_0)
          array_obj_ref_83_index_scaled_0 <-& (array_obj_ref_83_index_scale_0)
          ;;[array_obj_ref_83_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_83_index_scaled_0 &-> (array_obj_ref_83_final_index_sum_regn)
          array_obj_ref_83_offset_calculated <-& (array_obj_ref_83_final_index_sum_regn)
          ;;[array_obj_ref_83_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_83_offset_calculated &-> (array_obj_ref_83_base_plus_offset)
          array_obj_ref_83_root_address_calculated <-& (array_obj_ref_83_base_plus_offset)
          ;;[array_obj_ref_83_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_83_root_address_calculated &-> (array_obj_ref_83_word_addrgen)
          array_obj_ref_83_word_address_calculated <-& (array_obj_ref_83_word_addrgen)
          ;;[array_obj_ref_83_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_83_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_83_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_83_sample_start_ <-& (array_obj_ref_83_word_address_calculated)
          // reenable-joins
          phi_stmt_22_update_start_ o<-& (array_obj_ref_83_sample_completed_ 0)
          array_obj_ref_83_sample_start_ &-> (array_obj_ref_83_Sample)
          array_obj_ref_83_sample_completed_ <-& (array_obj_ref_83_Sample)
          array_obj_ref_83_sample_completed_ &-> ($null)
          array_obj_ref_83_update_start_ &-> (array_obj_ref_83_Update)
          array_obj_ref_83_update_completed_ <-& (array_obj_ref_83_Update)
          // self-release: 
          array_obj_ref_83_sample_start_ o<-& (array_obj_ref_83_sample_completed_ 1)
          $null &-> (array_obj_ref_83_update_start_)
          array_obj_ref_83_update_start_ o<-& (array_obj_ref_83_update_completed_ 0)
          // Target expression
          // (as target) xval_2
          // start: WAR dependencies for xval_2
          // done: WAR dependencies for xval_2
          // end:  			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 52
          // Source expression
          // x_3[Cr]
          $T[array_obj_ref_87_base_address_calculated] 
          $T[array_obj_ref_87_sample_start_] 
          $T[array_obj_ref_87_sample_completed_] 
          $T[array_obj_ref_87_update_start_] 
          $T[array_obj_ref_87_update_completed_] 
          $T[array_obj_ref_87_word_address_calculated] 
          $T[array_obj_ref_87_root_address_calculated] 
          $T[array_obj_ref_87_offset_calculated] 
          $T[array_obj_ref_87_index_resized_0] 
          $T[array_obj_ref_87_index_scaled_0] 
          $T[array_obj_ref_87_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_87_index_computed_0
          array_obj_ref_87_index_computed_0 <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_87_index_computed_0
          ;;[array_obj_ref_87_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_87_index_computed_0 &-> (array_obj_ref_87_index_resize_0)
          array_obj_ref_87_index_resized_0 <-& (array_obj_ref_87_index_resize_0)
          ;;[array_obj_ref_87_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_87_index_resized_0 &-> (array_obj_ref_87_index_scale_0)
          array_obj_ref_87_index_scaled_0 <-& (array_obj_ref_87_index_scale_0)
          ;;[array_obj_ref_87_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_87_index_scaled_0 &-> (array_obj_ref_87_final_index_sum_regn)
          array_obj_ref_87_offset_calculated <-& (array_obj_ref_87_final_index_sum_regn)
          ;;[array_obj_ref_87_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_87_offset_calculated &-> (array_obj_ref_87_base_plus_offset)
          array_obj_ref_87_root_address_calculated <-& (array_obj_ref_87_base_plus_offset)
          ;;[array_obj_ref_87_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_87_root_address_calculated &-> (array_obj_ref_87_word_addrgen)
          array_obj_ref_87_word_address_calculated <-& (array_obj_ref_87_word_addrgen)
          ;;[array_obj_ref_87_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_87_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_87_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_87_sample_start_ <-& (array_obj_ref_87_word_address_calculated)
          // reenable-joins
          phi_stmt_22_update_start_ o<-& (array_obj_ref_87_sample_completed_ 0)
          array_obj_ref_87_sample_start_ &-> (array_obj_ref_87_Sample)
          array_obj_ref_87_sample_completed_ <-& (array_obj_ref_87_Sample)
          array_obj_ref_87_sample_completed_ &-> ($null)
          array_obj_ref_87_update_start_ &-> (array_obj_ref_87_Update)
          array_obj_ref_87_update_completed_ <-& (array_obj_ref_87_Update)
          // self-release: 
          array_obj_ref_87_sample_start_ o<-& (array_obj_ref_87_sample_completed_ 1)
          $null &-> (array_obj_ref_87_update_start_)
          array_obj_ref_87_update_start_ o<-& (array_obj_ref_87_update_completed_ 0)
          // Target expression
          // (as target) xval_3
          // start: WAR dependencies for xval_3
          // done: WAR dependencies for xval_3
          // end:  			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 53
          $T[assign_stmt_91_sample_start_] 
          $T[assign_stmt_91_sample_completed_] 
          $T[assign_stmt_91_update_start_] 
          $T[assign_stmt_91_update_completed_] 
          // Source expression
          // val_0
          // Target expression
          // (as target) val_0_90_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_91_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_91_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_91_sample_start_ &-> (assign_stmt_91_Sample)
          assign_stmt_91_sample_completed_ <-& (assign_stmt_91_Sample)
          assign_stmt_91_sample_completed_ &-> ($null)
          assign_stmt_91_update_start_ &-> (assign_stmt_91_Update)
          assign_stmt_91_update_completed_ <-& (assign_stmt_91_Update)
          // start: Forward dependencies from val_0 to transition assign_stmt_91_sample_start_
          assign_stmt_91_sample_start_ <-& (phi_stmt_27_update_completed_)
          // done: Forward dependencies from val_0 to transition assign_stmt_91_sample_start_
          // RAW reenables for val_0
          phi_stmt_27_update_start_ o<-& (assign_stmt_91_sample_completed_ 0)
          // self-release: 
          assign_stmt_91_sample_start_ o<-& (assign_stmt_91_sample_completed_ 1)
          $null &-> (assign_stmt_91_update_start_)
          assign_stmt_91_update_start_ o<-& (assign_stmt_91_update_completed_ 0)
          // start: WAR dependencies for val_0_90_delayed_5_0
          // done: WAR dependencies for val_0_90_delayed_5_0
          // end:  			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_0
          // WAR dependency: Read: nval_0 before Write: 			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          array_obj_ref_56_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (array_obj_ref_56_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_75_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (array_obj_ref_75_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_91_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (assign_stmt_91_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_0
          // start:  			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 54
          // volatile! 
          // Source expression
          // (val_0_90_delayed_5_0 + (a_rc_0 * xval_0))
          // val_0_90_delayed_5_0
          // (a_rc_0 * xval_0)
          // a_rc_0
          // xval_0
          // Target expression
          // (as target) nval_0
          // start: WAR dependencies for nval_0
          // WAR dependency: Read: nval_0 before Write: 			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          array_obj_ref_56_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (array_obj_ref_56_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_75_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (array_obj_ref_75_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_91_update_start_ <-& (phi_stmt_27_sample_completed_)
          phi_stmt_27_sample_start_ o<-& (assign_stmt_91_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_0
          // end:  			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          // start:  			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 56
          $T[assign_stmt_106_sample_start_] 
          $T[assign_stmt_106_sample_completed_] 
          $T[assign_stmt_106_update_start_] 
          $T[assign_stmt_106_update_completed_] 
          // Source expression
          // val_1
          // Target expression
          // (as target) val_1_102_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_106_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_106_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_106_sample_start_ &-> (assign_stmt_106_Sample)
          assign_stmt_106_sample_completed_ <-& (assign_stmt_106_Sample)
          assign_stmt_106_sample_completed_ &-> ($null)
          assign_stmt_106_update_start_ &-> (assign_stmt_106_Update)
          assign_stmt_106_update_completed_ <-& (assign_stmt_106_Update)
          // start: Forward dependencies from val_1 to transition assign_stmt_106_sample_start_
          assign_stmt_106_sample_start_ <-& (phi_stmt_32_update_completed_)
          // done: Forward dependencies from val_1 to transition assign_stmt_106_sample_start_
          // RAW reenables for val_1
          phi_stmt_32_update_start_ o<-& (assign_stmt_106_sample_completed_ 0)
          // self-release: 
          assign_stmt_106_sample_start_ o<-& (assign_stmt_106_sample_completed_ 1)
          $null &-> (assign_stmt_106_update_start_)
          assign_stmt_106_update_start_ o<-& (assign_stmt_106_update_completed_ 0)
          // start: WAR dependencies for val_1_102_delayed_5_0
          // done: WAR dependencies for val_1_102_delayed_5_0
          // end:  			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_1
          // WAR dependency: Read: nval_1 before Write: 			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          array_obj_ref_61_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (array_obj_ref_61_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_79_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (array_obj_ref_79_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_106_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (assign_stmt_106_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_1
          // start:  			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 57
          // volatile! 
          // Source expression
          // (val_1_102_delayed_5_0 + (a_rc_1 * xval_1))
          // val_1_102_delayed_5_0
          // (a_rc_1 * xval_1)
          // a_rc_1
          // xval_1
          // Target expression
          // (as target) nval_1
          // start: WAR dependencies for nval_1
          // WAR dependency: Read: nval_1 before Write: 			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          array_obj_ref_61_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (array_obj_ref_61_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_79_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (array_obj_ref_79_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_106_update_start_ <-& (phi_stmt_32_sample_completed_)
          phi_stmt_32_sample_start_ o<-& (assign_stmt_106_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_1
          // end:  			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          // start:  			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 59
          $T[assign_stmt_121_sample_start_] 
          $T[assign_stmt_121_sample_completed_] 
          $T[assign_stmt_121_update_start_] 
          $T[assign_stmt_121_update_completed_] 
          // Source expression
          // val_2
          // Target expression
          // (as target) val_2_114_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_121_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_121_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_121_sample_start_ &-> (assign_stmt_121_Sample)
          assign_stmt_121_sample_completed_ <-& (assign_stmt_121_Sample)
          assign_stmt_121_sample_completed_ &-> ($null)
          assign_stmt_121_update_start_ &-> (assign_stmt_121_Update)
          assign_stmt_121_update_completed_ <-& (assign_stmt_121_Update)
          // start: Forward dependencies from val_2 to transition assign_stmt_121_sample_start_
          assign_stmt_121_sample_start_ <-& (phi_stmt_37_update_completed_)
          // done: Forward dependencies from val_2 to transition assign_stmt_121_sample_start_
          // RAW reenables for val_2
          phi_stmt_37_update_start_ o<-& (assign_stmt_121_sample_completed_ 0)
          // self-release: 
          assign_stmt_121_sample_start_ o<-& (assign_stmt_121_sample_completed_ 1)
          $null &-> (assign_stmt_121_update_start_)
          assign_stmt_121_update_start_ o<-& (assign_stmt_121_update_completed_ 0)
          // start: WAR dependencies for val_2_114_delayed_5_0
          // done: WAR dependencies for val_2_114_delayed_5_0
          // end:  			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_2
          // WAR dependency: Read: nval_2 before Write: 			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          array_obj_ref_66_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (array_obj_ref_66_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_83_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (array_obj_ref_83_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_121_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (assign_stmt_121_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_2
          // start:  			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 60
          // volatile! 
          // Source expression
          // (val_2_114_delayed_5_0 + (a_rc_2 * xval_2))
          // val_2_114_delayed_5_0
          // (a_rc_2 * xval_2)
          // a_rc_2
          // xval_2
          // Target expression
          // (as target) nval_2
          // start: WAR dependencies for nval_2
          // WAR dependency: Read: nval_2 before Write: 			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          array_obj_ref_66_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (array_obj_ref_66_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_83_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (array_obj_ref_83_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_121_update_start_ <-& (phi_stmt_37_sample_completed_)
          phi_stmt_37_sample_start_ o<-& (assign_stmt_121_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_2
          // end:  			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          // start:  			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 62
          $T[assign_stmt_136_sample_start_] 
          $T[assign_stmt_136_sample_completed_] 
          $T[assign_stmt_136_update_start_] 
          $T[assign_stmt_136_update_completed_] 
          // Source expression
          // val_3
          // Target expression
          // (as target) val_3_126_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_136_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_136_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_136_sample_start_ &-> (assign_stmt_136_Sample)
          assign_stmt_136_sample_completed_ <-& (assign_stmt_136_Sample)
          assign_stmt_136_sample_completed_ &-> ($null)
          assign_stmt_136_update_start_ &-> (assign_stmt_136_Update)
          assign_stmt_136_update_completed_ <-& (assign_stmt_136_Update)
          // start: Forward dependencies from val_3 to transition assign_stmt_136_sample_start_
          assign_stmt_136_sample_start_ <-& (phi_stmt_42_update_completed_)
          // done: Forward dependencies from val_3 to transition assign_stmt_136_sample_start_
          // RAW reenables for val_3
          phi_stmt_42_update_start_ o<-& (assign_stmt_136_sample_completed_ 0)
          // self-release: 
          assign_stmt_136_sample_start_ o<-& (assign_stmt_136_sample_completed_ 1)
          $null &-> (assign_stmt_136_update_start_)
          assign_stmt_136_update_start_ o<-& (assign_stmt_136_update_completed_ 0)
          // start: WAR dependencies for val_3_126_delayed_5_0
          // done: WAR dependencies for val_3_126_delayed_5_0
          // end:  			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_3
          // WAR dependency: Read: nval_3 before Write: 			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          array_obj_ref_71_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (array_obj_ref_71_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_87_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (array_obj_ref_87_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_136_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (assign_stmt_136_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_3
          // start:  			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 63
          // volatile! 
          // Source expression
          // (val_3_126_delayed_5_0 + (a_rc_3 * xval_3))
          // val_3_126_delayed_5_0
          // (a_rc_3 * xval_3)
          // a_rc_3
          // xval_3
          // Target expression
          // (as target) nval_3
          // start: WAR dependencies for nval_3
          // WAR dependency: Read: nval_3 before Write: 			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          array_obj_ref_71_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (array_obj_ref_71_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_87_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (array_obj_ref_87_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_136_update_start_ <-& (phi_stmt_42_sample_completed_)
          phi_stmt_42_sample_start_ o<-& (assign_stmt_136_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_3
          // end:  			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          // start:  			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          //  file .Aa/mvp.opt.aa, line 65
          // Source expression
          // (C + 4 )
          $T[ADD_u8_u8_152_sample_start_] 
          $T[ADD_u8_u8_152_sample_completed_] 
          $T[ADD_u8_u8_152_update_start_] 
          $T[ADD_u8_u8_152_update_completed_] 
          // C
          // start: Forward dependencies from C to transition ADD_u8_u8_152_sample_start_
          ADD_u8_u8_152_sample_start_ <-& (phi_stmt_22_update_completed_)
          // done: Forward dependencies from C to transition ADD_u8_u8_152_sample_start_
          ;;[ADD_u8_u8_152_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_152_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_152_sample_start_ &-> (ADD_u8_u8_152_Sample)
          ADD_u8_u8_152_sample_completed_ <-& (ADD_u8_u8_152_Sample)
          ADD_u8_u8_152_sample_completed_ &-> ($null)
          ADD_u8_u8_152_update_start_ &-> (ADD_u8_u8_152_Update)
          ADD_u8_u8_152_update_completed_ <-& (ADD_u8_u8_152_Update)
          // RAW reenables for C
          phi_stmt_22_update_start_ o<-& (ADD_u8_u8_152_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_152_sample_start_ o<-& (ADD_u8_u8_152_sample_completed_ 1)
          $null &-> (ADD_u8_u8_152_update_start_)
          ADD_u8_u8_152_update_start_ o<-& (ADD_u8_u8_152_update_completed_ 0)
          // Target expression
          // (as target) nC
          // start: WAR dependencies for nC
          // WAR dependency: Read: nC before Write: 			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          ADD_u8_u8_152_update_start_ <-& (phi_stmt_22_sample_completed_)
          phi_stmt_22_sample_start_ o<-& (ADD_u8_u8_152_update_completed_ 0)
          // WAR dependency: release  Read: nC with Write: 			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          // done: WAR dependencies for nC
          // end:  			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
          // (nC < 32 )
          // nC
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (nC < 32 ) to transition condition_evaluated
          condition_evaluated <-& (ADD_u8_u8_152_update_completed_)
          // done: Forward dependencies from (nC < 32 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_2
          //  array_obj_ref_66 load
          // reenable across ring for memory space memory_space_2
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_5
          //  array_obj_ref_79 load
          // reenable across ring for memory space memory_space_5
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_1
          //  array_obj_ref_61 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_0
          //  array_obj_ref_56 load
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_4
          //  array_obj_ref_75 load
          // reenable across ring for memory space memory_space_4
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_7
          //  array_obj_ref_87 load
          // reenable across ring for memory space memory_space_7
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_6
          //  array_obj_ref_83 load
          // reenable across ring for memory space memory_space_6
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_3
          //  array_obj_ref_71 load
          // reenable across ring for memory space memory_space_3
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_20__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_20_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_20__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_20_loop_body : condition_evaluated
        $bind do_while_stmt_20__entry__  => do_while_stmt_20_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_20_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_20__exit__)
      }
      do_while_stmt_20__entry__ |-> (do_while_stmt_20)
      do_while_stmt_20__exit__ <-| (do_while_stmt_20)
      do_while_stmt_20__entry__ <-| (branch_block_stmt_19__entry__)
      do_while_stmt_20__exit__ |-> (branch_block_stmt_19__exit__)
    }
    ::[assign_stmt_168] 
    {
      // start:  	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
      //  file .Aa/mvp.opt.aa, line 69
      // Source expression
      // (nval_0 + (nval_1 + (nval_2 + nval_3)))
      $T[ADD_u32_u32_167_sample_start_] 
      $T[ADD_u32_u32_167_sample_completed_] 
      $T[ADD_u32_u32_167_update_start_] 
      $T[ADD_u32_u32_167_update_completed_] 
      // nval_0
      // (nval_1 + (nval_2 + nval_3))
      // nval_1
      // (nval_2 + nval_3)
      // nval_2
      // nval_3
      // start: Forward dependencies from nval_0 to transition ADD_u32_u32_167_sample_start_
      // done: Forward dependencies from nval_0 to transition ADD_u32_u32_167_sample_start_
      // start: Forward dependencies from (nval_1 + (nval_2 + nval_3)) to transition ADD_u32_u32_167_sample_start_
      // done: Forward dependencies from (nval_1 + (nval_2 + nval_3)) to transition ADD_u32_u32_167_sample_start_
      ;;[ADD_u32_u32_167_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[ADD_u32_u32_167_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      ADD_u32_u32_167_sample_start_ &-> (ADD_u32_u32_167_Sample)
      ADD_u32_u32_167_sample_completed_ <-& (ADD_u32_u32_167_Sample)
      ADD_u32_u32_167_sample_completed_ &-> ($null)
      ADD_u32_u32_167_update_start_ &-> (ADD_u32_u32_167_Update)
      ADD_u32_u32_167_update_completed_ <-& (ADD_u32_u32_167_Update)
      // Target expression
      // (as target) result
      // result
      // write to interface object
      // start: WAR dependencies for result
      // done: WAR dependencies for result
      // result
      // write to interface object
      // end:  	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dotP_even%mmloop%
    //  file .Aa/mvp.opt.aa, line 32
    // constant-object-declarations for block %dotP_even%mmloop
    //  file .Aa/mvp.opt.aa, line 28
    // constant-object-declarations for block %dotP_even
    //  file .Aa/mvp.opt.aa, line 23
    // constant-declarations for block %dotP_even%mmloop
    //  file .Aa/mvp.opt.aa, line 28
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 30
    // 32 
    $constant $W[konst_156_wire_constant] : $int<8> := _b00100000// 32
    // constant-declarations for block %dotP_even%mmloop%
    //  file .Aa/mvp.opt.aa, line 32
    // constant-declarations for phi:  			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 33
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_25_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 35
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_30_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 37
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_35_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 39
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_40_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 41
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_45_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // A_0[R][Cr]
    $constant $W[array_obj_ref_56_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_56_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_56_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_56_word_offset_0] : $int<8> := _b00000000// 0
    // A_1[R][Cr]
    $constant $W[array_obj_ref_61_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_61_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_61_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_61_word_offset_0] : $int<8> := _b00000000// 0
    // A_2[R][Cr]
    $constant $W[array_obj_ref_66_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_66_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_66_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_66_word_offset_0] : $int<8> := _b00000000// 0
    // A_3[R][Cr]
    $constant $W[array_obj_ref_71_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_71_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_71_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_71_word_offset_0] : $int<8> := _b00000000// 0
    // x_0[Cr]
    $constant $W[array_obj_ref_75_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_75_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_75_word_offset_0] : $int<3> := _b000// 0
    // x_1[Cr]
    $constant $W[array_obj_ref_79_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_79_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_79_word_offset_0] : $int<3> := _b000// 0
    // x_2[Cr]
    $constant $W[array_obj_ref_83_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_83_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_83_word_offset_0] : $int<3> := _b000// 0
    // x_3[Cr]
    $constant $W[array_obj_ref_87_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_87_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_87_word_offset_0] : $int<3> := _b000// 0
    // 4 
    $constant $W[konst_151_wire_constant] : $int<8> := _b00000100// 4
    // block %dotP_even%mmloop
    //  file .Aa/mvp.opt.aa, line 28
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 30
    // (nC < 32 )
    $intermediate $W[ULT_u8_u1_157_wire] : $int<1>
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 32
    // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 33
    $W[nC_153_26_buffered] : $int<8>
    // C
    $W[C_22] : $int<8>
    // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 35
    $W[nval_0_98_31_buffered] : $int<32>
    // val_0
    $W[val_0_27] : $int<32>
    // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 37
    $W[nval_1_113_36_buffered] : $int<32>
    // val_1
    $W[val_1_32] : $int<32>
    // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 39
    $W[nval_2_128_41_buffered] : $int<32>
    // val_2
    $W[val_2_37] : $int<32>
    // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 41
    $W[nval_3_143_46_buffered] : $int<32>
    // val_3
    $W[val_3_42] : $int<32>
    // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 44
    // Cr
    $W[Cr_52] : $int<6>
    // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 45
    // A_0[R][Cr]
    $intermediate $W[R_R_54_resized] : $int<8>
    $intermediate $W[R_R_54_scaled] : $int<8>
    $intermediate $W[R_Cr_55_resized] : $int<8>
    $intermediate $W[R_Cr_55_scaled] : $int<8>
    $intermediate $W[array_obj_ref_56_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_56_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_56_root_address] : $int<8>
    $W[array_obj_ref_56_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_56_data_0] : $int<32>
    // a_rc_0
    $W[a_rc_0_57] : $int<32>
    // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 46
    // A_1[R][Cr]
    $intermediate $W[R_R_59_resized] : $int<8>
    $intermediate $W[R_R_59_scaled] : $int<8>
    $intermediate $W[R_Cr_60_resized] : $int<8>
    $intermediate $W[R_Cr_60_scaled] : $int<8>
    $intermediate $W[array_obj_ref_61_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_61_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_61_root_address] : $int<8>
    $W[array_obj_ref_61_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_61_data_0] : $int<32>
    // a_rc_1
    $W[a_rc_1_62] : $int<32>
    // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 47
    // A_2[R][Cr]
    $intermediate $W[R_R_64_resized] : $int<8>
    $intermediate $W[R_R_64_scaled] : $int<8>
    $intermediate $W[R_Cr_65_resized] : $int<8>
    $intermediate $W[R_Cr_65_scaled] : $int<8>
    $intermediate $W[array_obj_ref_66_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_66_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_66_root_address] : $int<8>
    $W[array_obj_ref_66_word_address_0] : $pointer<memory_space_2>
    $W[array_obj_ref_66_data_0] : $int<32>
    // a_rc_2
    $W[a_rc_2_67] : $int<32>
    // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 48
    // A_3[R][Cr]
    $intermediate $W[R_R_69_resized] : $int<8>
    $intermediate $W[R_R_69_scaled] : $int<8>
    $intermediate $W[R_Cr_70_resized] : $int<8>
    $intermediate $W[R_Cr_70_scaled] : $int<8>
    $intermediate $W[array_obj_ref_71_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_71_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_71_root_address] : $int<8>
    $W[array_obj_ref_71_word_address_0] : $pointer<memory_space_3>
    $W[array_obj_ref_71_data_0] : $int<32>
    // a_rc_3
    $W[a_rc_3_72] : $int<32>
    // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 49
    // x_0[Cr]
    $intermediate $W[R_Cr_74_resized] : $int<3>
    $intermediate $W[R_Cr_74_scaled] : $int<3>
    $intermediate $W[array_obj_ref_75_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_75_root_address] : $int<3>
    $W[array_obj_ref_75_word_address_0] : $pointer<memory_space_4>
    $W[array_obj_ref_75_data_0] : $int<32>
    // xval_0
    $W[xval_0_76] : $int<32>
    // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 50
    // x_1[Cr]
    $intermediate $W[R_Cr_78_resized] : $int<3>
    $intermediate $W[R_Cr_78_scaled] : $int<3>
    $intermediate $W[array_obj_ref_79_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_79_root_address] : $int<3>
    $W[array_obj_ref_79_word_address_0] : $pointer<memory_space_5>
    $W[array_obj_ref_79_data_0] : $int<32>
    // xval_1
    $W[xval_1_80] : $int<32>
    // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 51
    // x_2[Cr]
    $intermediate $W[R_Cr_82_resized] : $int<3>
    $intermediate $W[R_Cr_82_scaled] : $int<3>
    $intermediate $W[array_obj_ref_83_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_83_root_address] : $int<3>
    $W[array_obj_ref_83_word_address_0] : $pointer<memory_space_6>
    $W[array_obj_ref_83_data_0] : $int<32>
    // xval_2
    $W[xval_2_84] : $int<32>
    // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 52
    // x_3[Cr]
    $intermediate $W[R_Cr_86_resized] : $int<3>
    $intermediate $W[R_Cr_86_scaled] : $int<3>
    $intermediate $W[array_obj_ref_87_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_87_root_address] : $int<3>
    $W[array_obj_ref_87_word_address_0] : $pointer<memory_space_7>
    $W[array_obj_ref_87_data_0] : $int<32>
    // xval_3
    $W[xval_3_88] : $int<32>
    // 			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 53
    // val_0_90_delayed_5_0
    $W[val_0_90_delayed_5_0_91] : $int<32>
    // 			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 54
    // (a_rc_0 * xval_0)
    $intermediate $W[MUL_u32_u32_96_wire] : $int<32>
    // nval_0
    $W[nval_0_98] : $int<32>
    // 			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 56
    // val_1_102_delayed_5_0
    $W[val_1_102_delayed_5_0_106] : $int<32>
    // 			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 57
    // (a_rc_1 * xval_1)
    $intermediate $W[MUL_u32_u32_111_wire] : $int<32>
    // nval_1
    $W[nval_1_113] : $int<32>
    // 			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 59
    // val_2_114_delayed_5_0
    $W[val_2_114_delayed_5_0_121] : $int<32>
    // 			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 60
    // (a_rc_2 * xval_2)
    $intermediate $W[MUL_u32_u32_126_wire] : $int<32>
    // nval_2
    $W[nval_2_128] : $int<32>
    // 			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 62
    // val_3_126_delayed_5_0
    $W[val_3_126_delayed_5_0_136] : $int<32>
    // 			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 63
    // (a_rc_3 * xval_3)
    $intermediate $W[MUL_u32_u32_141_wire] : $int<32>
    // nval_3
    $W[nval_3_143] : $int<32>
    // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
    //  file .Aa/mvp.opt.aa, line 65
    // nC
    $W[nC_153] : $int<8>
    // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 69
    // (nval_2 + nval_3)
    $intermediate $W[ADD_u32_u32_165_wire] : $int<32>
    // (nval_1 + (nval_2 + nval_3))
    $intermediate $W[ADD_u32_u32_166_wire] : $int<32>
    // result
    // datapath-instances for block %dotP_even%mmloop
    //  file .Aa/mvp.opt.aa, line 28
    // datapath-instances for do-while  
    //  file .Aa/mvp.opt.aa, line 30
    // (nC < 32 )
    <[ULT_u8_u1_157_inst] (nC_153 konst_156_wire_constant) (ULT_u8_u1_157_wire)   $flowthrough 
    $delay ULT_u8_u1_157_inst 0
    ==0? [do_while_stmt_20_branch] (ULT_u8_u1_157_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 32
    // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 33
    # := [nC_153_26_buf] (nC_153) (nC_153_26_buffered)     $fullrate
    $buffering $out nC_153_26_buf nC_153_26_buffered  1
    # $phi [phi_stmt_22] (type_cast_25_wire_constant nC_153_26_buffered) ( C_22 ) $fullrate
    // $buffering  $out phi_stmt_22 C_22 2
    // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 35
    # := [nval_0_98_31_buf] (nval_0_98) (nval_0_98_31_buffered)     $fullrate
    $buffering $out nval_0_98_31_buf nval_0_98_31_buffered  1
    # $phi [phi_stmt_27] (type_cast_30_wire_constant nval_0_98_31_buffered) ( val_0_27 ) $fullrate
    // $buffering  $out phi_stmt_27 val_0_27 2
    // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 37
    # := [nval_1_113_36_buf] (nval_1_113) (nval_1_113_36_buffered)     $fullrate
    $buffering $out nval_1_113_36_buf nval_1_113_36_buffered  1
    # $phi [phi_stmt_32] (type_cast_35_wire_constant nval_1_113_36_buffered) ( val_1_32 ) $fullrate
    // $buffering  $out phi_stmt_32 val_1_32 2
    // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 39
    # := [nval_2_128_41_buf] (nval_2_128) (nval_2_128_41_buffered)     $fullrate
    $buffering $out nval_2_128_41_buf nval_2_128_41_buffered  1
    # $phi [phi_stmt_37] (type_cast_40_wire_constant nval_2_128_41_buffered) ( val_2_37 ) $fullrate
    // $buffering  $out phi_stmt_37 val_2_37 2
    // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 41
    # := [nval_3_143_46_buf] (nval_3_143) (nval_3_143_46_buffered)     $fullrate
    $buffering $out nval_3_143_46_buf nval_3_143_46_buffered  1
    # $phi [phi_stmt_42] (type_cast_45_wire_constant nval_3_143_46_buffered) ( val_3_42 ) $fullrate
    // $buffering  $out phi_stmt_42 val_3_42 2
    // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 44
    // ( $slice C 7 2 ) 
    [:] [slice_51_inst] (C_22 7 2) (Cr_52)  $flowthrough
    $delay slice_51_inst 0
    // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 45
    // A_0[R][Cr]
    &/ [array_obj_ref_56_index_0_resize] (R) (R_R_54_resized) 
    $flowthrough 
    *[array_obj_ref_56_index_0_scale] (R_R_54_resized array_obj_ref_56_offset_scale_factor_0) (R_R_54_scaled)    $fullrate
    $buffering  $in array_obj_ref_56_index_0_scale R_R_54_resized 2
    $buffering  $in array_obj_ref_56_index_0_scale array_obj_ref_56_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_56_index_0_scale R_R_54_scaled 2
    $delay array_obj_ref_56_index_0_scale 2
    &/ [array_obj_ref_56_index_1_resize] (Cr_52) (R_Cr_55_resized) 
    $flowthrough 
    &/ [array_obj_ref_56_index_1_rename] (R_Cr_55_resized) (R_Cr_55_scaled) 
    $flowthrough 
    +[array_obj_ref_56_index_sum_1] (R_Cr_55_scaled R_R_54_scaled) (array_obj_ref_56_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_56_index_sum_1 R_Cr_55_scaled 2
    $buffering  $in array_obj_ref_56_index_sum_1 R_R_54_scaled 2
    $buffering  $out array_obj_ref_56_index_sum_1 array_obj_ref_56_index_partial_sum_1 2
    $delay array_obj_ref_56_index_sum_1 2
    &/ [array_obj_ref_56_index_offset] (array_obj_ref_56_index_partial_sum_1) (array_obj_ref_56_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_56_root_address_inst] (array_obj_ref_56_final_offset) (array_obj_ref_56_root_address) 
    $flowthrough 
    &/ [array_obj_ref_56_addr_0] (array_obj_ref_56_root_address) (array_obj_ref_56_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_56_load_0] $from memory_space_0 (array_obj_ref_56_word_address_0) (array_obj_ref_56_data_0) 
    $buffering  $in array_obj_ref_56_load_0 array_obj_ref_56_word_address_0 2
    $buffering  $out array_obj_ref_56_load_0 array_obj_ref_56_data_0 2
    $delay array_obj_ref_56_load_0 5
    &/ [array_obj_ref_56_gather_scatter] (array_obj_ref_56_data_0) (a_rc_0_57) 
    $flowthrough 
    // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 46
    // A_1[R][Cr]
    &/ [array_obj_ref_61_index_0_resize] (R) (R_R_59_resized) 
    $flowthrough 
    *[array_obj_ref_61_index_0_scale] (R_R_59_resized array_obj_ref_61_offset_scale_factor_0) (R_R_59_scaled)    $fullrate
    $buffering  $in array_obj_ref_61_index_0_scale R_R_59_resized 2
    $buffering  $in array_obj_ref_61_index_0_scale array_obj_ref_61_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_61_index_0_scale R_R_59_scaled 2
    $delay array_obj_ref_61_index_0_scale 2
    &/ [array_obj_ref_61_index_1_resize] (Cr_52) (R_Cr_60_resized) 
    $flowthrough 
    &/ [array_obj_ref_61_index_1_rename] (R_Cr_60_resized) (R_Cr_60_scaled) 
    $flowthrough 
    +[array_obj_ref_61_index_sum_1] (R_Cr_60_scaled R_R_59_scaled) (array_obj_ref_61_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_61_index_sum_1 R_Cr_60_scaled 2
    $buffering  $in array_obj_ref_61_index_sum_1 R_R_59_scaled 2
    $buffering  $out array_obj_ref_61_index_sum_1 array_obj_ref_61_index_partial_sum_1 2
    $delay array_obj_ref_61_index_sum_1 2
    &/ [array_obj_ref_61_index_offset] (array_obj_ref_61_index_partial_sum_1) (array_obj_ref_61_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_61_root_address_inst] (array_obj_ref_61_final_offset) (array_obj_ref_61_root_address) 
    $flowthrough 
    &/ [array_obj_ref_61_addr_0] (array_obj_ref_61_root_address) (array_obj_ref_61_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_61_load_0] $from memory_space_1 (array_obj_ref_61_word_address_0) (array_obj_ref_61_data_0) 
    $buffering  $in array_obj_ref_61_load_0 array_obj_ref_61_word_address_0 2
    $buffering  $out array_obj_ref_61_load_0 array_obj_ref_61_data_0 2
    $delay array_obj_ref_61_load_0 5
    &/ [array_obj_ref_61_gather_scatter] (array_obj_ref_61_data_0) (a_rc_1_62) 
    $flowthrough 
    // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 47
    // A_2[R][Cr]
    &/ [array_obj_ref_66_index_0_resize] (R) (R_R_64_resized) 
    $flowthrough 
    *[array_obj_ref_66_index_0_scale] (R_R_64_resized array_obj_ref_66_offset_scale_factor_0) (R_R_64_scaled)    $fullrate
    $buffering  $in array_obj_ref_66_index_0_scale R_R_64_resized 2
    $buffering  $in array_obj_ref_66_index_0_scale array_obj_ref_66_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_66_index_0_scale R_R_64_scaled 2
    $delay array_obj_ref_66_index_0_scale 2
    &/ [array_obj_ref_66_index_1_resize] (Cr_52) (R_Cr_65_resized) 
    $flowthrough 
    &/ [array_obj_ref_66_index_1_rename] (R_Cr_65_resized) (R_Cr_65_scaled) 
    $flowthrough 
    +[array_obj_ref_66_index_sum_1] (R_Cr_65_scaled R_R_64_scaled) (array_obj_ref_66_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_66_index_sum_1 R_Cr_65_scaled 2
    $buffering  $in array_obj_ref_66_index_sum_1 R_R_64_scaled 2
    $buffering  $out array_obj_ref_66_index_sum_1 array_obj_ref_66_index_partial_sum_1 2
    $delay array_obj_ref_66_index_sum_1 2
    &/ [array_obj_ref_66_index_offset] (array_obj_ref_66_index_partial_sum_1) (array_obj_ref_66_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_66_root_address_inst] (array_obj_ref_66_final_offset) (array_obj_ref_66_root_address) 
    $flowthrough 
    &/ [array_obj_ref_66_addr_0] (array_obj_ref_66_root_address) (array_obj_ref_66_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_66_load_0] $from memory_space_2 (array_obj_ref_66_word_address_0) (array_obj_ref_66_data_0) 
    $buffering  $in array_obj_ref_66_load_0 array_obj_ref_66_word_address_0 2
    $buffering  $out array_obj_ref_66_load_0 array_obj_ref_66_data_0 2
    $delay array_obj_ref_66_load_0 5
    &/ [array_obj_ref_66_gather_scatter] (array_obj_ref_66_data_0) (a_rc_2_67) 
    $flowthrough 
    // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 48
    // A_3[R][Cr]
    &/ [array_obj_ref_71_index_0_resize] (R) (R_R_69_resized) 
    $flowthrough 
    *[array_obj_ref_71_index_0_scale] (R_R_69_resized array_obj_ref_71_offset_scale_factor_0) (R_R_69_scaled)    $fullrate
    $buffering  $in array_obj_ref_71_index_0_scale R_R_69_resized 2
    $buffering  $in array_obj_ref_71_index_0_scale array_obj_ref_71_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_71_index_0_scale R_R_69_scaled 2
    $delay array_obj_ref_71_index_0_scale 2
    &/ [array_obj_ref_71_index_1_resize] (Cr_52) (R_Cr_70_resized) 
    $flowthrough 
    &/ [array_obj_ref_71_index_1_rename] (R_Cr_70_resized) (R_Cr_70_scaled) 
    $flowthrough 
    +[array_obj_ref_71_index_sum_1] (R_Cr_70_scaled R_R_69_scaled) (array_obj_ref_71_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_71_index_sum_1 R_Cr_70_scaled 2
    $buffering  $in array_obj_ref_71_index_sum_1 R_R_69_scaled 2
    $buffering  $out array_obj_ref_71_index_sum_1 array_obj_ref_71_index_partial_sum_1 2
    $delay array_obj_ref_71_index_sum_1 2
    &/ [array_obj_ref_71_index_offset] (array_obj_ref_71_index_partial_sum_1) (array_obj_ref_71_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_71_root_address_inst] (array_obj_ref_71_final_offset) (array_obj_ref_71_root_address) 
    $flowthrough 
    &/ [array_obj_ref_71_addr_0] (array_obj_ref_71_root_address) (array_obj_ref_71_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_71_load_0] $from memory_space_3 (array_obj_ref_71_word_address_0) (array_obj_ref_71_data_0) 
    $buffering  $in array_obj_ref_71_load_0 array_obj_ref_71_word_address_0 2
    $buffering  $out array_obj_ref_71_load_0 array_obj_ref_71_data_0 2
    $delay array_obj_ref_71_load_0 5
    &/ [array_obj_ref_71_gather_scatter] (array_obj_ref_71_data_0) (a_rc_3_72) 
    $flowthrough 
    // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 49
    // x_0[Cr]
    &/ [array_obj_ref_75_index_0_resize] (Cr_52) (R_Cr_74_resized) 
    $flowthrough 
    &/ [array_obj_ref_75_index_0_rename] (R_Cr_74_resized) (R_Cr_74_scaled) 
    $flowthrough 
    &/ [array_obj_ref_75_index_offset] (R_Cr_74_scaled) (array_obj_ref_75_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_75_root_address_inst] (array_obj_ref_75_final_offset) (array_obj_ref_75_root_address) 
    $flowthrough 
    &/ [array_obj_ref_75_addr_0] (array_obj_ref_75_root_address) (array_obj_ref_75_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_75_load_0] $from memory_space_4 (array_obj_ref_75_word_address_0) (array_obj_ref_75_data_0) 
    $buffering  $in array_obj_ref_75_load_0 array_obj_ref_75_word_address_0 2
    $buffering  $out array_obj_ref_75_load_0 array_obj_ref_75_data_0 2
    $delay array_obj_ref_75_load_0 5
    &/ [array_obj_ref_75_gather_scatter] (array_obj_ref_75_data_0) (xval_0_76) 
    $flowthrough 
    // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 50
    // x_1[Cr]
    &/ [array_obj_ref_79_index_0_resize] (Cr_52) (R_Cr_78_resized) 
    $flowthrough 
    &/ [array_obj_ref_79_index_0_rename] (R_Cr_78_resized) (R_Cr_78_scaled) 
    $flowthrough 
    &/ [array_obj_ref_79_index_offset] (R_Cr_78_scaled) (array_obj_ref_79_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_79_root_address_inst] (array_obj_ref_79_final_offset) (array_obj_ref_79_root_address) 
    $flowthrough 
    &/ [array_obj_ref_79_addr_0] (array_obj_ref_79_root_address) (array_obj_ref_79_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_79_load_0] $from memory_space_5 (array_obj_ref_79_word_address_0) (array_obj_ref_79_data_0) 
    $buffering  $in array_obj_ref_79_load_0 array_obj_ref_79_word_address_0 2
    $buffering  $out array_obj_ref_79_load_0 array_obj_ref_79_data_0 2
    $delay array_obj_ref_79_load_0 5
    &/ [array_obj_ref_79_gather_scatter] (array_obj_ref_79_data_0) (xval_1_80) 
    $flowthrough 
    // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 51
    // x_2[Cr]
    &/ [array_obj_ref_83_index_0_resize] (Cr_52) (R_Cr_82_resized) 
    $flowthrough 
    &/ [array_obj_ref_83_index_0_rename] (R_Cr_82_resized) (R_Cr_82_scaled) 
    $flowthrough 
    &/ [array_obj_ref_83_index_offset] (R_Cr_82_scaled) (array_obj_ref_83_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_83_root_address_inst] (array_obj_ref_83_final_offset) (array_obj_ref_83_root_address) 
    $flowthrough 
    &/ [array_obj_ref_83_addr_0] (array_obj_ref_83_root_address) (array_obj_ref_83_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_83_load_0] $from memory_space_6 (array_obj_ref_83_word_address_0) (array_obj_ref_83_data_0) 
    $buffering  $in array_obj_ref_83_load_0 array_obj_ref_83_word_address_0 2
    $buffering  $out array_obj_ref_83_load_0 array_obj_ref_83_data_0 2
    $delay array_obj_ref_83_load_0 5
    &/ [array_obj_ref_83_gather_scatter] (array_obj_ref_83_data_0) (xval_2_84) 
    $flowthrough 
    // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 52
    // x_3[Cr]
    &/ [array_obj_ref_87_index_0_resize] (Cr_52) (R_Cr_86_resized) 
    $flowthrough 
    &/ [array_obj_ref_87_index_0_rename] (R_Cr_86_resized) (R_Cr_86_scaled) 
    $flowthrough 
    &/ [array_obj_ref_87_index_offset] (R_Cr_86_scaled) (array_obj_ref_87_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_87_root_address_inst] (array_obj_ref_87_final_offset) (array_obj_ref_87_root_address) 
    $flowthrough 
    &/ [array_obj_ref_87_addr_0] (array_obj_ref_87_root_address) (array_obj_ref_87_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_87_load_0] $from memory_space_7 (array_obj_ref_87_word_address_0) (array_obj_ref_87_data_0) 
    $buffering  $in array_obj_ref_87_load_0 array_obj_ref_87_word_address_0 2
    $buffering  $out array_obj_ref_87_load_0 array_obj_ref_87_data_0 2
    $delay array_obj_ref_87_load_0 5
    &/ [array_obj_ref_87_gather_scatter] (array_obj_ref_87_data_0) (xval_3_88) 
    $flowthrough 
    // 			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 53
    # := [W_val_0_90_delayed_5_0_89_inst] (val_0_27) (val_0_90_delayed_5_0_91)  $cut_through    $fullrate
    $buffering  $out W_val_0_90_delayed_5_0_89_inst val_0_90_delayed_5_0_91 5
    // 			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 54
    // (a_rc_0 * xval_0)
    *[MUL_u32_u32_96_inst] (a_rc_0_57 xval_0_76) (MUL_u32_u32_96_wire)   $flowthrough 
    $delay MUL_u32_u32_96_inst 0
    // (val_0_90_delayed_5_0 + (a_rc_0 * xval_0))
    +[ADD_u32_u32_97_inst] (val_0_90_delayed_5_0_91 MUL_u32_u32_96_wire) (nval_0_98)   $flowthrough 
    $delay ADD_u32_u32_97_inst 0
    // 			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 56
    # := [W_val_1_102_delayed_5_0_104_inst] (val_1_32) (val_1_102_delayed_5_0_106)  $cut_through    $fullrate
    $buffering  $out W_val_1_102_delayed_5_0_104_inst val_1_102_delayed_5_0_106 5
    // 			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 57
    // (a_rc_1 * xval_1)
    *[MUL_u32_u32_111_inst] (a_rc_1_62 xval_1_80) (MUL_u32_u32_111_wire)   $flowthrough 
    $delay MUL_u32_u32_111_inst 0
    // (val_1_102_delayed_5_0 + (a_rc_1 * xval_1))
    +[ADD_u32_u32_112_inst] (val_1_102_delayed_5_0_106 MUL_u32_u32_111_wire) (nval_1_113)   $flowthrough 
    $delay ADD_u32_u32_112_inst 0
    // 			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 59
    # := [W_val_2_114_delayed_5_0_119_inst] (val_2_37) (val_2_114_delayed_5_0_121)  $cut_through    $fullrate
    $buffering  $out W_val_2_114_delayed_5_0_119_inst val_2_114_delayed_5_0_121 5
    // 			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 60
    // (a_rc_2 * xval_2)
    *[MUL_u32_u32_126_inst] (a_rc_2_67 xval_2_84) (MUL_u32_u32_126_wire)   $flowthrough 
    $delay MUL_u32_u32_126_inst 0
    // (val_2_114_delayed_5_0 + (a_rc_2 * xval_2))
    +[ADD_u32_u32_127_inst] (val_2_114_delayed_5_0_121 MUL_u32_u32_126_wire) (nval_2_128)   $flowthrough 
    $delay ADD_u32_u32_127_inst 0
    // 			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 62
    # := [W_val_3_126_delayed_5_0_134_inst] (val_3_42) (val_3_126_delayed_5_0_136)  $cut_through    $fullrate
    $buffering  $out W_val_3_126_delayed_5_0_134_inst val_3_126_delayed_5_0_136 5
    // 			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 63
    // (a_rc_3 * xval_3)
    *[MUL_u32_u32_141_inst] (a_rc_3_72 xval_3_88) (MUL_u32_u32_141_wire)   $flowthrough 
    $delay MUL_u32_u32_141_inst 0
    // (val_3_126_delayed_5_0 + (a_rc_3 * xval_3))
    +[ADD_u32_u32_142_inst] (val_3_126_delayed_5_0_136 MUL_u32_u32_141_wire) (nval_3_143)   $flowthrough 
    $delay ADD_u32_u32_142_inst 0
    // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
    //  file .Aa/mvp.opt.aa, line 65
    // (C + 4 )
    +[ADD_u8_u8_152_inst] (C_22 konst_151_wire_constant) (nC_153)    $fullrate
    $buffering  $out ADD_u8_u8_152_inst nC_153 2
    $delay ADD_u8_u8_152_inst 1
    // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 69
    // (nval_2 + nval_3)
    +[ADD_u32_u32_165_inst] (nval_2_128 nval_3_143) (ADD_u32_u32_165_wire)   $flowthrough 
    $delay ADD_u32_u32_165_inst 0
    // (nval_1 + (nval_2 + nval_3))
    +[ADD_u32_u32_166_inst] (nval_1_113 ADD_u32_u32_165_wire) (ADD_u32_u32_166_wire)   $flowthrough 
    $delay ADD_u32_u32_166_inst 0
    // (nval_0 + (nval_1 + (nval_2 + nval_3)))
    +[ADD_u32_u32_167_inst] (nval_0_98 ADD_u32_u32_166_wire) (result)   
    $buffering  $out ADD_u32_u32_167_inst result 1
    $delay ADD_u32_u32_167_inst 1
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_20
  //  file .Aa/mvp.opt.aa, line 30
  phi_stmt_22 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_22_entry_sample_req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_22_loopback_sample_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_22_phi_mux_ack)
  nC_153_26_buf <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nC_26_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nC_26_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nC_26_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nC_26_Update/ack)
  phi_stmt_27 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_27_entry_sample_req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_27_loopback_sample_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_27_phi_mux_ack)
  nval_0_98_31_buf <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_0_31_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_0_31_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_0_31_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_0_31_Update/ack)
  phi_stmt_32 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_32_entry_sample_req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_32_loopback_sample_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_32_phi_mux_ack)
  nval_1_113_36_buf <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_1_36_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_1_36_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_1_36_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_1_36_Update/ack)
  phi_stmt_37 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_37_entry_sample_req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_37_loopback_sample_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_37_phi_mux_ack)
  nval_2_128_41_buf <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_2_41_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_2_41_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_2_41_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_2_41_Update/ack)
  phi_stmt_42 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_42_entry_sample_req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_42_loopback_sample_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/phi_stmt_42_phi_mux_ack)
  nval_3_143_46_buf <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_3_46_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_3_46_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_3_46_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/R_nval_3_46_Update/ack)
  // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
  //  file .Aa/mvp.opt.aa, line 44
  // C
  // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 45
  // A_0[R][Cr]
  // R
  array_obj_ref_56_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_resize_0/index_resize_ack)
  array_obj_ref_56_index_0_scale <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_0_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_0_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_0_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_56_index_1_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_resize_1/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_resize_1/index_resize_ack)
  array_obj_ref_56_index_1_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_1/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_index_scale_1/scale_rename_ack)
  array_obj_ref_56_index_sum_1 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_partial_sum_1_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_partial_sum_1_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_partial_sum_1_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_partial_sum_1_Update/ca)
  array_obj_ref_56_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_final_index_sum_regn/ack)
  array_obj_ref_56_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_base_plus_offset/sum_rename_ack)
  array_obj_ref_56_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_word_addrgen/root_register_ack)
  array_obj_ref_56_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Update/array_obj_ref_56_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Update/array_obj_ref_56_Merge/merge_ack)
  array_obj_ref_56_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_56_Update/word_access_complete/word_0/ca)
  // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 46
  // A_1[R][Cr]
  // R
  array_obj_ref_61_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_resize_0/index_resize_ack)
  array_obj_ref_61_index_0_scale <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_0_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_0_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_0_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_61_index_1_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_resize_1/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_resize_1/index_resize_ack)
  array_obj_ref_61_index_1_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_1/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_index_scale_1/scale_rename_ack)
  array_obj_ref_61_index_sum_1 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_partial_sum_1_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_partial_sum_1_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_partial_sum_1_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_partial_sum_1_Update/ca)
  array_obj_ref_61_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_final_index_sum_regn/ack)
  array_obj_ref_61_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_base_plus_offset/sum_rename_ack)
  array_obj_ref_61_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_word_addrgen/root_register_ack)
  array_obj_ref_61_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Update/array_obj_ref_61_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Update/array_obj_ref_61_Merge/merge_ack)
  array_obj_ref_61_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_61_Update/word_access_complete/word_0/ca)
  // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 47
  // A_2[R][Cr]
  // R
  array_obj_ref_66_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_resize_0/index_resize_ack)
  array_obj_ref_66_index_0_scale <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_0_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_0_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_0_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_66_index_1_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_resize_1/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_resize_1/index_resize_ack)
  array_obj_ref_66_index_1_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_1/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_index_scale_1/scale_rename_ack)
  array_obj_ref_66_index_sum_1 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_partial_sum_1_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_partial_sum_1_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_partial_sum_1_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_partial_sum_1_Update/ca)
  array_obj_ref_66_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_final_index_sum_regn/ack)
  array_obj_ref_66_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_base_plus_offset/sum_rename_ack)
  array_obj_ref_66_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_word_addrgen/root_register_ack)
  array_obj_ref_66_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Update/array_obj_ref_66_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Update/array_obj_ref_66_Merge/merge_ack)
  array_obj_ref_66_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_66_Update/word_access_complete/word_0/ca)
  // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 48
  // A_3[R][Cr]
  // R
  array_obj_ref_71_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_resize_0/index_resize_ack)
  array_obj_ref_71_index_0_scale <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_0_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_0_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_0_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_71_index_1_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_resize_1/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_resize_1/index_resize_ack)
  array_obj_ref_71_index_1_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_1/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_index_scale_1/scale_rename_ack)
  array_obj_ref_71_index_sum_1 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_partial_sum_1_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_partial_sum_1_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_partial_sum_1_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_partial_sum_1_Update/ca)
  array_obj_ref_71_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_final_index_sum_regn/ack)
  array_obj_ref_71_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_base_plus_offset/sum_rename_ack)
  array_obj_ref_71_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_word_addrgen/root_register_ack)
  array_obj_ref_71_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Update/array_obj_ref_71_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Update/array_obj_ref_71_Merge/merge_ack)
  array_obj_ref_71_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_71_Update/word_access_complete/word_0/ca)
  // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 49
  // x_0[Cr]
  // Cr
  array_obj_ref_75_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_index_resize_0/index_resize_ack)
  array_obj_ref_75_index_0_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_index_scale_0/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_index_scale_0/scale_rename_ack)
  array_obj_ref_75_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_final_index_sum_regn/ack)
  array_obj_ref_75_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_base_plus_offset/sum_rename_ack)
  array_obj_ref_75_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_word_addrgen/root_register_ack)
  array_obj_ref_75_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Update/array_obj_ref_75_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Update/array_obj_ref_75_Merge/merge_ack)
  array_obj_ref_75_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_75_Update/word_access_complete/word_0/ca)
  // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 50
  // x_1[Cr]
  // Cr
  array_obj_ref_79_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_index_resize_0/index_resize_ack)
  array_obj_ref_79_index_0_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_index_scale_0/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_index_scale_0/scale_rename_ack)
  array_obj_ref_79_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_final_index_sum_regn/ack)
  array_obj_ref_79_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_base_plus_offset/sum_rename_ack)
  array_obj_ref_79_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_word_addrgen/root_register_ack)
  array_obj_ref_79_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Update/array_obj_ref_79_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Update/array_obj_ref_79_Merge/merge_ack)
  array_obj_ref_79_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_79_Update/word_access_complete/word_0/ca)
  // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 51
  // x_2[Cr]
  // Cr
  array_obj_ref_83_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_index_resize_0/index_resize_ack)
  array_obj_ref_83_index_0_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_index_scale_0/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_index_scale_0/scale_rename_ack)
  array_obj_ref_83_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_final_index_sum_regn/ack)
  array_obj_ref_83_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_base_plus_offset/sum_rename_ack)
  array_obj_ref_83_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_word_addrgen/root_register_ack)
  array_obj_ref_83_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Update/array_obj_ref_83_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Update/array_obj_ref_83_Merge/merge_ack)
  array_obj_ref_83_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_83_Update/word_access_complete/word_0/ca)
  // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 52
  // x_3[Cr]
  // Cr
  array_obj_ref_87_index_0_resize <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_index_resize_0/index_resize_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_index_resize_0/index_resize_ack)
  array_obj_ref_87_index_0_rename <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_index_scale_0/scale_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_index_scale_0/scale_rename_ack)
  array_obj_ref_87_index_offset <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_final_index_sum_regn/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_final_index_sum_regn/ack)
  array_obj_ref_87_root_address_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_base_plus_offset/sum_rename_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_base_plus_offset/sum_rename_ack)
  array_obj_ref_87_addr_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_word_addrgen/root_register_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_word_addrgen/root_register_ack)
  array_obj_ref_87_gather_scatter <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Update/array_obj_ref_87_Merge/merge_req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Update/array_obj_ref_87_Merge/merge_ack)
  array_obj_ref_87_load_0 <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Sample/word_access_start/word_0/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Update/word_access_complete/word_0/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Sample/word_access_start/word_0/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/array_obj_ref_87_Update/word_access_complete/word_0/ca)
  // 			val_0_90_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 53
  // val_0
  W_val_0_90_delayed_5_0_89_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_91_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_91_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_91_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_91_Update/ack)
  // 			$volatile nval_0 := (val_0_90_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 54
  // (val_0_90_delayed_5_0 + (a_rc_0 * xval_0))
  // val_0_90_delayed_5_0
  // (a_rc_0 * xval_0)
  // a_rc_0
  // xval_0
  // 			val_1_102_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 56
  // val_1
  W_val_1_102_delayed_5_0_104_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_106_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_106_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_106_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_106_Update/ack)
  // 			$volatile nval_1 := (val_1_102_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 57
  // (val_1_102_delayed_5_0 + (a_rc_1 * xval_1))
  // val_1_102_delayed_5_0
  // (a_rc_1 * xval_1)
  // a_rc_1
  // xval_1
  // 			val_2_114_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 59
  // val_2
  W_val_2_114_delayed_5_0_119_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_121_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_121_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_121_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_121_Update/ack)
  // 			$volatile nval_2 := (val_2_114_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 60
  // (val_2_114_delayed_5_0 + (a_rc_2 * xval_2))
  // val_2_114_delayed_5_0
  // (a_rc_2 * xval_2)
  // a_rc_2
  // xval_2
  // 			val_3_126_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 62
  // val_3
  W_val_3_126_delayed_5_0_134_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_136_Sample/req branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_136_Update/req) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_136_Sample/ack branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/assign_stmt_136_Update/ack)
  // 			$volatile nval_3 := (val_3_126_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 63
  // (val_3_126_delayed_5_0 + (a_rc_3 * xval_3))
  // val_3_126_delayed_5_0
  // (a_rc_3 * xval_3)
  // a_rc_3
  // xval_3
  // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
  //  file .Aa/mvp.opt.aa, line 65
  // (C + 4 )
  // C
  ADD_u8_u8_152_inst <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/ADD_u8_u8_152_Sample/rr branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/ADD_u8_u8_152_Update/cr) (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/ADD_u8_u8_152_Sample/ra branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/ADD_u8_u8_152_Update/ca)
  // (nC < 32 )
  // nC
  do_while_stmt_20_branch <=> (branch_block_stmt_19/do_while_stmt_20/do_while_stmt_20_loop_body/condition_evaluated) (branch_block_stmt_19/do_while_stmt_20/loop_exit/ack branch_block_stmt_19/do_while_stmt_20/loop_taken/ack)
  // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 69
  // (nval_0 + (nval_1 + (nval_2 + nval_3)))
  // nval_0
  // (nval_1 + (nval_2 + nval_3))
  // nval_1
  // (nval_2 + nval_3)
  // nval_2
  // nval_3
  ADD_u32_u32_167_inst <=> (assign_stmt_168/ADD_u32_u32_167_Sample/rr assign_stmt_168/ADD_u32_u32_167_Update/cr) (assign_stmt_168/ADD_u32_u32_167_Sample/ra assign_stmt_168/ADD_u32_u32_167_Update/ca)
}
$module [dotP_odd] 
{
  $in R:$int<8>
  // can point into 
  $out result:$int<32>
  // can point into 
  // pipe-declarations for block %dotP_odd
  //  file .Aa/mvp.opt.aa, line 71
  // pipe-declarations for block %dotP_odd%mmloop
  //  file .Aa/mvp.opt.aa, line 76
  // memory-space 2 is read from.
  // memory-space 5 is read from.
  // memory-space 1 is read from.
  // memory-space 0 is read from.
  // memory-space 4 is read from.
  // memory-space 7 is read from.
  // memory-space 6 is read from.
  // memory-space 3 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_173] // Branch Block  file .Aa/mvp.opt.aa, line 76
    {
      $P [branch_block_stmt_173__entry__]
      branch_block_stmt_173__entry__ <-| ($entry)
      $P [branch_block_stmt_173__exit__]
      branch_block_stmt_173__exit__ |-> ($exit)
      $P [do_while_stmt_174__entry__] 
      $P [do_while_stmt_174__exit__] 
      // do-while-statement  
      //  file .Aa/mvp.opt.aa, line 78
      <o> [do_while_stmt_174]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_174__entry__] 
        $P[do_while_stmt_174__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_174_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_176
          // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_176_sample_start_] 
          $T[phi_stmt_176_sample_completed_] 
          $T[phi_stmt_176_update_start_] 
          $T[phi_stmt_176_update_completed_] 
          $T[phi_stmt_176_sample_start__ps] 
          phi_stmt_176_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_176_sample_completed__ps] 
          phi_stmt_176_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_176_update_start__ps] 
          phi_stmt_176_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_176_update_completed__ps] 
          phi_stmt_176_update_completed_ <-& (phi_stmt_176_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_176_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_176_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_176_update_start_)
          $T[phi_stmt_176_loopback_trigger] 
          phi_stmt_176_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_176_loopback_sample_req] 
          $T[phi_stmt_176_loopback_sample_req_ps] 
          phi_stmt_176_loopback_sample_req <-& (phi_stmt_176_loopback_sample_req_ps)
          phi_stmt_176_loopback_sample_req &-> ($null)
          $T[phi_stmt_176_entry_trigger] 
          phi_stmt_176_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_176_entry_sample_req] 
          $T[phi_stmt_176_entry_sample_req_ps] 
          phi_stmt_176_entry_sample_req <-& (phi_stmt_176_entry_sample_req_ps)
          phi_stmt_176_entry_sample_req &-> ($null)
          phi_stmt_176_update_start_ o<-& (phi_stmt_176_update_completed_ 0)
          phi_stmt_176_sample_start_ o<-& (phi_stmt_176_sample_completed_ 1)
          $T[phi_stmt_176_merged_reqs] 
          $T[phi_stmt_176_phi_mux_ack] 
          $T[phi_stmt_176_phi_mux_ack_ps] 
          phi_stmt_176_phi_mux_ack_ps <-& (phi_stmt_176_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_176_update_completed_)
          $T[type_cast_179_sample_start__ps] 
          $T[type_cast_179_sample_completed__ps] 
          $T[type_cast_179_update_start__ps] 
          $T[type_cast_179_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_179_sample_start_] 
          $T[type_cast_179_sample_completed_] 
          type_cast_179_sample_completed_ <-& (type_cast_179_sample_start_)
          $T[type_cast_179_update_start_] 
          $T [type_cast_179_update_completed_] $delay 
          type_cast_179_update_completed_ <-& (type_cast_179_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_179_sample_start_ <-& (type_cast_179_sample_start__ps)
          type_cast_179_update_start_ <-& (type_cast_179_update_start__ps)
          // Phi complete dependency.
          type_cast_179_sample_completed__ps <-& (type_cast_179_sample_completed_)
          type_cast_179_update_completed__ps <-& (type_cast_179_update_completed_)
          $T[R_nC_180_sample_start__ps] 
          $T[R_nC_180_sample_completed__ps] 
          $T[R_nC_180_update_start__ps] 
          $T[R_nC_180_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nC_180_sample_start_] 
          $T[R_nC_180_sample_completed_] 
          $T[R_nC_180_update_start_] 
          $T[R_nC_180_update_completed_] 
          ;;[R_nC_180_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nC_180_sample_start_ &-> (R_nC_180_Sample)
          R_nC_180_sample_completed_ <-& (R_nC_180_Sample)
          ;;[R_nC_180_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nC_180_update_start_ &-> (R_nC_180_Update)
          R_nC_180_update_completed_ <-& (R_nC_180_Update)
          // RAW reenables for nC
          // Phi start dependency for implicit/constant alternative.
          R_nC_180_sample_start_ <-& (R_nC_180_sample_start__ps)
          R_nC_180_update_start_ <-& (R_nC_180_update_start__ps)
          // Phi complete dependency.
          R_nC_180_sample_completed__ps <-& (R_nC_180_sample_completed_)
          R_nC_180_update_completed__ps <-& (R_nC_180_update_completed_)
          $phisequencer [ phi_stmt_176_phi_seq] : 
          phi_stmt_176_entry_trigger type_cast_179_sample_start__ps type_cast_179_sample_completed__ps type_cast_179_update_start__ps type_cast_179_update_completed__ps phi_stmt_176_loopback_trigger R_nC_180_sample_start__ps R_nC_180_sample_completed__ps R_nC_180_update_start__ps R_nC_180_update_completed__ps :
          phi_stmt_176_sample_start__ps phi_stmt_176_sample_completed__ps phi_stmt_176_update_start__ps phi_stmt_176_update_completed__ps :
          phi_stmt_176_entry_sample_req_ps phi_stmt_176_loopback_sample_req_ps : 
          phi_stmt_176_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_176
          // start:  PHI statement phi_stmt_181
          // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_181_sample_start_] 
          $T[phi_stmt_181_sample_completed_] 
          $T[phi_stmt_181_update_start_] 
          $T[phi_stmt_181_update_completed_] 
          $T[phi_stmt_181_sample_start__ps] 
          phi_stmt_181_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_181_sample_completed__ps] 
          phi_stmt_181_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_181_update_start__ps] 
          phi_stmt_181_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_181_update_completed__ps] 
          phi_stmt_181_update_completed_ <-& (phi_stmt_181_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_181_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_181_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_181_update_start_)
          $T[phi_stmt_181_loopback_trigger] 
          phi_stmt_181_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_181_loopback_sample_req] 
          $T[phi_stmt_181_loopback_sample_req_ps] 
          phi_stmt_181_loopback_sample_req <-& (phi_stmt_181_loopback_sample_req_ps)
          phi_stmt_181_loopback_sample_req &-> ($null)
          $T[phi_stmt_181_entry_trigger] 
          phi_stmt_181_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_181_entry_sample_req] 
          $T[phi_stmt_181_entry_sample_req_ps] 
          phi_stmt_181_entry_sample_req <-& (phi_stmt_181_entry_sample_req_ps)
          phi_stmt_181_entry_sample_req &-> ($null)
          phi_stmt_181_update_start_ o<-& (phi_stmt_181_update_completed_ 0)
          phi_stmt_181_sample_start_ o<-& (phi_stmt_181_sample_completed_ 1)
          $T[phi_stmt_181_merged_reqs] 
          $T[phi_stmt_181_phi_mux_ack] 
          $T[phi_stmt_181_phi_mux_ack_ps] 
          phi_stmt_181_phi_mux_ack_ps <-& (phi_stmt_181_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_181_update_completed_)
          $T[type_cast_184_sample_start__ps] 
          $T[type_cast_184_sample_completed__ps] 
          $T[type_cast_184_update_start__ps] 
          $T[type_cast_184_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_184_sample_start_] 
          $T[type_cast_184_sample_completed_] 
          type_cast_184_sample_completed_ <-& (type_cast_184_sample_start_)
          $T[type_cast_184_update_start_] 
          $T [type_cast_184_update_completed_] $delay 
          type_cast_184_update_completed_ <-& (type_cast_184_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_184_sample_start_ <-& (type_cast_184_sample_start__ps)
          type_cast_184_update_start_ <-& (type_cast_184_update_start__ps)
          // Phi complete dependency.
          type_cast_184_sample_completed__ps <-& (type_cast_184_sample_completed_)
          type_cast_184_update_completed__ps <-& (type_cast_184_update_completed_)
          $T[R_nval_0_185_sample_start__ps] 
          $T[R_nval_0_185_sample_completed__ps] 
          $T[R_nval_0_185_update_start__ps] 
          $T[R_nval_0_185_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_0_185_sample_start_] 
          $T[R_nval_0_185_sample_completed_] 
          $T[R_nval_0_185_update_start_] 
          $T[R_nval_0_185_update_completed_] 
          ;;[R_nval_0_185_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_0_185_sample_start_ &-> (R_nval_0_185_Sample)
          R_nval_0_185_sample_completed_ <-& (R_nval_0_185_Sample)
          ;;[R_nval_0_185_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_0_185_update_start_ &-> (R_nval_0_185_Update)
          R_nval_0_185_update_completed_ <-& (R_nval_0_185_Update)
          // RAW reenables for nval_0
          // Phi start dependency for implicit/constant alternative.
          R_nval_0_185_sample_start_ <-& (R_nval_0_185_sample_start__ps)
          R_nval_0_185_update_start_ <-& (R_nval_0_185_update_start__ps)
          // Phi complete dependency.
          R_nval_0_185_sample_completed__ps <-& (R_nval_0_185_sample_completed_)
          R_nval_0_185_update_completed__ps <-& (R_nval_0_185_update_completed_)
          $phisequencer [ phi_stmt_181_phi_seq] : 
          phi_stmt_181_entry_trigger type_cast_184_sample_start__ps type_cast_184_sample_completed__ps type_cast_184_update_start__ps type_cast_184_update_completed__ps phi_stmt_181_loopback_trigger R_nval_0_185_sample_start__ps R_nval_0_185_sample_completed__ps R_nval_0_185_update_start__ps R_nval_0_185_update_completed__ps :
          phi_stmt_181_sample_start__ps phi_stmt_181_sample_completed__ps phi_stmt_181_update_start__ps phi_stmt_181_update_completed__ps :
          phi_stmt_181_entry_sample_req_ps phi_stmt_181_loopback_sample_req_ps : 
          phi_stmt_181_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_181
          // start:  PHI statement phi_stmt_186
          // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_186_sample_start_] 
          $T[phi_stmt_186_sample_completed_] 
          $T[phi_stmt_186_update_start_] 
          $T[phi_stmt_186_update_completed_] 
          $T[phi_stmt_186_sample_start__ps] 
          phi_stmt_186_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_186_sample_completed__ps] 
          phi_stmt_186_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_186_update_start__ps] 
          phi_stmt_186_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_186_update_completed__ps] 
          phi_stmt_186_update_completed_ <-& (phi_stmt_186_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_186_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_186_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_186_update_start_)
          $T[phi_stmt_186_loopback_trigger] 
          phi_stmt_186_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_186_loopback_sample_req] 
          $T[phi_stmt_186_loopback_sample_req_ps] 
          phi_stmt_186_loopback_sample_req <-& (phi_stmt_186_loopback_sample_req_ps)
          phi_stmt_186_loopback_sample_req &-> ($null)
          $T[phi_stmt_186_entry_trigger] 
          phi_stmt_186_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_186_entry_sample_req] 
          $T[phi_stmt_186_entry_sample_req_ps] 
          phi_stmt_186_entry_sample_req <-& (phi_stmt_186_entry_sample_req_ps)
          phi_stmt_186_entry_sample_req &-> ($null)
          phi_stmt_186_update_start_ o<-& (phi_stmt_186_update_completed_ 0)
          phi_stmt_186_sample_start_ o<-& (phi_stmt_186_sample_completed_ 1)
          $T[phi_stmt_186_merged_reqs] 
          $T[phi_stmt_186_phi_mux_ack] 
          $T[phi_stmt_186_phi_mux_ack_ps] 
          phi_stmt_186_phi_mux_ack_ps <-& (phi_stmt_186_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_186_update_completed_)
          $T[type_cast_189_sample_start__ps] 
          $T[type_cast_189_sample_completed__ps] 
          $T[type_cast_189_update_start__ps] 
          $T[type_cast_189_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_189_sample_start_] 
          $T[type_cast_189_sample_completed_] 
          type_cast_189_sample_completed_ <-& (type_cast_189_sample_start_)
          $T[type_cast_189_update_start_] 
          $T [type_cast_189_update_completed_] $delay 
          type_cast_189_update_completed_ <-& (type_cast_189_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_189_sample_start_ <-& (type_cast_189_sample_start__ps)
          type_cast_189_update_start_ <-& (type_cast_189_update_start__ps)
          // Phi complete dependency.
          type_cast_189_sample_completed__ps <-& (type_cast_189_sample_completed_)
          type_cast_189_update_completed__ps <-& (type_cast_189_update_completed_)
          $T[R_nval_1_190_sample_start__ps] 
          $T[R_nval_1_190_sample_completed__ps] 
          $T[R_nval_1_190_update_start__ps] 
          $T[R_nval_1_190_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_1_190_sample_start_] 
          $T[R_nval_1_190_sample_completed_] 
          $T[R_nval_1_190_update_start_] 
          $T[R_nval_1_190_update_completed_] 
          ;;[R_nval_1_190_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_1_190_sample_start_ &-> (R_nval_1_190_Sample)
          R_nval_1_190_sample_completed_ <-& (R_nval_1_190_Sample)
          ;;[R_nval_1_190_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_1_190_update_start_ &-> (R_nval_1_190_Update)
          R_nval_1_190_update_completed_ <-& (R_nval_1_190_Update)
          // RAW reenables for nval_1
          // Phi start dependency for implicit/constant alternative.
          R_nval_1_190_sample_start_ <-& (R_nval_1_190_sample_start__ps)
          R_nval_1_190_update_start_ <-& (R_nval_1_190_update_start__ps)
          // Phi complete dependency.
          R_nval_1_190_sample_completed__ps <-& (R_nval_1_190_sample_completed_)
          R_nval_1_190_update_completed__ps <-& (R_nval_1_190_update_completed_)
          $phisequencer [ phi_stmt_186_phi_seq] : 
          phi_stmt_186_entry_trigger type_cast_189_sample_start__ps type_cast_189_sample_completed__ps type_cast_189_update_start__ps type_cast_189_update_completed__ps phi_stmt_186_loopback_trigger R_nval_1_190_sample_start__ps R_nval_1_190_sample_completed__ps R_nval_1_190_update_start__ps R_nval_1_190_update_completed__ps :
          phi_stmt_186_sample_start__ps phi_stmt_186_sample_completed__ps phi_stmt_186_update_start__ps phi_stmt_186_update_completed__ps :
          phi_stmt_186_entry_sample_req_ps phi_stmt_186_loopback_sample_req_ps : 
          phi_stmt_186_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_186
          // start:  PHI statement phi_stmt_191
          // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_191_sample_start_] 
          $T[phi_stmt_191_sample_completed_] 
          $T[phi_stmt_191_update_start_] 
          $T[phi_stmt_191_update_completed_] 
          $T[phi_stmt_191_sample_start__ps] 
          phi_stmt_191_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_191_sample_completed__ps] 
          phi_stmt_191_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_191_update_start__ps] 
          phi_stmt_191_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_191_update_completed__ps] 
          phi_stmt_191_update_completed_ <-& (phi_stmt_191_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_191_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_191_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_191_update_start_)
          $T[phi_stmt_191_loopback_trigger] 
          phi_stmt_191_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_191_loopback_sample_req] 
          $T[phi_stmt_191_loopback_sample_req_ps] 
          phi_stmt_191_loopback_sample_req <-& (phi_stmt_191_loopback_sample_req_ps)
          phi_stmt_191_loopback_sample_req &-> ($null)
          $T[phi_stmt_191_entry_trigger] 
          phi_stmt_191_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_191_entry_sample_req] 
          $T[phi_stmt_191_entry_sample_req_ps] 
          phi_stmt_191_entry_sample_req <-& (phi_stmt_191_entry_sample_req_ps)
          phi_stmt_191_entry_sample_req &-> ($null)
          phi_stmt_191_update_start_ o<-& (phi_stmt_191_update_completed_ 0)
          phi_stmt_191_sample_start_ o<-& (phi_stmt_191_sample_completed_ 1)
          $T[phi_stmt_191_merged_reqs] 
          $T[phi_stmt_191_phi_mux_ack] 
          $T[phi_stmt_191_phi_mux_ack_ps] 
          phi_stmt_191_phi_mux_ack_ps <-& (phi_stmt_191_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_191_update_completed_)
          $T[type_cast_194_sample_start__ps] 
          $T[type_cast_194_sample_completed__ps] 
          $T[type_cast_194_update_start__ps] 
          $T[type_cast_194_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_194_sample_start_] 
          $T[type_cast_194_sample_completed_] 
          type_cast_194_sample_completed_ <-& (type_cast_194_sample_start_)
          $T[type_cast_194_update_start_] 
          $T [type_cast_194_update_completed_] $delay 
          type_cast_194_update_completed_ <-& (type_cast_194_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_194_sample_start_ <-& (type_cast_194_sample_start__ps)
          type_cast_194_update_start_ <-& (type_cast_194_update_start__ps)
          // Phi complete dependency.
          type_cast_194_sample_completed__ps <-& (type_cast_194_sample_completed_)
          type_cast_194_update_completed__ps <-& (type_cast_194_update_completed_)
          $T[R_nval_2_195_sample_start__ps] 
          $T[R_nval_2_195_sample_completed__ps] 
          $T[R_nval_2_195_update_start__ps] 
          $T[R_nval_2_195_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_2_195_sample_start_] 
          $T[R_nval_2_195_sample_completed_] 
          $T[R_nval_2_195_update_start_] 
          $T[R_nval_2_195_update_completed_] 
          ;;[R_nval_2_195_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_2_195_sample_start_ &-> (R_nval_2_195_Sample)
          R_nval_2_195_sample_completed_ <-& (R_nval_2_195_Sample)
          ;;[R_nval_2_195_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_2_195_update_start_ &-> (R_nval_2_195_Update)
          R_nval_2_195_update_completed_ <-& (R_nval_2_195_Update)
          // RAW reenables for nval_2
          // Phi start dependency for implicit/constant alternative.
          R_nval_2_195_sample_start_ <-& (R_nval_2_195_sample_start__ps)
          R_nval_2_195_update_start_ <-& (R_nval_2_195_update_start__ps)
          // Phi complete dependency.
          R_nval_2_195_sample_completed__ps <-& (R_nval_2_195_sample_completed_)
          R_nval_2_195_update_completed__ps <-& (R_nval_2_195_update_completed_)
          $phisequencer [ phi_stmt_191_phi_seq] : 
          phi_stmt_191_entry_trigger type_cast_194_sample_start__ps type_cast_194_sample_completed__ps type_cast_194_update_start__ps type_cast_194_update_completed__ps phi_stmt_191_loopback_trigger R_nval_2_195_sample_start__ps R_nval_2_195_sample_completed__ps R_nval_2_195_update_start__ps R_nval_2_195_update_completed__ps :
          phi_stmt_191_sample_start__ps phi_stmt_191_sample_completed__ps phi_stmt_191_update_start__ps phi_stmt_191_update_completed__ps :
          phi_stmt_191_entry_sample_req_ps phi_stmt_191_loopback_sample_req_ps : 
          phi_stmt_191_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_191
          // start:  PHI statement phi_stmt_196
          // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_196_sample_start_] 
          $T[phi_stmt_196_sample_completed_] 
          $T[phi_stmt_196_update_start_] 
          $T[phi_stmt_196_update_completed_] 
          $T[phi_stmt_196_sample_start__ps] 
          phi_stmt_196_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_196_sample_completed__ps] 
          phi_stmt_196_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_196_update_start__ps] 
          phi_stmt_196_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_196_update_completed__ps] 
          phi_stmt_196_update_completed_ <-& (phi_stmt_196_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_196_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_196_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_196_update_start_)
          $T[phi_stmt_196_loopback_trigger] 
          phi_stmt_196_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_196_loopback_sample_req] 
          $T[phi_stmt_196_loopback_sample_req_ps] 
          phi_stmt_196_loopback_sample_req <-& (phi_stmt_196_loopback_sample_req_ps)
          phi_stmt_196_loopback_sample_req &-> ($null)
          $T[phi_stmt_196_entry_trigger] 
          phi_stmt_196_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_196_entry_sample_req] 
          $T[phi_stmt_196_entry_sample_req_ps] 
          phi_stmt_196_entry_sample_req <-& (phi_stmt_196_entry_sample_req_ps)
          phi_stmt_196_entry_sample_req &-> ($null)
          phi_stmt_196_update_start_ o<-& (phi_stmt_196_update_completed_ 0)
          phi_stmt_196_sample_start_ o<-& (phi_stmt_196_sample_completed_ 1)
          $T[phi_stmt_196_merged_reqs] 
          $T[phi_stmt_196_phi_mux_ack] 
          $T[phi_stmt_196_phi_mux_ack_ps] 
          phi_stmt_196_phi_mux_ack_ps <-& (phi_stmt_196_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_196_update_completed_)
          $T[type_cast_199_sample_start__ps] 
          $T[type_cast_199_sample_completed__ps] 
          $T[type_cast_199_update_start__ps] 
          $T[type_cast_199_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_199_sample_start_] 
          $T[type_cast_199_sample_completed_] 
          type_cast_199_sample_completed_ <-& (type_cast_199_sample_start_)
          $T[type_cast_199_update_start_] 
          $T [type_cast_199_update_completed_] $delay 
          type_cast_199_update_completed_ <-& (type_cast_199_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_199_sample_start_ <-& (type_cast_199_sample_start__ps)
          type_cast_199_update_start_ <-& (type_cast_199_update_start__ps)
          // Phi complete dependency.
          type_cast_199_sample_completed__ps <-& (type_cast_199_sample_completed_)
          type_cast_199_update_completed__ps <-& (type_cast_199_update_completed_)
          $T[R_nval_3_200_sample_start__ps] 
          $T[R_nval_3_200_sample_completed__ps] 
          $T[R_nval_3_200_update_start__ps] 
          $T[R_nval_3_200_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nval_3_200_sample_start_] 
          $T[R_nval_3_200_sample_completed_] 
          $T[R_nval_3_200_update_start_] 
          $T[R_nval_3_200_update_completed_] 
          ;;[R_nval_3_200_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nval_3_200_sample_start_ &-> (R_nval_3_200_Sample)
          R_nval_3_200_sample_completed_ <-& (R_nval_3_200_Sample)
          ;;[R_nval_3_200_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nval_3_200_update_start_ &-> (R_nval_3_200_Update)
          R_nval_3_200_update_completed_ <-& (R_nval_3_200_Update)
          // RAW reenables for nval_3
          // Phi start dependency for implicit/constant alternative.
          R_nval_3_200_sample_start_ <-& (R_nval_3_200_sample_start__ps)
          R_nval_3_200_update_start_ <-& (R_nval_3_200_update_start__ps)
          // Phi complete dependency.
          R_nval_3_200_sample_completed__ps <-& (R_nval_3_200_sample_completed_)
          R_nval_3_200_update_completed__ps <-& (R_nval_3_200_update_completed_)
          $phisequencer [ phi_stmt_196_phi_seq] : 
          phi_stmt_196_entry_trigger type_cast_199_sample_start__ps type_cast_199_sample_completed__ps type_cast_199_update_start__ps type_cast_199_update_completed__ps phi_stmt_196_loopback_trigger R_nval_3_200_sample_start__ps R_nval_3_200_sample_completed__ps R_nval_3_200_update_start__ps R_nval_3_200_update_completed__ps :
          phi_stmt_196_sample_start__ps phi_stmt_196_sample_completed__ps phi_stmt_196_update_start__ps phi_stmt_196_update_completed__ps :
          phi_stmt_196_entry_sample_req_ps phi_stmt_196_loopback_sample_req_ps : 
          phi_stmt_196_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_196
          // start: WAR dependencies for Cr
          // done: WAR dependencies for Cr
          // start:  			$volatile Cr := ( $slice C 7 2 )  $buffering 1
          //  file .Aa/mvp.opt.aa, line 92
          // volatile! 
          // Source expression
          // ( $slice C 7 2 ) 
          // C
          // Target expression
          // (as target) Cr
          // start: WAR dependencies for Cr
          // done: WAR dependencies for Cr
          // end:  			$volatile Cr := ( $slice C 7 2 )  $buffering 1
          // start:  			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 93
          // Source expression
          // A_0[R][Cr]
          $T[array_obj_ref_209_base_address_calculated] 
          $T[array_obj_ref_209_sample_start_] 
          $T[array_obj_ref_209_sample_completed_] 
          $T[array_obj_ref_209_update_start_] 
          $T[array_obj_ref_209_update_completed_] 
          $T[array_obj_ref_209_word_address_calculated] 
          $T[array_obj_ref_209_root_address_calculated] 
          $T[array_obj_ref_209_offset_calculated] 
          $T[array_obj_ref_209_index_resized_0] 
          $T[array_obj_ref_209_index_scaled_0] 
          $T[array_obj_ref_209_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_209_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_209_index_computed_0
          ;;[array_obj_ref_209_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_209_index_computed_0 &-> (array_obj_ref_209_index_resize_0)
          array_obj_ref_209_index_resized_0 <-& (array_obj_ref_209_index_resize_0)
          $T[array_obj_ref_209_index_scale_0_sample_start] 
          $T[array_obj_ref_209_index_scale_0_sample_complete] 
          $T[array_obj_ref_209_index_scale_0_update_start] 
          $T[array_obj_ref_209_index_scale_0_update_complete] 
          ;;[array_obj_ref_209_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_209_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_209_index_resized_0 &-> (array_obj_ref_209_index_scale_0_sample_start)
          array_obj_ref_209_index_scale_0_sample_start &-> (array_obj_ref_209_index_scale_0_Sample)
          array_obj_ref_209_index_scale_0_sample_complete <-& (array_obj_ref_209_index_scale_0_Sample)
          array_obj_ref_209_index_scale_0_update_start &-> (array_obj_ref_209_index_scale_0_Update)
          array_obj_ref_209_index_scale_0_update_complete <-& (array_obj_ref_209_index_scale_0_Update)
          array_obj_ref_209_index_scaled_0 <-& (array_obj_ref_209_index_scale_0_update_complete)
          array_obj_ref_209_index_scale_0_sample_start o<-& (array_obj_ref_209_index_scale_0_sample_complete 1)
          array_obj_ref_209_index_scale_0_update_start o<-& (array_obj_ref_209_index_scale_0_update_complete 0)
          $T[array_obj_ref_209_index_resized_1] 
          $T[array_obj_ref_209_index_scaled_1] 
          $T[array_obj_ref_209_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_209_index_computed_1
          array_obj_ref_209_index_computed_1 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_209_index_computed_1
          ;;[array_obj_ref_209_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_209_index_computed_1 &-> (array_obj_ref_209_index_resize_1)
          array_obj_ref_209_index_resized_1 <-& (array_obj_ref_209_index_resize_1)
          ;;[array_obj_ref_209_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_209_index_resized_1 &-> (array_obj_ref_209_index_scale_1)
          array_obj_ref_209_index_scaled_1 <-& (array_obj_ref_209_index_scale_1)
          $T[array_obj_ref_209_partial_sum_1_sample_start] 
          $T[array_obj_ref_209_partial_sum_1_sample_complete] 
          $T[array_obj_ref_209_partial_sum_1_update_start] 
          $T[array_obj_ref_209_partial_sum_1_update_complete] 
          ;;[array_obj_ref_209_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_209_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_209_partial_sum_1_sample_start &-> (array_obj_ref_209_partial_sum_1_Sample)
          array_obj_ref_209_partial_sum_1_sample_complete <-& (array_obj_ref_209_partial_sum_1_Sample)
          array_obj_ref_209_partial_sum_1_update_start &-> (array_obj_ref_209_partial_sum_1_Update)
          array_obj_ref_209_partial_sum_1_update_complete <-& (array_obj_ref_209_partial_sum_1_Update)
          array_obj_ref_209_partial_sum_1_sample_start o<-& (array_obj_ref_209_partial_sum_1_sample_complete 1)
          array_obj_ref_209_partial_sum_1_update_start o<-& (array_obj_ref_209_partial_sum_1_update_complete 0)
          array_obj_ref_209_partial_sum_1_sample_start <-& (array_obj_ref_209_index_scaled_0)
          array_obj_ref_209_partial_sum_1_sample_start <-& (array_obj_ref_209_index_scaled_1)
          array_obj_ref_209_index_scaled_0 o<-& (array_obj_ref_209_partial_sum_1_sample_complete 1)
          phi_stmt_176_update_start_ o<-& (array_obj_ref_209_partial_sum_1_sample_complete 1)
          array_obj_ref_209_offset_calculated <-& (array_obj_ref_209_partial_sum_1_update_complete)
          ;;[array_obj_ref_209_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_209_partial_sum_1_update_complete &-> (array_obj_ref_209_final_index_sum_regn)
          array_obj_ref_209_offset_calculated <-& (array_obj_ref_209_final_index_sum_regn)
          ;;[array_obj_ref_209_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_209_offset_calculated &-> (array_obj_ref_209_base_plus_offset)
          array_obj_ref_209_root_address_calculated <-& (array_obj_ref_209_base_plus_offset)
          ;;[array_obj_ref_209_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_209_root_address_calculated &-> (array_obj_ref_209_word_addrgen)
          array_obj_ref_209_word_address_calculated <-& (array_obj_ref_209_word_addrgen)
          ;;[array_obj_ref_209_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_209_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_209_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_209_sample_start_ <-& (array_obj_ref_209_word_address_calculated)
          // reenable-joins
          array_obj_ref_209_partial_sum_1_update_start o<-& (array_obj_ref_209_sample_completed_ 0)
          array_obj_ref_209_sample_start_ &-> (array_obj_ref_209_Sample)
          array_obj_ref_209_sample_completed_ <-& (array_obj_ref_209_Sample)
          array_obj_ref_209_sample_completed_ &-> ($null)
          array_obj_ref_209_update_start_ &-> (array_obj_ref_209_Update)
          array_obj_ref_209_update_completed_ <-& (array_obj_ref_209_Update)
          // self-release: 
          array_obj_ref_209_sample_start_ o<-& (array_obj_ref_209_sample_completed_ 1)
          $null &-> (array_obj_ref_209_update_start_)
          array_obj_ref_209_update_start_ o<-& (array_obj_ref_209_update_completed_ 0)
          // Target expression
          // (as target) a_rc_0
          // start: WAR dependencies for a_rc_0
          // done: WAR dependencies for a_rc_0
          // end:  			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 94
          // Source expression
          // A_1[R][Cr]
          $T[array_obj_ref_214_base_address_calculated] 
          $T[array_obj_ref_214_sample_start_] 
          $T[array_obj_ref_214_sample_completed_] 
          $T[array_obj_ref_214_update_start_] 
          $T[array_obj_ref_214_update_completed_] 
          $T[array_obj_ref_214_word_address_calculated] 
          $T[array_obj_ref_214_root_address_calculated] 
          $T[array_obj_ref_214_offset_calculated] 
          $T[array_obj_ref_214_index_resized_0] 
          $T[array_obj_ref_214_index_scaled_0] 
          $T[array_obj_ref_214_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_214_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_214_index_computed_0
          ;;[array_obj_ref_214_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_214_index_computed_0 &-> (array_obj_ref_214_index_resize_0)
          array_obj_ref_214_index_resized_0 <-& (array_obj_ref_214_index_resize_0)
          $T[array_obj_ref_214_index_scale_0_sample_start] 
          $T[array_obj_ref_214_index_scale_0_sample_complete] 
          $T[array_obj_ref_214_index_scale_0_update_start] 
          $T[array_obj_ref_214_index_scale_0_update_complete] 
          ;;[array_obj_ref_214_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_214_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_214_index_resized_0 &-> (array_obj_ref_214_index_scale_0_sample_start)
          array_obj_ref_214_index_scale_0_sample_start &-> (array_obj_ref_214_index_scale_0_Sample)
          array_obj_ref_214_index_scale_0_sample_complete <-& (array_obj_ref_214_index_scale_0_Sample)
          array_obj_ref_214_index_scale_0_update_start &-> (array_obj_ref_214_index_scale_0_Update)
          array_obj_ref_214_index_scale_0_update_complete <-& (array_obj_ref_214_index_scale_0_Update)
          array_obj_ref_214_index_scaled_0 <-& (array_obj_ref_214_index_scale_0_update_complete)
          array_obj_ref_214_index_scale_0_sample_start o<-& (array_obj_ref_214_index_scale_0_sample_complete 1)
          array_obj_ref_214_index_scale_0_update_start o<-& (array_obj_ref_214_index_scale_0_update_complete 0)
          $T[array_obj_ref_214_index_resized_1] 
          $T[array_obj_ref_214_index_scaled_1] 
          $T[array_obj_ref_214_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_214_index_computed_1
          array_obj_ref_214_index_computed_1 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_214_index_computed_1
          ;;[array_obj_ref_214_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_214_index_computed_1 &-> (array_obj_ref_214_index_resize_1)
          array_obj_ref_214_index_resized_1 <-& (array_obj_ref_214_index_resize_1)
          ;;[array_obj_ref_214_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_214_index_resized_1 &-> (array_obj_ref_214_index_scale_1)
          array_obj_ref_214_index_scaled_1 <-& (array_obj_ref_214_index_scale_1)
          $T[array_obj_ref_214_partial_sum_1_sample_start] 
          $T[array_obj_ref_214_partial_sum_1_sample_complete] 
          $T[array_obj_ref_214_partial_sum_1_update_start] 
          $T[array_obj_ref_214_partial_sum_1_update_complete] 
          ;;[array_obj_ref_214_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_214_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_214_partial_sum_1_sample_start &-> (array_obj_ref_214_partial_sum_1_Sample)
          array_obj_ref_214_partial_sum_1_sample_complete <-& (array_obj_ref_214_partial_sum_1_Sample)
          array_obj_ref_214_partial_sum_1_update_start &-> (array_obj_ref_214_partial_sum_1_Update)
          array_obj_ref_214_partial_sum_1_update_complete <-& (array_obj_ref_214_partial_sum_1_Update)
          array_obj_ref_214_partial_sum_1_sample_start o<-& (array_obj_ref_214_partial_sum_1_sample_complete 1)
          array_obj_ref_214_partial_sum_1_update_start o<-& (array_obj_ref_214_partial_sum_1_update_complete 0)
          array_obj_ref_214_partial_sum_1_sample_start <-& (array_obj_ref_214_index_scaled_0)
          array_obj_ref_214_partial_sum_1_sample_start <-& (array_obj_ref_214_index_scaled_1)
          array_obj_ref_214_index_scaled_0 o<-& (array_obj_ref_214_partial_sum_1_sample_complete 1)
          phi_stmt_176_update_start_ o<-& (array_obj_ref_214_partial_sum_1_sample_complete 1)
          array_obj_ref_214_offset_calculated <-& (array_obj_ref_214_partial_sum_1_update_complete)
          ;;[array_obj_ref_214_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_214_partial_sum_1_update_complete &-> (array_obj_ref_214_final_index_sum_regn)
          array_obj_ref_214_offset_calculated <-& (array_obj_ref_214_final_index_sum_regn)
          ;;[array_obj_ref_214_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_214_offset_calculated &-> (array_obj_ref_214_base_plus_offset)
          array_obj_ref_214_root_address_calculated <-& (array_obj_ref_214_base_plus_offset)
          ;;[array_obj_ref_214_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_214_root_address_calculated &-> (array_obj_ref_214_word_addrgen)
          array_obj_ref_214_word_address_calculated <-& (array_obj_ref_214_word_addrgen)
          ;;[array_obj_ref_214_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_214_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_214_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_214_sample_start_ <-& (array_obj_ref_214_word_address_calculated)
          // reenable-joins
          array_obj_ref_214_partial_sum_1_update_start o<-& (array_obj_ref_214_sample_completed_ 0)
          array_obj_ref_214_sample_start_ &-> (array_obj_ref_214_Sample)
          array_obj_ref_214_sample_completed_ <-& (array_obj_ref_214_Sample)
          array_obj_ref_214_sample_completed_ &-> ($null)
          array_obj_ref_214_update_start_ &-> (array_obj_ref_214_Update)
          array_obj_ref_214_update_completed_ <-& (array_obj_ref_214_Update)
          // self-release: 
          array_obj_ref_214_sample_start_ o<-& (array_obj_ref_214_sample_completed_ 1)
          $null &-> (array_obj_ref_214_update_start_)
          array_obj_ref_214_update_start_ o<-& (array_obj_ref_214_update_completed_ 0)
          // Target expression
          // (as target) a_rc_1
          // start: WAR dependencies for a_rc_1
          // done: WAR dependencies for a_rc_1
          // end:  			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 95
          // Source expression
          // A_2[R][Cr]
          $T[array_obj_ref_219_base_address_calculated] 
          $T[array_obj_ref_219_sample_start_] 
          $T[array_obj_ref_219_sample_completed_] 
          $T[array_obj_ref_219_update_start_] 
          $T[array_obj_ref_219_update_completed_] 
          $T[array_obj_ref_219_word_address_calculated] 
          $T[array_obj_ref_219_root_address_calculated] 
          $T[array_obj_ref_219_offset_calculated] 
          $T[array_obj_ref_219_index_resized_0] 
          $T[array_obj_ref_219_index_scaled_0] 
          $T[array_obj_ref_219_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_219_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_219_index_computed_0
          ;;[array_obj_ref_219_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_219_index_computed_0 &-> (array_obj_ref_219_index_resize_0)
          array_obj_ref_219_index_resized_0 <-& (array_obj_ref_219_index_resize_0)
          $T[array_obj_ref_219_index_scale_0_sample_start] 
          $T[array_obj_ref_219_index_scale_0_sample_complete] 
          $T[array_obj_ref_219_index_scale_0_update_start] 
          $T[array_obj_ref_219_index_scale_0_update_complete] 
          ;;[array_obj_ref_219_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_219_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_219_index_resized_0 &-> (array_obj_ref_219_index_scale_0_sample_start)
          array_obj_ref_219_index_scale_0_sample_start &-> (array_obj_ref_219_index_scale_0_Sample)
          array_obj_ref_219_index_scale_0_sample_complete <-& (array_obj_ref_219_index_scale_0_Sample)
          array_obj_ref_219_index_scale_0_update_start &-> (array_obj_ref_219_index_scale_0_Update)
          array_obj_ref_219_index_scale_0_update_complete <-& (array_obj_ref_219_index_scale_0_Update)
          array_obj_ref_219_index_scaled_0 <-& (array_obj_ref_219_index_scale_0_update_complete)
          array_obj_ref_219_index_scale_0_sample_start o<-& (array_obj_ref_219_index_scale_0_sample_complete 1)
          array_obj_ref_219_index_scale_0_update_start o<-& (array_obj_ref_219_index_scale_0_update_complete 0)
          $T[array_obj_ref_219_index_resized_1] 
          $T[array_obj_ref_219_index_scaled_1] 
          $T[array_obj_ref_219_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_219_index_computed_1
          array_obj_ref_219_index_computed_1 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_219_index_computed_1
          ;;[array_obj_ref_219_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_219_index_computed_1 &-> (array_obj_ref_219_index_resize_1)
          array_obj_ref_219_index_resized_1 <-& (array_obj_ref_219_index_resize_1)
          ;;[array_obj_ref_219_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_219_index_resized_1 &-> (array_obj_ref_219_index_scale_1)
          array_obj_ref_219_index_scaled_1 <-& (array_obj_ref_219_index_scale_1)
          $T[array_obj_ref_219_partial_sum_1_sample_start] 
          $T[array_obj_ref_219_partial_sum_1_sample_complete] 
          $T[array_obj_ref_219_partial_sum_1_update_start] 
          $T[array_obj_ref_219_partial_sum_1_update_complete] 
          ;;[array_obj_ref_219_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_219_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_219_partial_sum_1_sample_start &-> (array_obj_ref_219_partial_sum_1_Sample)
          array_obj_ref_219_partial_sum_1_sample_complete <-& (array_obj_ref_219_partial_sum_1_Sample)
          array_obj_ref_219_partial_sum_1_update_start &-> (array_obj_ref_219_partial_sum_1_Update)
          array_obj_ref_219_partial_sum_1_update_complete <-& (array_obj_ref_219_partial_sum_1_Update)
          array_obj_ref_219_partial_sum_1_sample_start o<-& (array_obj_ref_219_partial_sum_1_sample_complete 1)
          array_obj_ref_219_partial_sum_1_update_start o<-& (array_obj_ref_219_partial_sum_1_update_complete 0)
          array_obj_ref_219_partial_sum_1_sample_start <-& (array_obj_ref_219_index_scaled_0)
          array_obj_ref_219_partial_sum_1_sample_start <-& (array_obj_ref_219_index_scaled_1)
          array_obj_ref_219_index_scaled_0 o<-& (array_obj_ref_219_partial_sum_1_sample_complete 1)
          phi_stmt_176_update_start_ o<-& (array_obj_ref_219_partial_sum_1_sample_complete 1)
          array_obj_ref_219_offset_calculated <-& (array_obj_ref_219_partial_sum_1_update_complete)
          ;;[array_obj_ref_219_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_219_partial_sum_1_update_complete &-> (array_obj_ref_219_final_index_sum_regn)
          array_obj_ref_219_offset_calculated <-& (array_obj_ref_219_final_index_sum_regn)
          ;;[array_obj_ref_219_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_219_offset_calculated &-> (array_obj_ref_219_base_plus_offset)
          array_obj_ref_219_root_address_calculated <-& (array_obj_ref_219_base_plus_offset)
          ;;[array_obj_ref_219_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_219_root_address_calculated &-> (array_obj_ref_219_word_addrgen)
          array_obj_ref_219_word_address_calculated <-& (array_obj_ref_219_word_addrgen)
          ;;[array_obj_ref_219_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_219_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_219_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_219_sample_start_ <-& (array_obj_ref_219_word_address_calculated)
          // reenable-joins
          array_obj_ref_219_partial_sum_1_update_start o<-& (array_obj_ref_219_sample_completed_ 0)
          array_obj_ref_219_sample_start_ &-> (array_obj_ref_219_Sample)
          array_obj_ref_219_sample_completed_ <-& (array_obj_ref_219_Sample)
          array_obj_ref_219_sample_completed_ &-> ($null)
          array_obj_ref_219_update_start_ &-> (array_obj_ref_219_Update)
          array_obj_ref_219_update_completed_ <-& (array_obj_ref_219_Update)
          // self-release: 
          array_obj_ref_219_sample_start_ o<-& (array_obj_ref_219_sample_completed_ 1)
          $null &-> (array_obj_ref_219_update_start_)
          array_obj_ref_219_update_start_ o<-& (array_obj_ref_219_update_completed_ 0)
          // Target expression
          // (as target) a_rc_2
          // start: WAR dependencies for a_rc_2
          // done: WAR dependencies for a_rc_2
          // end:  			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 96
          // Source expression
          // A_3[R][Cr]
          $T[array_obj_ref_224_base_address_calculated] 
          $T[array_obj_ref_224_sample_start_] 
          $T[array_obj_ref_224_sample_completed_] 
          $T[array_obj_ref_224_update_start_] 
          $T[array_obj_ref_224_update_completed_] 
          $T[array_obj_ref_224_word_address_calculated] 
          $T[array_obj_ref_224_root_address_calculated] 
          $T[array_obj_ref_224_offset_calculated] 
          $T[array_obj_ref_224_index_resized_0] 
          $T[array_obj_ref_224_index_scaled_0] 
          $T[array_obj_ref_224_index_computed_0] 
          // R
          // start: Forward dependencies from R to transition array_obj_ref_224_index_computed_0
          // done: Forward dependencies from R to transition array_obj_ref_224_index_computed_0
          ;;[array_obj_ref_224_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_224_index_computed_0 &-> (array_obj_ref_224_index_resize_0)
          array_obj_ref_224_index_resized_0 <-& (array_obj_ref_224_index_resize_0)
          $T[array_obj_ref_224_index_scale_0_sample_start] 
          $T[array_obj_ref_224_index_scale_0_sample_complete] 
          $T[array_obj_ref_224_index_scale_0_update_start] 
          $T[array_obj_ref_224_index_scale_0_update_complete] 
          ;;[array_obj_ref_224_index_scale_0_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_224_index_scale_0_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_224_index_resized_0 &-> (array_obj_ref_224_index_scale_0_sample_start)
          array_obj_ref_224_index_scale_0_sample_start &-> (array_obj_ref_224_index_scale_0_Sample)
          array_obj_ref_224_index_scale_0_sample_complete <-& (array_obj_ref_224_index_scale_0_Sample)
          array_obj_ref_224_index_scale_0_update_start &-> (array_obj_ref_224_index_scale_0_Update)
          array_obj_ref_224_index_scale_0_update_complete <-& (array_obj_ref_224_index_scale_0_Update)
          array_obj_ref_224_index_scaled_0 <-& (array_obj_ref_224_index_scale_0_update_complete)
          array_obj_ref_224_index_scale_0_sample_start o<-& (array_obj_ref_224_index_scale_0_sample_complete 1)
          array_obj_ref_224_index_scale_0_update_start o<-& (array_obj_ref_224_index_scale_0_update_complete 0)
          $T[array_obj_ref_224_index_resized_1] 
          $T[array_obj_ref_224_index_scaled_1] 
          $T[array_obj_ref_224_index_computed_1] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_224_index_computed_1
          array_obj_ref_224_index_computed_1 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_224_index_computed_1
          ;;[array_obj_ref_224_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_224_index_computed_1 &-> (array_obj_ref_224_index_resize_1)
          array_obj_ref_224_index_resized_1 <-& (array_obj_ref_224_index_resize_1)
          ;;[array_obj_ref_224_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_224_index_resized_1 &-> (array_obj_ref_224_index_scale_1)
          array_obj_ref_224_index_scaled_1 <-& (array_obj_ref_224_index_scale_1)
          $T[array_obj_ref_224_partial_sum_1_sample_start] 
          $T[array_obj_ref_224_partial_sum_1_sample_complete] 
          $T[array_obj_ref_224_partial_sum_1_update_start] 
          $T[array_obj_ref_224_partial_sum_1_update_complete] 
          ;;[array_obj_ref_224_partial_sum_1_Sample] 
          {
            $T [rr] $T [ra] 
          }
          ;;[array_obj_ref_224_partial_sum_1_Update] 
          {
            $T [cr] $T [ca] 
          }
          array_obj_ref_224_partial_sum_1_sample_start &-> (array_obj_ref_224_partial_sum_1_Sample)
          array_obj_ref_224_partial_sum_1_sample_complete <-& (array_obj_ref_224_partial_sum_1_Sample)
          array_obj_ref_224_partial_sum_1_update_start &-> (array_obj_ref_224_partial_sum_1_Update)
          array_obj_ref_224_partial_sum_1_update_complete <-& (array_obj_ref_224_partial_sum_1_Update)
          array_obj_ref_224_partial_sum_1_sample_start o<-& (array_obj_ref_224_partial_sum_1_sample_complete 1)
          array_obj_ref_224_partial_sum_1_update_start o<-& (array_obj_ref_224_partial_sum_1_update_complete 0)
          array_obj_ref_224_partial_sum_1_sample_start <-& (array_obj_ref_224_index_scaled_0)
          array_obj_ref_224_partial_sum_1_sample_start <-& (array_obj_ref_224_index_scaled_1)
          array_obj_ref_224_index_scaled_0 o<-& (array_obj_ref_224_partial_sum_1_sample_complete 1)
          phi_stmt_176_update_start_ o<-& (array_obj_ref_224_partial_sum_1_sample_complete 1)
          array_obj_ref_224_offset_calculated <-& (array_obj_ref_224_partial_sum_1_update_complete)
          ;;[array_obj_ref_224_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_224_partial_sum_1_update_complete &-> (array_obj_ref_224_final_index_sum_regn)
          array_obj_ref_224_offset_calculated <-& (array_obj_ref_224_final_index_sum_regn)
          ;;[array_obj_ref_224_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_224_offset_calculated &-> (array_obj_ref_224_base_plus_offset)
          array_obj_ref_224_root_address_calculated <-& (array_obj_ref_224_base_plus_offset)
          ;;[array_obj_ref_224_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_224_root_address_calculated &-> (array_obj_ref_224_word_addrgen)
          array_obj_ref_224_word_address_calculated <-& (array_obj_ref_224_word_addrgen)
          ;;[array_obj_ref_224_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_224_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_224_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_224_sample_start_ <-& (array_obj_ref_224_word_address_calculated)
          // reenable-joins
          array_obj_ref_224_partial_sum_1_update_start o<-& (array_obj_ref_224_sample_completed_ 0)
          array_obj_ref_224_sample_start_ &-> (array_obj_ref_224_Sample)
          array_obj_ref_224_sample_completed_ <-& (array_obj_ref_224_Sample)
          array_obj_ref_224_sample_completed_ &-> ($null)
          array_obj_ref_224_update_start_ &-> (array_obj_ref_224_Update)
          array_obj_ref_224_update_completed_ <-& (array_obj_ref_224_Update)
          // self-release: 
          array_obj_ref_224_sample_start_ o<-& (array_obj_ref_224_sample_completed_ 1)
          $null &-> (array_obj_ref_224_update_start_)
          array_obj_ref_224_update_start_ o<-& (array_obj_ref_224_update_completed_ 0)
          // Target expression
          // (as target) a_rc_3
          // start: WAR dependencies for a_rc_3
          // done: WAR dependencies for a_rc_3
          // end:  			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 97
          // Source expression
          // x_0[Cr]
          $T[array_obj_ref_228_base_address_calculated] 
          $T[array_obj_ref_228_sample_start_] 
          $T[array_obj_ref_228_sample_completed_] 
          $T[array_obj_ref_228_update_start_] 
          $T[array_obj_ref_228_update_completed_] 
          $T[array_obj_ref_228_word_address_calculated] 
          $T[array_obj_ref_228_root_address_calculated] 
          $T[array_obj_ref_228_offset_calculated] 
          $T[array_obj_ref_228_index_resized_0] 
          $T[array_obj_ref_228_index_scaled_0] 
          $T[array_obj_ref_228_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_228_index_computed_0
          array_obj_ref_228_index_computed_0 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_228_index_computed_0
          ;;[array_obj_ref_228_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_228_index_computed_0 &-> (array_obj_ref_228_index_resize_0)
          array_obj_ref_228_index_resized_0 <-& (array_obj_ref_228_index_resize_0)
          ;;[array_obj_ref_228_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_228_index_resized_0 &-> (array_obj_ref_228_index_scale_0)
          array_obj_ref_228_index_scaled_0 <-& (array_obj_ref_228_index_scale_0)
          ;;[array_obj_ref_228_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_228_index_scaled_0 &-> (array_obj_ref_228_final_index_sum_regn)
          array_obj_ref_228_offset_calculated <-& (array_obj_ref_228_final_index_sum_regn)
          ;;[array_obj_ref_228_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_228_offset_calculated &-> (array_obj_ref_228_base_plus_offset)
          array_obj_ref_228_root_address_calculated <-& (array_obj_ref_228_base_plus_offset)
          ;;[array_obj_ref_228_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_228_root_address_calculated &-> (array_obj_ref_228_word_addrgen)
          array_obj_ref_228_word_address_calculated <-& (array_obj_ref_228_word_addrgen)
          ;;[array_obj_ref_228_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_228_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_228_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_228_sample_start_ <-& (array_obj_ref_228_word_address_calculated)
          // reenable-joins
          phi_stmt_176_update_start_ o<-& (array_obj_ref_228_sample_completed_ 0)
          array_obj_ref_228_sample_start_ &-> (array_obj_ref_228_Sample)
          array_obj_ref_228_sample_completed_ <-& (array_obj_ref_228_Sample)
          array_obj_ref_228_sample_completed_ &-> ($null)
          array_obj_ref_228_update_start_ &-> (array_obj_ref_228_Update)
          array_obj_ref_228_update_completed_ <-& (array_obj_ref_228_Update)
          // self-release: 
          array_obj_ref_228_sample_start_ o<-& (array_obj_ref_228_sample_completed_ 1)
          $null &-> (array_obj_ref_228_update_start_)
          array_obj_ref_228_update_start_ o<-& (array_obj_ref_228_update_completed_ 0)
          // Target expression
          // (as target) xval_0
          // start: WAR dependencies for xval_0
          // done: WAR dependencies for xval_0
          // end:  			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 98
          // Source expression
          // x_1[Cr]
          $T[array_obj_ref_232_base_address_calculated] 
          $T[array_obj_ref_232_sample_start_] 
          $T[array_obj_ref_232_sample_completed_] 
          $T[array_obj_ref_232_update_start_] 
          $T[array_obj_ref_232_update_completed_] 
          $T[array_obj_ref_232_word_address_calculated] 
          $T[array_obj_ref_232_root_address_calculated] 
          $T[array_obj_ref_232_offset_calculated] 
          $T[array_obj_ref_232_index_resized_0] 
          $T[array_obj_ref_232_index_scaled_0] 
          $T[array_obj_ref_232_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_232_index_computed_0
          array_obj_ref_232_index_computed_0 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_232_index_computed_0
          ;;[array_obj_ref_232_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_232_index_computed_0 &-> (array_obj_ref_232_index_resize_0)
          array_obj_ref_232_index_resized_0 <-& (array_obj_ref_232_index_resize_0)
          ;;[array_obj_ref_232_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_232_index_resized_0 &-> (array_obj_ref_232_index_scale_0)
          array_obj_ref_232_index_scaled_0 <-& (array_obj_ref_232_index_scale_0)
          ;;[array_obj_ref_232_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_232_index_scaled_0 &-> (array_obj_ref_232_final_index_sum_regn)
          array_obj_ref_232_offset_calculated <-& (array_obj_ref_232_final_index_sum_regn)
          ;;[array_obj_ref_232_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_232_offset_calculated &-> (array_obj_ref_232_base_plus_offset)
          array_obj_ref_232_root_address_calculated <-& (array_obj_ref_232_base_plus_offset)
          ;;[array_obj_ref_232_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_232_root_address_calculated &-> (array_obj_ref_232_word_addrgen)
          array_obj_ref_232_word_address_calculated <-& (array_obj_ref_232_word_addrgen)
          ;;[array_obj_ref_232_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_232_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_232_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_232_sample_start_ <-& (array_obj_ref_232_word_address_calculated)
          // reenable-joins
          phi_stmt_176_update_start_ o<-& (array_obj_ref_232_sample_completed_ 0)
          array_obj_ref_232_sample_start_ &-> (array_obj_ref_232_Sample)
          array_obj_ref_232_sample_completed_ <-& (array_obj_ref_232_Sample)
          array_obj_ref_232_sample_completed_ &-> ($null)
          array_obj_ref_232_update_start_ &-> (array_obj_ref_232_Update)
          array_obj_ref_232_update_completed_ <-& (array_obj_ref_232_Update)
          // self-release: 
          array_obj_ref_232_sample_start_ o<-& (array_obj_ref_232_sample_completed_ 1)
          $null &-> (array_obj_ref_232_update_start_)
          array_obj_ref_232_update_start_ o<-& (array_obj_ref_232_update_completed_ 0)
          // Target expression
          // (as target) xval_1
          // start: WAR dependencies for xval_1
          // done: WAR dependencies for xval_1
          // end:  			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 99
          // Source expression
          // x_2[Cr]
          $T[array_obj_ref_236_base_address_calculated] 
          $T[array_obj_ref_236_sample_start_] 
          $T[array_obj_ref_236_sample_completed_] 
          $T[array_obj_ref_236_update_start_] 
          $T[array_obj_ref_236_update_completed_] 
          $T[array_obj_ref_236_word_address_calculated] 
          $T[array_obj_ref_236_root_address_calculated] 
          $T[array_obj_ref_236_offset_calculated] 
          $T[array_obj_ref_236_index_resized_0] 
          $T[array_obj_ref_236_index_scaled_0] 
          $T[array_obj_ref_236_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_236_index_computed_0
          array_obj_ref_236_index_computed_0 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_236_index_computed_0
          ;;[array_obj_ref_236_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_236_index_computed_0 &-> (array_obj_ref_236_index_resize_0)
          array_obj_ref_236_index_resized_0 <-& (array_obj_ref_236_index_resize_0)
          ;;[array_obj_ref_236_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_236_index_resized_0 &-> (array_obj_ref_236_index_scale_0)
          array_obj_ref_236_index_scaled_0 <-& (array_obj_ref_236_index_scale_0)
          ;;[array_obj_ref_236_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_236_index_scaled_0 &-> (array_obj_ref_236_final_index_sum_regn)
          array_obj_ref_236_offset_calculated <-& (array_obj_ref_236_final_index_sum_regn)
          ;;[array_obj_ref_236_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_236_offset_calculated &-> (array_obj_ref_236_base_plus_offset)
          array_obj_ref_236_root_address_calculated <-& (array_obj_ref_236_base_plus_offset)
          ;;[array_obj_ref_236_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_236_root_address_calculated &-> (array_obj_ref_236_word_addrgen)
          array_obj_ref_236_word_address_calculated <-& (array_obj_ref_236_word_addrgen)
          ;;[array_obj_ref_236_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_236_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_236_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_236_sample_start_ <-& (array_obj_ref_236_word_address_calculated)
          // reenable-joins
          phi_stmt_176_update_start_ o<-& (array_obj_ref_236_sample_completed_ 0)
          array_obj_ref_236_sample_start_ &-> (array_obj_ref_236_Sample)
          array_obj_ref_236_sample_completed_ <-& (array_obj_ref_236_Sample)
          array_obj_ref_236_sample_completed_ &-> ($null)
          array_obj_ref_236_update_start_ &-> (array_obj_ref_236_Update)
          array_obj_ref_236_update_completed_ <-& (array_obj_ref_236_Update)
          // self-release: 
          array_obj_ref_236_sample_start_ o<-& (array_obj_ref_236_sample_completed_ 1)
          $null &-> (array_obj_ref_236_update_start_)
          array_obj_ref_236_update_start_ o<-& (array_obj_ref_236_update_completed_ 0)
          // Target expression
          // (as target) xval_2
          // start: WAR dependencies for xval_2
          // done: WAR dependencies for xval_2
          // end:  			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 100
          // Source expression
          // x_3[Cr]
          $T[array_obj_ref_240_base_address_calculated] 
          $T[array_obj_ref_240_sample_start_] 
          $T[array_obj_ref_240_sample_completed_] 
          $T[array_obj_ref_240_update_start_] 
          $T[array_obj_ref_240_update_completed_] 
          $T[array_obj_ref_240_word_address_calculated] 
          $T[array_obj_ref_240_root_address_calculated] 
          $T[array_obj_ref_240_offset_calculated] 
          $T[array_obj_ref_240_index_resized_0] 
          $T[array_obj_ref_240_index_scaled_0] 
          $T[array_obj_ref_240_index_computed_0] 
          // Cr
          // start: Forward dependencies from Cr to transition array_obj_ref_240_index_computed_0
          array_obj_ref_240_index_computed_0 <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from Cr to transition array_obj_ref_240_index_computed_0
          ;;[array_obj_ref_240_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_240_index_computed_0 &-> (array_obj_ref_240_index_resize_0)
          array_obj_ref_240_index_resized_0 <-& (array_obj_ref_240_index_resize_0)
          ;;[array_obj_ref_240_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_240_index_resized_0 &-> (array_obj_ref_240_index_scale_0)
          array_obj_ref_240_index_scaled_0 <-& (array_obj_ref_240_index_scale_0)
          ;;[array_obj_ref_240_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_240_index_scaled_0 &-> (array_obj_ref_240_final_index_sum_regn)
          array_obj_ref_240_offset_calculated <-& (array_obj_ref_240_final_index_sum_regn)
          ;;[array_obj_ref_240_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_240_offset_calculated &-> (array_obj_ref_240_base_plus_offset)
          array_obj_ref_240_root_address_calculated <-& (array_obj_ref_240_base_plus_offset)
          ;;[array_obj_ref_240_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_240_root_address_calculated &-> (array_obj_ref_240_word_addrgen)
          array_obj_ref_240_word_address_calculated <-& (array_obj_ref_240_word_addrgen)
          ;;[array_obj_ref_240_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_240_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_240_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_240_sample_start_ <-& (array_obj_ref_240_word_address_calculated)
          // reenable-joins
          phi_stmt_176_update_start_ o<-& (array_obj_ref_240_sample_completed_ 0)
          array_obj_ref_240_sample_start_ &-> (array_obj_ref_240_Sample)
          array_obj_ref_240_sample_completed_ <-& (array_obj_ref_240_Sample)
          array_obj_ref_240_sample_completed_ &-> ($null)
          array_obj_ref_240_update_start_ &-> (array_obj_ref_240_Update)
          array_obj_ref_240_update_completed_ <-& (array_obj_ref_240_Update)
          // self-release: 
          array_obj_ref_240_sample_start_ o<-& (array_obj_ref_240_sample_completed_ 1)
          $null &-> (array_obj_ref_240_update_start_)
          array_obj_ref_240_update_start_ o<-& (array_obj_ref_240_update_completed_ 0)
          // Target expression
          // (as target) xval_3
          // start: WAR dependencies for xval_3
          // done: WAR dependencies for xval_3
          // end:  			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          // start:  			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 101
          $T[assign_stmt_244_sample_start_] 
          $T[assign_stmt_244_sample_completed_] 
          $T[assign_stmt_244_update_start_] 
          $T[assign_stmt_244_update_completed_] 
          // Source expression
          // val_0
          // Target expression
          // (as target) val_0_231_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_244_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_244_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_244_sample_start_ &-> (assign_stmt_244_Sample)
          assign_stmt_244_sample_completed_ <-& (assign_stmt_244_Sample)
          assign_stmt_244_sample_completed_ &-> ($null)
          assign_stmt_244_update_start_ &-> (assign_stmt_244_Update)
          assign_stmt_244_update_completed_ <-& (assign_stmt_244_Update)
          // start: Forward dependencies from val_0 to transition assign_stmt_244_sample_start_
          assign_stmt_244_sample_start_ <-& (phi_stmt_181_update_completed_)
          // done: Forward dependencies from val_0 to transition assign_stmt_244_sample_start_
          // RAW reenables for val_0
          phi_stmt_181_update_start_ o<-& (assign_stmt_244_sample_completed_ 0)
          // self-release: 
          assign_stmt_244_sample_start_ o<-& (assign_stmt_244_sample_completed_ 1)
          $null &-> (assign_stmt_244_update_start_)
          assign_stmt_244_update_start_ o<-& (assign_stmt_244_update_completed_ 0)
          // start: WAR dependencies for val_0_231_delayed_5_0
          // done: WAR dependencies for val_0_231_delayed_5_0
          // end:  			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_0
          // WAR dependency: Read: nval_0 before Write: 			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          array_obj_ref_209_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (array_obj_ref_209_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			a_rc_0 := A_0[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_228_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (array_obj_ref_228_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			xval_0 := x_0[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_244_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (assign_stmt_244_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_0
          // start:  			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 102
          // volatile! 
          // Source expression
          // (val_0_231_delayed_5_0 + (a_rc_0 * xval_0))
          // val_0_231_delayed_5_0
          // (a_rc_0 * xval_0)
          // a_rc_0
          // xval_0
          // Target expression
          // (as target) nval_0
          // start: WAR dependencies for nval_0
          // WAR dependency: Read: nval_0 before Write: 			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          array_obj_ref_209_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (array_obj_ref_209_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_228_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (array_obj_ref_228_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_244_update_start_ <-& (phi_stmt_181_sample_completed_)
          phi_stmt_181_sample_start_ o<-& (assign_stmt_244_update_completed_ 0)
          // WAR dependency: release  Read: nval_0 with Write: 			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_0
          // end:  			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
          // start:  			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 104
          $T[assign_stmt_259_sample_start_] 
          $T[assign_stmt_259_sample_completed_] 
          $T[assign_stmt_259_update_start_] 
          $T[assign_stmt_259_update_completed_] 
          // Source expression
          // val_1
          // Target expression
          // (as target) val_1_243_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_259_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_259_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_259_sample_start_ &-> (assign_stmt_259_Sample)
          assign_stmt_259_sample_completed_ <-& (assign_stmt_259_Sample)
          assign_stmt_259_sample_completed_ &-> ($null)
          assign_stmt_259_update_start_ &-> (assign_stmt_259_Update)
          assign_stmt_259_update_completed_ <-& (assign_stmt_259_Update)
          // start: Forward dependencies from val_1 to transition assign_stmt_259_sample_start_
          assign_stmt_259_sample_start_ <-& (phi_stmt_186_update_completed_)
          // done: Forward dependencies from val_1 to transition assign_stmt_259_sample_start_
          // RAW reenables for val_1
          phi_stmt_186_update_start_ o<-& (assign_stmt_259_sample_completed_ 0)
          // self-release: 
          assign_stmt_259_sample_start_ o<-& (assign_stmt_259_sample_completed_ 1)
          $null &-> (assign_stmt_259_update_start_)
          assign_stmt_259_update_start_ o<-& (assign_stmt_259_update_completed_ 0)
          // start: WAR dependencies for val_1_243_delayed_5_0
          // done: WAR dependencies for val_1_243_delayed_5_0
          // end:  			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_1
          // WAR dependency: Read: nval_1 before Write: 			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          array_obj_ref_214_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (array_obj_ref_214_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			a_rc_1 := A_1[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_232_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (array_obj_ref_232_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			xval_1 := x_1[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_259_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (assign_stmt_259_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_1
          // start:  			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 105
          // volatile! 
          // Source expression
          // (val_1_243_delayed_5_0 + (a_rc_1 * xval_1))
          // val_1_243_delayed_5_0
          // (a_rc_1 * xval_1)
          // a_rc_1
          // xval_1
          // Target expression
          // (as target) nval_1
          // start: WAR dependencies for nval_1
          // WAR dependency: Read: nval_1 before Write: 			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          array_obj_ref_214_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (array_obj_ref_214_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_232_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (array_obj_ref_232_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_259_update_start_ <-& (phi_stmt_186_sample_completed_)
          phi_stmt_186_sample_start_ o<-& (assign_stmt_259_update_completed_ 0)
          // WAR dependency: release  Read: nval_1 with Write: 			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_1
          // end:  			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
          // start:  			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 107
          $T[assign_stmt_274_sample_start_] 
          $T[assign_stmt_274_sample_completed_] 
          $T[assign_stmt_274_update_start_] 
          $T[assign_stmt_274_update_completed_] 
          // Source expression
          // val_2
          // Target expression
          // (as target) val_2_255_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_274_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_274_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_274_sample_start_ &-> (assign_stmt_274_Sample)
          assign_stmt_274_sample_completed_ <-& (assign_stmt_274_Sample)
          assign_stmt_274_sample_completed_ &-> ($null)
          assign_stmt_274_update_start_ &-> (assign_stmt_274_Update)
          assign_stmt_274_update_completed_ <-& (assign_stmt_274_Update)
          // start: Forward dependencies from val_2 to transition assign_stmt_274_sample_start_
          assign_stmt_274_sample_start_ <-& (phi_stmt_191_update_completed_)
          // done: Forward dependencies from val_2 to transition assign_stmt_274_sample_start_
          // RAW reenables for val_2
          phi_stmt_191_update_start_ o<-& (assign_stmt_274_sample_completed_ 0)
          // self-release: 
          assign_stmt_274_sample_start_ o<-& (assign_stmt_274_sample_completed_ 1)
          $null &-> (assign_stmt_274_update_start_)
          assign_stmt_274_update_start_ o<-& (assign_stmt_274_update_completed_ 0)
          // start: WAR dependencies for val_2_255_delayed_5_0
          // done: WAR dependencies for val_2_255_delayed_5_0
          // end:  			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_2
          // WAR dependency: Read: nval_2 before Write: 			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          array_obj_ref_219_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (array_obj_ref_219_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			a_rc_2 := A_2[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_236_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (array_obj_ref_236_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			xval_2 := x_2[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_274_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (assign_stmt_274_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_2
          // start:  			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 108
          // volatile! 
          // Source expression
          // (val_2_255_delayed_5_0 + (a_rc_2 * xval_2))
          // val_2_255_delayed_5_0
          // (a_rc_2 * xval_2)
          // a_rc_2
          // xval_2
          // Target expression
          // (as target) nval_2
          // start: WAR dependencies for nval_2
          // WAR dependency: Read: nval_2 before Write: 			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          array_obj_ref_219_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (array_obj_ref_219_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_236_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (array_obj_ref_236_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_274_update_start_ <-& (phi_stmt_191_sample_completed_)
          phi_stmt_191_sample_start_ o<-& (assign_stmt_274_update_completed_ 0)
          // WAR dependency: release  Read: nval_2 with Write: 			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_2
          // end:  			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
          // start:  			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          //  file .Aa/mvp.opt.aa, line 110
          $T[assign_stmt_289_sample_start_] 
          $T[assign_stmt_289_sample_completed_] 
          $T[assign_stmt_289_update_start_] 
          $T[assign_stmt_289_update_completed_] 
          // Source expression
          // val_3
          // Target expression
          // (as target) val_3_267_delayed_5_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_289_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_289_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_289_sample_start_ &-> (assign_stmt_289_Sample)
          assign_stmt_289_sample_completed_ <-& (assign_stmt_289_Sample)
          assign_stmt_289_sample_completed_ &-> ($null)
          assign_stmt_289_update_start_ &-> (assign_stmt_289_Update)
          assign_stmt_289_update_completed_ <-& (assign_stmt_289_Update)
          // start: Forward dependencies from val_3 to transition assign_stmt_289_sample_start_
          assign_stmt_289_sample_start_ <-& (phi_stmt_196_update_completed_)
          // done: Forward dependencies from val_3 to transition assign_stmt_289_sample_start_
          // RAW reenables for val_3
          phi_stmt_196_update_start_ o<-& (assign_stmt_289_sample_completed_ 0)
          // self-release: 
          assign_stmt_289_sample_start_ o<-& (assign_stmt_289_sample_completed_ 1)
          $null &-> (assign_stmt_289_update_start_)
          assign_stmt_289_update_start_ o<-& (assign_stmt_289_update_completed_ 0)
          // start: WAR dependencies for val_3_267_delayed_5_0
          // done: WAR dependencies for val_3_267_delayed_5_0
          // end:  			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // start: WAR dependencies for nval_3
          // WAR dependency: Read: nval_3 before Write: 			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          array_obj_ref_224_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (array_obj_ref_224_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			a_rc_3 := A_3[R][Cr] $buffering 1// bits of buffering = 32. 
          array_obj_ref_240_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (array_obj_ref_240_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			xval_3 := x_3[Cr] $buffering 1// bits of buffering = 32. 
          assign_stmt_289_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (assign_stmt_289_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_3
          // start:  			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          //  file .Aa/mvp.opt.aa, line 111
          // volatile! 
          // Source expression
          // (val_3_267_delayed_5_0 + (a_rc_3 * xval_3))
          // val_3_267_delayed_5_0
          // (a_rc_3 * xval_3)
          // a_rc_3
          // xval_3
          // Target expression
          // (as target) nval_3
          // start: WAR dependencies for nval_3
          // WAR dependency: Read: nval_3 before Write: 			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          array_obj_ref_224_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (array_obj_ref_224_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
          array_obj_ref_240_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (array_obj_ref_240_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
          assign_stmt_289_update_start_ <-& (phi_stmt_196_sample_completed_)
          phi_stmt_196_sample_start_ o<-& (assign_stmt_289_update_completed_ 0)
          // WAR dependency: release  Read: nval_3 with Write: 			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
          // done: WAR dependencies for nval_3
          // end:  			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
          // start:  			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          //  file .Aa/mvp.opt.aa, line 113
          // Source expression
          // (C + 4 )
          $T[ADD_u8_u8_305_sample_start_] 
          $T[ADD_u8_u8_305_sample_completed_] 
          $T[ADD_u8_u8_305_update_start_] 
          $T[ADD_u8_u8_305_update_completed_] 
          // C
          // start: Forward dependencies from C to transition ADD_u8_u8_305_sample_start_
          ADD_u8_u8_305_sample_start_ <-& (phi_stmt_176_update_completed_)
          // done: Forward dependencies from C to transition ADD_u8_u8_305_sample_start_
          ;;[ADD_u8_u8_305_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_305_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_305_sample_start_ &-> (ADD_u8_u8_305_Sample)
          ADD_u8_u8_305_sample_completed_ <-& (ADD_u8_u8_305_Sample)
          ADD_u8_u8_305_sample_completed_ &-> ($null)
          ADD_u8_u8_305_update_start_ &-> (ADD_u8_u8_305_Update)
          ADD_u8_u8_305_update_completed_ <-& (ADD_u8_u8_305_Update)
          // RAW reenables for C
          phi_stmt_176_update_start_ o<-& (ADD_u8_u8_305_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_305_sample_start_ o<-& (ADD_u8_u8_305_sample_completed_ 1)
          $null &-> (ADD_u8_u8_305_update_start_)
          ADD_u8_u8_305_update_start_ o<-& (ADD_u8_u8_305_update_completed_ 0)
          // Target expression
          // (as target) nC
          // start: WAR dependencies for nC
          // WAR dependency: Read: nC before Write: 			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          ADD_u8_u8_305_update_start_ <-& (phi_stmt_176_sample_completed_)
          phi_stmt_176_sample_start_ o<-& (ADD_u8_u8_305_update_completed_ 0)
          // WAR dependency: release  Read: nC with Write: 			nC := (C + 4 ) $buffering 1// bits of buffering = 8. 
          // done: WAR dependencies for nC
          // end:  			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
          // (nC < 32 )
          // nC
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (nC < 32 ) to transition condition_evaluated
          condition_evaluated <-& (ADD_u8_u8_305_update_completed_)
          // done: Forward dependencies from (nC < 32 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_2
          //  array_obj_ref_219 load
          // reenable across ring for memory space memory_space_2
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_5
          //  array_obj_ref_232 load
          // reenable across ring for memory space memory_space_5
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_1
          //  array_obj_ref_214 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_0
          //  array_obj_ref_209 load
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_4
          //  array_obj_ref_228 load
          // reenable across ring for memory space memory_space_4
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_7
          //  array_obj_ref_240 load
          // reenable across ring for memory space memory_space_7
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_6
          //  array_obj_ref_236 load
          // reenable across ring for memory space memory_space_6
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_3
          //  array_obj_ref_224 load
          // reenable across ring for memory space memory_space_3
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_174__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_174_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_174__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_174_loop_body : condition_evaluated
        $bind do_while_stmt_174__entry__  => do_while_stmt_174_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_174_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_174__exit__)
      }
      do_while_stmt_174__entry__ |-> (do_while_stmt_174)
      do_while_stmt_174__exit__ <-| (do_while_stmt_174)
      do_while_stmt_174__entry__ <-| (branch_block_stmt_173__entry__)
      do_while_stmt_174__exit__ |-> (branch_block_stmt_173__exit__)
    }
    ::[assign_stmt_320] 
    {
      // start:  	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
      //  file .Aa/mvp.opt.aa, line 117
      // Source expression
      // (nval_0 + (nval_1 + (nval_2 + nval_3)))
      $T[ADD_u32_u32_319_sample_start_] 
      $T[ADD_u32_u32_319_sample_completed_] 
      $T[ADD_u32_u32_319_update_start_] 
      $T[ADD_u32_u32_319_update_completed_] 
      // nval_0
      // (nval_1 + (nval_2 + nval_3))
      // nval_1
      // (nval_2 + nval_3)
      // nval_2
      // nval_3
      // start: Forward dependencies from nval_0 to transition ADD_u32_u32_319_sample_start_
      // done: Forward dependencies from nval_0 to transition ADD_u32_u32_319_sample_start_
      // start: Forward dependencies from (nval_1 + (nval_2 + nval_3)) to transition ADD_u32_u32_319_sample_start_
      // done: Forward dependencies from (nval_1 + (nval_2 + nval_3)) to transition ADD_u32_u32_319_sample_start_
      ;;[ADD_u32_u32_319_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[ADD_u32_u32_319_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      ADD_u32_u32_319_sample_start_ &-> (ADD_u32_u32_319_Sample)
      ADD_u32_u32_319_sample_completed_ <-& (ADD_u32_u32_319_Sample)
      ADD_u32_u32_319_sample_completed_ &-> ($null)
      ADD_u32_u32_319_update_start_ &-> (ADD_u32_u32_319_Update)
      ADD_u32_u32_319_update_completed_ <-& (ADD_u32_u32_319_Update)
      // Target expression
      // (as target) result
      // result
      // write to interface object
      // start: WAR dependencies for result
      // done: WAR dependencies for result
      // result
      // write to interface object
      // end:  	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dotP_odd%mmloop%
    //  file .Aa/mvp.opt.aa, line 80
    // constant-object-declarations for block %dotP_odd%mmloop
    //  file .Aa/mvp.opt.aa, line 76
    // constant-object-declarations for block %dotP_odd
    //  file .Aa/mvp.opt.aa, line 71
    // constant-declarations for block %dotP_odd%mmloop
    //  file .Aa/mvp.opt.aa, line 76
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 78
    // 32 
    $constant $W[konst_309_wire_constant] : $int<8> := _b00100000// 32
    // constant-declarations for block %dotP_odd%mmloop%
    //  file .Aa/mvp.opt.aa, line 80
    // constant-declarations for phi:  			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 81
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_179_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 83
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_184_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 85
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_189_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 87
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_194_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 89
    // ($bitcast ($uint<32>) 0  )
    $constant $W[type_cast_199_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // A_0[R][Cr]
    $constant $W[array_obj_ref_209_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_209_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_209_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_209_word_offset_0] : $int<8> := _b00000000// 0
    // A_1[R][Cr]
    $constant $W[array_obj_ref_214_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_214_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_214_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_214_word_offset_0] : $int<8> := _b00000000// 0
    // A_2[R][Cr]
    $constant $W[array_obj_ref_219_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_219_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_219_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_219_word_offset_0] : $int<8> := _b00000000// 0
    // A_3[R][Cr]
    $constant $W[array_obj_ref_224_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_224_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_224_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_224_word_offset_0] : $int<8> := _b00000000// 0
    // x_0[Cr]
    $constant $W[array_obj_ref_228_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_228_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_228_word_offset_0] : $int<3> := _b000// 0
    // x_1[Cr]
    $constant $W[array_obj_ref_232_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_232_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_232_word_offset_0] : $int<3> := _b000// 0
    // x_2[Cr]
    $constant $W[array_obj_ref_236_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_236_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_236_word_offset_0] : $int<3> := _b000// 0
    // x_3[Cr]
    $constant $W[array_obj_ref_240_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_240_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_240_word_offset_0] : $int<3> := _b000// 0
    // 4 
    $constant $W[konst_304_wire_constant] : $int<8> := _b00000100// 4
    // block %dotP_odd%mmloop
    //  file .Aa/mvp.opt.aa, line 76
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 78
    // (nC < 32 )
    $intermediate $W[ULT_u8_u1_310_wire] : $int<1>
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 80
    // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 81
    $W[nC_306_180_buffered] : $int<8>
    // C
    $W[C_176] : $int<8>
    // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 83
    $W[nval_0_251_185_buffered] : $int<32>
    // val_0
    $W[val_0_181] : $int<32>
    // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 85
    $W[nval_1_266_190_buffered] : $int<32>
    // val_1
    $W[val_1_186] : $int<32>
    // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 87
    $W[nval_2_281_195_buffered] : $int<32>
    // val_2
    $W[val_2_191] : $int<32>
    // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 89
    $W[nval_3_296_200_buffered] : $int<32>
    // val_3
    $W[val_3_196] : $int<32>
    // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 92
    // Cr
    $W[Cr_205] : $int<6>
    // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 93
    // A_0[R][Cr]
    $intermediate $W[R_R_207_resized] : $int<8>
    $intermediate $W[R_R_207_scaled] : $int<8>
    $intermediate $W[R_Cr_208_resized] : $int<8>
    $intermediate $W[R_Cr_208_scaled] : $int<8>
    $intermediate $W[array_obj_ref_209_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_209_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_209_root_address] : $int<8>
    $W[array_obj_ref_209_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_209_data_0] : $int<32>
    // a_rc_0
    $W[a_rc_0_210] : $int<32>
    // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 94
    // A_1[R][Cr]
    $intermediate $W[R_R_212_resized] : $int<8>
    $intermediate $W[R_R_212_scaled] : $int<8>
    $intermediate $W[R_Cr_213_resized] : $int<8>
    $intermediate $W[R_Cr_213_scaled] : $int<8>
    $intermediate $W[array_obj_ref_214_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_214_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_214_root_address] : $int<8>
    $W[array_obj_ref_214_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_214_data_0] : $int<32>
    // a_rc_1
    $W[a_rc_1_215] : $int<32>
    // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 95
    // A_2[R][Cr]
    $intermediate $W[R_R_217_resized] : $int<8>
    $intermediate $W[R_R_217_scaled] : $int<8>
    $intermediate $W[R_Cr_218_resized] : $int<8>
    $intermediate $W[R_Cr_218_scaled] : $int<8>
    $intermediate $W[array_obj_ref_219_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_219_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_219_root_address] : $int<8>
    $W[array_obj_ref_219_word_address_0] : $pointer<memory_space_2>
    $W[array_obj_ref_219_data_0] : $int<32>
    // a_rc_2
    $W[a_rc_2_220] : $int<32>
    // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 96
    // A_3[R][Cr]
    $intermediate $W[R_R_222_resized] : $int<8>
    $intermediate $W[R_R_222_scaled] : $int<8>
    $intermediate $W[R_Cr_223_resized] : $int<8>
    $intermediate $W[R_Cr_223_scaled] : $int<8>
    $intermediate $W[array_obj_ref_224_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_224_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_224_root_address] : $int<8>
    $W[array_obj_ref_224_word_address_0] : $pointer<memory_space_3>
    $W[array_obj_ref_224_data_0] : $int<32>
    // a_rc_3
    $W[a_rc_3_225] : $int<32>
    // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 97
    // x_0[Cr]
    $intermediate $W[R_Cr_227_resized] : $int<3>
    $intermediate $W[R_Cr_227_scaled] : $int<3>
    $intermediate $W[array_obj_ref_228_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_228_root_address] : $int<3>
    $W[array_obj_ref_228_word_address_0] : $pointer<memory_space_4>
    $W[array_obj_ref_228_data_0] : $int<32>
    // xval_0
    $W[xval_0_229] : $int<32>
    // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 98
    // x_1[Cr]
    $intermediate $W[R_Cr_231_resized] : $int<3>
    $intermediate $W[R_Cr_231_scaled] : $int<3>
    $intermediate $W[array_obj_ref_232_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_232_root_address] : $int<3>
    $W[array_obj_ref_232_word_address_0] : $pointer<memory_space_5>
    $W[array_obj_ref_232_data_0] : $int<32>
    // xval_1
    $W[xval_1_233] : $int<32>
    // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 99
    // x_2[Cr]
    $intermediate $W[R_Cr_235_resized] : $int<3>
    $intermediate $W[R_Cr_235_scaled] : $int<3>
    $intermediate $W[array_obj_ref_236_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_236_root_address] : $int<3>
    $W[array_obj_ref_236_word_address_0] : $pointer<memory_space_6>
    $W[array_obj_ref_236_data_0] : $int<32>
    // xval_2
    $W[xval_2_237] : $int<32>
    // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 100
    // x_3[Cr]
    $intermediate $W[R_Cr_239_resized] : $int<3>
    $intermediate $W[R_Cr_239_scaled] : $int<3>
    $intermediate $W[array_obj_ref_240_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_240_root_address] : $int<3>
    $W[array_obj_ref_240_word_address_0] : $pointer<memory_space_7>
    $W[array_obj_ref_240_data_0] : $int<32>
    // xval_3
    $W[xval_3_241] : $int<32>
    // 			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 101
    // val_0_231_delayed_5_0
    $W[val_0_231_delayed_5_0_244] : $int<32>
    // 			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 102
    // (a_rc_0 * xval_0)
    $intermediate $W[MUL_u32_u32_249_wire] : $int<32>
    // nval_0
    $W[nval_0_251] : $int<32>
    // 			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 104
    // val_1_243_delayed_5_0
    $W[val_1_243_delayed_5_0_259] : $int<32>
    // 			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 105
    // (a_rc_1 * xval_1)
    $intermediate $W[MUL_u32_u32_264_wire] : $int<32>
    // nval_1
    $W[nval_1_266] : $int<32>
    // 			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 107
    // val_2_255_delayed_5_0
    $W[val_2_255_delayed_5_0_274] : $int<32>
    // 			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 108
    // (a_rc_2 * xval_2)
    $intermediate $W[MUL_u32_u32_279_wire] : $int<32>
    // nval_2
    $W[nval_2_281] : $int<32>
    // 			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 110
    // val_3_267_delayed_5_0
    $W[val_3_267_delayed_5_0_289] : $int<32>
    // 			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 111
    // (a_rc_3 * xval_3)
    $intermediate $W[MUL_u32_u32_294_wire] : $int<32>
    // nval_3
    $W[nval_3_296] : $int<32>
    // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
    //  file .Aa/mvp.opt.aa, line 113
    // nC
    $W[nC_306] : $int<8>
    // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 117
    // (nval_2 + nval_3)
    $intermediate $W[ADD_u32_u32_317_wire] : $int<32>
    // (nval_1 + (nval_2 + nval_3))
    $intermediate $W[ADD_u32_u32_318_wire] : $int<32>
    // result
    // datapath-instances for block %dotP_odd%mmloop
    //  file .Aa/mvp.opt.aa, line 76
    // datapath-instances for do-while  
    //  file .Aa/mvp.opt.aa, line 78
    // (nC < 32 )
    <[ULT_u8_u1_310_inst] (nC_306 konst_309_wire_constant) (ULT_u8_u1_310_wire)   $flowthrough 
    $delay ULT_u8_u1_310_inst 0
    ==0? [do_while_stmt_174_branch] (ULT_u8_u1_310_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 80
    // 			$phi C := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nC $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 81
    # := [nC_306_180_buf] (nC_306) (nC_306_180_buffered)     $fullrate
    $buffering $out nC_306_180_buf nC_306_180_buffered  1
    # $phi [phi_stmt_176] (type_cast_179_wire_constant nC_306_180_buffered) ( C_176 ) $fullrate
    // $buffering  $out phi_stmt_176 C_176 2
    // 			$phi val_0 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_0 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 83
    # := [nval_0_251_185_buf] (nval_0_251) (nval_0_251_185_buffered)     $fullrate
    $buffering $out nval_0_251_185_buf nval_0_251_185_buffered  1
    # $phi [phi_stmt_181] (type_cast_184_wire_constant nval_0_251_185_buffered) ( val_0_181 ) $fullrate
    // $buffering  $out phi_stmt_181 val_0_181 2
    // 			$phi val_1 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_1 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 85
    # := [nval_1_266_190_buf] (nval_1_266) (nval_1_266_190_buffered)     $fullrate
    $buffering $out nval_1_266_190_buf nval_1_266_190_buffered  1
    # $phi [phi_stmt_186] (type_cast_189_wire_constant nval_1_266_190_buffered) ( val_1_186 ) $fullrate
    // $buffering  $out phi_stmt_186 val_1_186 2
    // 			$phi val_2 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_2 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 87
    # := [nval_2_281_195_buf] (nval_2_281) (nval_2_281_195_buffered)     $fullrate
    $buffering $out nval_2_281_195_buf nval_2_281_195_buffered  1
    # $phi [phi_stmt_191] (type_cast_194_wire_constant nval_2_281_195_buffered) ( val_2_191 ) $fullrate
    // $buffering  $out phi_stmt_191 val_2_191 2
    // 			$phi val_3 := 			  ($bitcast ($uint<32>) 0  ) $on   $entry 			  nval_3 $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/mvp.opt.aa, line 89
    # := [nval_3_296_200_buf] (nval_3_296) (nval_3_296_200_buffered)     $fullrate
    $buffering $out nval_3_296_200_buf nval_3_296_200_buffered  1
    # $phi [phi_stmt_196] (type_cast_199_wire_constant nval_3_296_200_buffered) ( val_3_196 ) $fullrate
    // $buffering  $out phi_stmt_196 val_3_196 2
    // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 92
    // ( $slice C 7 2 ) 
    [:] [slice_204_inst] (C_176 7 2) (Cr_205)  $flowthrough
    $delay slice_204_inst 0
    // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 93
    // A_0[R][Cr]
    &/ [array_obj_ref_209_index_0_resize] (R) (R_R_207_resized) 
    $flowthrough 
    *[array_obj_ref_209_index_0_scale] (R_R_207_resized array_obj_ref_209_offset_scale_factor_0) (R_R_207_scaled)    $fullrate
    $buffering  $in array_obj_ref_209_index_0_scale R_R_207_resized 2
    $buffering  $in array_obj_ref_209_index_0_scale array_obj_ref_209_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_209_index_0_scale R_R_207_scaled 2
    $delay array_obj_ref_209_index_0_scale 2
    &/ [array_obj_ref_209_index_1_resize] (Cr_205) (R_Cr_208_resized) 
    $flowthrough 
    &/ [array_obj_ref_209_index_1_rename] (R_Cr_208_resized) (R_Cr_208_scaled) 
    $flowthrough 
    +[array_obj_ref_209_index_sum_1] (R_Cr_208_scaled R_R_207_scaled) (array_obj_ref_209_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_209_index_sum_1 R_Cr_208_scaled 2
    $buffering  $in array_obj_ref_209_index_sum_1 R_R_207_scaled 2
    $buffering  $out array_obj_ref_209_index_sum_1 array_obj_ref_209_index_partial_sum_1 2
    $delay array_obj_ref_209_index_sum_1 2
    &/ [array_obj_ref_209_index_offset] (array_obj_ref_209_index_partial_sum_1) (array_obj_ref_209_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_209_root_address_inst] (array_obj_ref_209_final_offset) (array_obj_ref_209_root_address) 
    $flowthrough 
    &/ [array_obj_ref_209_addr_0] (array_obj_ref_209_root_address) (array_obj_ref_209_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_209_load_0] $from memory_space_0 (array_obj_ref_209_word_address_0) (array_obj_ref_209_data_0) 
    $buffering  $in array_obj_ref_209_load_0 array_obj_ref_209_word_address_0 2
    $buffering  $out array_obj_ref_209_load_0 array_obj_ref_209_data_0 2
    $delay array_obj_ref_209_load_0 5
    &/ [array_obj_ref_209_gather_scatter] (array_obj_ref_209_data_0) (a_rc_0_210) 
    $flowthrough 
    // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 94
    // A_1[R][Cr]
    &/ [array_obj_ref_214_index_0_resize] (R) (R_R_212_resized) 
    $flowthrough 
    *[array_obj_ref_214_index_0_scale] (R_R_212_resized array_obj_ref_214_offset_scale_factor_0) (R_R_212_scaled)    $fullrate
    $buffering  $in array_obj_ref_214_index_0_scale R_R_212_resized 2
    $buffering  $in array_obj_ref_214_index_0_scale array_obj_ref_214_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_214_index_0_scale R_R_212_scaled 2
    $delay array_obj_ref_214_index_0_scale 2
    &/ [array_obj_ref_214_index_1_resize] (Cr_205) (R_Cr_213_resized) 
    $flowthrough 
    &/ [array_obj_ref_214_index_1_rename] (R_Cr_213_resized) (R_Cr_213_scaled) 
    $flowthrough 
    +[array_obj_ref_214_index_sum_1] (R_Cr_213_scaled R_R_212_scaled) (array_obj_ref_214_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_214_index_sum_1 R_Cr_213_scaled 2
    $buffering  $in array_obj_ref_214_index_sum_1 R_R_212_scaled 2
    $buffering  $out array_obj_ref_214_index_sum_1 array_obj_ref_214_index_partial_sum_1 2
    $delay array_obj_ref_214_index_sum_1 2
    &/ [array_obj_ref_214_index_offset] (array_obj_ref_214_index_partial_sum_1) (array_obj_ref_214_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_214_root_address_inst] (array_obj_ref_214_final_offset) (array_obj_ref_214_root_address) 
    $flowthrough 
    &/ [array_obj_ref_214_addr_0] (array_obj_ref_214_root_address) (array_obj_ref_214_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_214_load_0] $from memory_space_1 (array_obj_ref_214_word_address_0) (array_obj_ref_214_data_0) 
    $buffering  $in array_obj_ref_214_load_0 array_obj_ref_214_word_address_0 2
    $buffering  $out array_obj_ref_214_load_0 array_obj_ref_214_data_0 2
    $delay array_obj_ref_214_load_0 5
    &/ [array_obj_ref_214_gather_scatter] (array_obj_ref_214_data_0) (a_rc_1_215) 
    $flowthrough 
    // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 95
    // A_2[R][Cr]
    &/ [array_obj_ref_219_index_0_resize] (R) (R_R_217_resized) 
    $flowthrough 
    *[array_obj_ref_219_index_0_scale] (R_R_217_resized array_obj_ref_219_offset_scale_factor_0) (R_R_217_scaled)    $fullrate
    $buffering  $in array_obj_ref_219_index_0_scale R_R_217_resized 2
    $buffering  $in array_obj_ref_219_index_0_scale array_obj_ref_219_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_219_index_0_scale R_R_217_scaled 2
    $delay array_obj_ref_219_index_0_scale 2
    &/ [array_obj_ref_219_index_1_resize] (Cr_205) (R_Cr_218_resized) 
    $flowthrough 
    &/ [array_obj_ref_219_index_1_rename] (R_Cr_218_resized) (R_Cr_218_scaled) 
    $flowthrough 
    +[array_obj_ref_219_index_sum_1] (R_Cr_218_scaled R_R_217_scaled) (array_obj_ref_219_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_219_index_sum_1 R_Cr_218_scaled 2
    $buffering  $in array_obj_ref_219_index_sum_1 R_R_217_scaled 2
    $buffering  $out array_obj_ref_219_index_sum_1 array_obj_ref_219_index_partial_sum_1 2
    $delay array_obj_ref_219_index_sum_1 2
    &/ [array_obj_ref_219_index_offset] (array_obj_ref_219_index_partial_sum_1) (array_obj_ref_219_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_219_root_address_inst] (array_obj_ref_219_final_offset) (array_obj_ref_219_root_address) 
    $flowthrough 
    &/ [array_obj_ref_219_addr_0] (array_obj_ref_219_root_address) (array_obj_ref_219_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_219_load_0] $from memory_space_2 (array_obj_ref_219_word_address_0) (array_obj_ref_219_data_0) 
    $buffering  $in array_obj_ref_219_load_0 array_obj_ref_219_word_address_0 2
    $buffering  $out array_obj_ref_219_load_0 array_obj_ref_219_data_0 2
    $delay array_obj_ref_219_load_0 5
    &/ [array_obj_ref_219_gather_scatter] (array_obj_ref_219_data_0) (a_rc_2_220) 
    $flowthrough 
    // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 96
    // A_3[R][Cr]
    &/ [array_obj_ref_224_index_0_resize] (R) (R_R_222_resized) 
    $flowthrough 
    *[array_obj_ref_224_index_0_scale] (R_R_222_resized array_obj_ref_224_offset_scale_factor_0) (R_R_222_scaled)    $fullrate
    $buffering  $in array_obj_ref_224_index_0_scale R_R_222_resized 2
    $buffering  $in array_obj_ref_224_index_0_scale array_obj_ref_224_offset_scale_factor_0 2
    $buffering  $out array_obj_ref_224_index_0_scale R_R_222_scaled 2
    $delay array_obj_ref_224_index_0_scale 2
    &/ [array_obj_ref_224_index_1_resize] (Cr_205) (R_Cr_223_resized) 
    $flowthrough 
    &/ [array_obj_ref_224_index_1_rename] (R_Cr_223_resized) (R_Cr_223_scaled) 
    $flowthrough 
    +[array_obj_ref_224_index_sum_1] (R_Cr_223_scaled R_R_222_scaled) (array_obj_ref_224_index_partial_sum_1)    $fullrate
    $buffering  $in array_obj_ref_224_index_sum_1 R_Cr_223_scaled 2
    $buffering  $in array_obj_ref_224_index_sum_1 R_R_222_scaled 2
    $buffering  $out array_obj_ref_224_index_sum_1 array_obj_ref_224_index_partial_sum_1 2
    $delay array_obj_ref_224_index_sum_1 2
    &/ [array_obj_ref_224_index_offset] (array_obj_ref_224_index_partial_sum_1) (array_obj_ref_224_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_224_root_address_inst] (array_obj_ref_224_final_offset) (array_obj_ref_224_root_address) 
    $flowthrough 
    &/ [array_obj_ref_224_addr_0] (array_obj_ref_224_root_address) (array_obj_ref_224_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_224_load_0] $from memory_space_3 (array_obj_ref_224_word_address_0) (array_obj_ref_224_data_0) 
    $buffering  $in array_obj_ref_224_load_0 array_obj_ref_224_word_address_0 2
    $buffering  $out array_obj_ref_224_load_0 array_obj_ref_224_data_0 2
    $delay array_obj_ref_224_load_0 5
    &/ [array_obj_ref_224_gather_scatter] (array_obj_ref_224_data_0) (a_rc_3_225) 
    $flowthrough 
    // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 97
    // x_0[Cr]
    &/ [array_obj_ref_228_index_0_resize] (Cr_205) (R_Cr_227_resized) 
    $flowthrough 
    &/ [array_obj_ref_228_index_0_rename] (R_Cr_227_resized) (R_Cr_227_scaled) 
    $flowthrough 
    &/ [array_obj_ref_228_index_offset] (R_Cr_227_scaled) (array_obj_ref_228_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_228_root_address_inst] (array_obj_ref_228_final_offset) (array_obj_ref_228_root_address) 
    $flowthrough 
    &/ [array_obj_ref_228_addr_0] (array_obj_ref_228_root_address) (array_obj_ref_228_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_228_load_0] $from memory_space_4 (array_obj_ref_228_word_address_0) (array_obj_ref_228_data_0) 
    $buffering  $in array_obj_ref_228_load_0 array_obj_ref_228_word_address_0 2
    $buffering  $out array_obj_ref_228_load_0 array_obj_ref_228_data_0 2
    $delay array_obj_ref_228_load_0 5
    &/ [array_obj_ref_228_gather_scatter] (array_obj_ref_228_data_0) (xval_0_229) 
    $flowthrough 
    // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 98
    // x_1[Cr]
    &/ [array_obj_ref_232_index_0_resize] (Cr_205) (R_Cr_231_resized) 
    $flowthrough 
    &/ [array_obj_ref_232_index_0_rename] (R_Cr_231_resized) (R_Cr_231_scaled) 
    $flowthrough 
    &/ [array_obj_ref_232_index_offset] (R_Cr_231_scaled) (array_obj_ref_232_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_232_root_address_inst] (array_obj_ref_232_final_offset) (array_obj_ref_232_root_address) 
    $flowthrough 
    &/ [array_obj_ref_232_addr_0] (array_obj_ref_232_root_address) (array_obj_ref_232_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_232_load_0] $from memory_space_5 (array_obj_ref_232_word_address_0) (array_obj_ref_232_data_0) 
    $buffering  $in array_obj_ref_232_load_0 array_obj_ref_232_word_address_0 2
    $buffering  $out array_obj_ref_232_load_0 array_obj_ref_232_data_0 2
    $delay array_obj_ref_232_load_0 5
    &/ [array_obj_ref_232_gather_scatter] (array_obj_ref_232_data_0) (xval_1_233) 
    $flowthrough 
    // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 99
    // x_2[Cr]
    &/ [array_obj_ref_236_index_0_resize] (Cr_205) (R_Cr_235_resized) 
    $flowthrough 
    &/ [array_obj_ref_236_index_0_rename] (R_Cr_235_resized) (R_Cr_235_scaled) 
    $flowthrough 
    &/ [array_obj_ref_236_index_offset] (R_Cr_235_scaled) (array_obj_ref_236_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_236_root_address_inst] (array_obj_ref_236_final_offset) (array_obj_ref_236_root_address) 
    $flowthrough 
    &/ [array_obj_ref_236_addr_0] (array_obj_ref_236_root_address) (array_obj_ref_236_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_236_load_0] $from memory_space_6 (array_obj_ref_236_word_address_0) (array_obj_ref_236_data_0) 
    $buffering  $in array_obj_ref_236_load_0 array_obj_ref_236_word_address_0 2
    $buffering  $out array_obj_ref_236_load_0 array_obj_ref_236_data_0 2
    $delay array_obj_ref_236_load_0 5
    &/ [array_obj_ref_236_gather_scatter] (array_obj_ref_236_data_0) (xval_2_237) 
    $flowthrough 
    // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
    //  file .Aa/mvp.opt.aa, line 100
    // x_3[Cr]
    &/ [array_obj_ref_240_index_0_resize] (Cr_205) (R_Cr_239_resized) 
    $flowthrough 
    &/ [array_obj_ref_240_index_0_rename] (R_Cr_239_resized) (R_Cr_239_scaled) 
    $flowthrough 
    &/ [array_obj_ref_240_index_offset] (R_Cr_239_scaled) (array_obj_ref_240_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_240_root_address_inst] (array_obj_ref_240_final_offset) (array_obj_ref_240_root_address) 
    $flowthrough 
    &/ [array_obj_ref_240_addr_0] (array_obj_ref_240_root_address) (array_obj_ref_240_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_240_load_0] $from memory_space_7 (array_obj_ref_240_word_address_0) (array_obj_ref_240_data_0) 
    $buffering  $in array_obj_ref_240_load_0 array_obj_ref_240_word_address_0 2
    $buffering  $out array_obj_ref_240_load_0 array_obj_ref_240_data_0 2
    $delay array_obj_ref_240_load_0 5
    &/ [array_obj_ref_240_gather_scatter] (array_obj_ref_240_data_0) (xval_3_241) 
    $flowthrough 
    // 			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 101
    # := [W_val_0_231_delayed_5_0_242_inst] (val_0_181) (val_0_231_delayed_5_0_244)  $cut_through    $fullrate
    $buffering  $out W_val_0_231_delayed_5_0_242_inst val_0_231_delayed_5_0_244 5
    // 			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 102
    // (a_rc_0 * xval_0)
    *[MUL_u32_u32_249_inst] (a_rc_0_210 xval_0_229) (MUL_u32_u32_249_wire)   $flowthrough 
    $delay MUL_u32_u32_249_inst 0
    // (val_0_231_delayed_5_0 + (a_rc_0 * xval_0))
    +[ADD_u32_u32_250_inst] (val_0_231_delayed_5_0_244 MUL_u32_u32_249_wire) (nval_0_251)   $flowthrough 
    $delay ADD_u32_u32_250_inst 0
    // 			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 104
    # := [W_val_1_243_delayed_5_0_257_inst] (val_1_186) (val_1_243_delayed_5_0_259)  $cut_through    $fullrate
    $buffering  $out W_val_1_243_delayed_5_0_257_inst val_1_243_delayed_5_0_259 5
    // 			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 105
    // (a_rc_1 * xval_1)
    *[MUL_u32_u32_264_inst] (a_rc_1_215 xval_1_233) (MUL_u32_u32_264_wire)   $flowthrough 
    $delay MUL_u32_u32_264_inst 0
    // (val_1_243_delayed_5_0 + (a_rc_1 * xval_1))
    +[ADD_u32_u32_265_inst] (val_1_243_delayed_5_0_259 MUL_u32_u32_264_wire) (nval_1_266)   $flowthrough 
    $delay ADD_u32_u32_265_inst 0
    // 			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 107
    # := [W_val_2_255_delayed_5_0_272_inst] (val_2_191) (val_2_255_delayed_5_0_274)  $cut_through    $fullrate
    $buffering  $out W_val_2_255_delayed_5_0_272_inst val_2_255_delayed_5_0_274 5
    // 			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 108
    // (a_rc_2 * xval_2)
    *[MUL_u32_u32_279_inst] (a_rc_2_220 xval_2_237) (MUL_u32_u32_279_wire)   $flowthrough 
    $delay MUL_u32_u32_279_inst 0
    // (val_2_255_delayed_5_0 + (a_rc_2 * xval_2))
    +[ADD_u32_u32_280_inst] (val_2_255_delayed_5_0_274 MUL_u32_u32_279_wire) (nval_2_281)   $flowthrough 
    $delay ADD_u32_u32_280_inst 0
    // 			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
    //  file .Aa/mvp.opt.aa, line 110
    # := [W_val_3_267_delayed_5_0_287_inst] (val_3_196) (val_3_267_delayed_5_0_289)  $cut_through    $fullrate
    $buffering  $out W_val_3_267_delayed_5_0_287_inst val_3_267_delayed_5_0_289 5
    // 			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
    //  file .Aa/mvp.opt.aa, line 111
    // (a_rc_3 * xval_3)
    *[MUL_u32_u32_294_inst] (a_rc_3_225 xval_3_241) (MUL_u32_u32_294_wire)   $flowthrough 
    $delay MUL_u32_u32_294_inst 0
    // (val_3_267_delayed_5_0 + (a_rc_3 * xval_3))
    +[ADD_u32_u32_295_inst] (val_3_267_delayed_5_0_289 MUL_u32_u32_294_wire) (nval_3_296)   $flowthrough 
    $delay ADD_u32_u32_295_inst 0
    // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
    //  file .Aa/mvp.opt.aa, line 113
    // (C + 4 )
    +[ADD_u8_u8_305_inst] (C_176 konst_304_wire_constant) (nC_306)    $fullrate
    $buffering  $out ADD_u8_u8_305_inst nC_306 2
    $delay ADD_u8_u8_305_inst 1
    // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 117
    // (nval_2 + nval_3)
    +[ADD_u32_u32_317_inst] (nval_2_281 nval_3_296) (ADD_u32_u32_317_wire)   $flowthrough 
    $delay ADD_u32_u32_317_inst 0
    // (nval_1 + (nval_2 + nval_3))
    +[ADD_u32_u32_318_inst] (nval_1_266 ADD_u32_u32_317_wire) (ADD_u32_u32_318_wire)   $flowthrough 
    $delay ADD_u32_u32_318_inst 0
    // (nval_0 + (nval_1 + (nval_2 + nval_3)))
    +[ADD_u32_u32_319_inst] (nval_0_251 ADD_u32_u32_318_wire) (result)   
    $buffering  $out ADD_u32_u32_319_inst result 1
    $delay ADD_u32_u32_319_inst 1
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_174
  //  file .Aa/mvp.opt.aa, line 78
  phi_stmt_176 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_176_entry_sample_req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_176_loopback_sample_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_176_phi_mux_ack)
  nC_306_180_buf <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nC_180_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nC_180_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nC_180_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nC_180_Update/ack)
  phi_stmt_181 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_181_entry_sample_req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_181_loopback_sample_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_181_phi_mux_ack)
  nval_0_251_185_buf <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_0_185_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_0_185_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_0_185_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_0_185_Update/ack)
  phi_stmt_186 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_186_entry_sample_req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_186_loopback_sample_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_186_phi_mux_ack)
  nval_1_266_190_buf <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_1_190_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_1_190_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_1_190_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_1_190_Update/ack)
  phi_stmt_191 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_191_entry_sample_req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_191_loopback_sample_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_191_phi_mux_ack)
  nval_2_281_195_buf <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_2_195_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_2_195_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_2_195_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_2_195_Update/ack)
  phi_stmt_196 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_196_entry_sample_req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_196_loopback_sample_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/phi_stmt_196_phi_mux_ack)
  nval_3_296_200_buf <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_3_200_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_3_200_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_3_200_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/R_nval_3_200_Update/ack)
  // 			$volatile Cr := ( $slice C 7 2 )  $buffering 1
  //  file .Aa/mvp.opt.aa, line 92
  // C
  // 			a_rc_0 := A_0[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 93
  // A_0[R][Cr]
  // R
  array_obj_ref_209_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_resize_0/index_resize_ack)
  array_obj_ref_209_index_0_scale <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_0_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_0_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_0_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_209_index_1_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_resize_1/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_resize_1/index_resize_ack)
  array_obj_ref_209_index_1_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_1/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_index_scale_1/scale_rename_ack)
  array_obj_ref_209_index_sum_1 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_partial_sum_1_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_partial_sum_1_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_partial_sum_1_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_partial_sum_1_Update/ca)
  array_obj_ref_209_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_final_index_sum_regn/ack)
  array_obj_ref_209_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_base_plus_offset/sum_rename_ack)
  array_obj_ref_209_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_word_addrgen/root_register_ack)
  array_obj_ref_209_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Update/array_obj_ref_209_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Update/array_obj_ref_209_Merge/merge_ack)
  array_obj_ref_209_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_209_Update/word_access_complete/word_0/ca)
  // 			a_rc_1 := A_1[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 94
  // A_1[R][Cr]
  // R
  array_obj_ref_214_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_resize_0/index_resize_ack)
  array_obj_ref_214_index_0_scale <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_0_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_0_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_0_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_214_index_1_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_resize_1/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_resize_1/index_resize_ack)
  array_obj_ref_214_index_1_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_1/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_index_scale_1/scale_rename_ack)
  array_obj_ref_214_index_sum_1 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_partial_sum_1_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_partial_sum_1_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_partial_sum_1_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_partial_sum_1_Update/ca)
  array_obj_ref_214_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_final_index_sum_regn/ack)
  array_obj_ref_214_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_base_plus_offset/sum_rename_ack)
  array_obj_ref_214_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_word_addrgen/root_register_ack)
  array_obj_ref_214_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Update/array_obj_ref_214_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Update/array_obj_ref_214_Merge/merge_ack)
  array_obj_ref_214_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_214_Update/word_access_complete/word_0/ca)
  // 			a_rc_2 := A_2[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 95
  // A_2[R][Cr]
  // R
  array_obj_ref_219_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_resize_0/index_resize_ack)
  array_obj_ref_219_index_0_scale <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_0_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_0_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_0_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_219_index_1_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_resize_1/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_resize_1/index_resize_ack)
  array_obj_ref_219_index_1_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_1/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_index_scale_1/scale_rename_ack)
  array_obj_ref_219_index_sum_1 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_partial_sum_1_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_partial_sum_1_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_partial_sum_1_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_partial_sum_1_Update/ca)
  array_obj_ref_219_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_final_index_sum_regn/ack)
  array_obj_ref_219_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_base_plus_offset/sum_rename_ack)
  array_obj_ref_219_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_word_addrgen/root_register_ack)
  array_obj_ref_219_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Update/array_obj_ref_219_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Update/array_obj_ref_219_Merge/merge_ack)
  array_obj_ref_219_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_219_Update/word_access_complete/word_0/ca)
  // 			a_rc_3 := A_3[R][Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 96
  // A_3[R][Cr]
  // R
  array_obj_ref_224_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_resize_0/index_resize_ack)
  array_obj_ref_224_index_0_scale <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_0_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_0_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_0_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_0_Update/ca)
  // Cr
  array_obj_ref_224_index_1_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_resize_1/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_resize_1/index_resize_ack)
  array_obj_ref_224_index_1_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_1/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_index_scale_1/scale_rename_ack)
  array_obj_ref_224_index_sum_1 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_partial_sum_1_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_partial_sum_1_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_partial_sum_1_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_partial_sum_1_Update/ca)
  array_obj_ref_224_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_final_index_sum_regn/ack)
  array_obj_ref_224_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_base_plus_offset/sum_rename_ack)
  array_obj_ref_224_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_word_addrgen/root_register_ack)
  array_obj_ref_224_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Update/array_obj_ref_224_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Update/array_obj_ref_224_Merge/merge_ack)
  array_obj_ref_224_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_224_Update/word_access_complete/word_0/ca)
  // 			xval_0 := x_0[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 97
  // x_0[Cr]
  // Cr
  array_obj_ref_228_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_index_resize_0/index_resize_ack)
  array_obj_ref_228_index_0_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_index_scale_0/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_index_scale_0/scale_rename_ack)
  array_obj_ref_228_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_final_index_sum_regn/ack)
  array_obj_ref_228_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_base_plus_offset/sum_rename_ack)
  array_obj_ref_228_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_word_addrgen/root_register_ack)
  array_obj_ref_228_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Update/array_obj_ref_228_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Update/array_obj_ref_228_Merge/merge_ack)
  array_obj_ref_228_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_228_Update/word_access_complete/word_0/ca)
  // 			xval_1 := x_1[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 98
  // x_1[Cr]
  // Cr
  array_obj_ref_232_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_index_resize_0/index_resize_ack)
  array_obj_ref_232_index_0_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_index_scale_0/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_index_scale_0/scale_rename_ack)
  array_obj_ref_232_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_final_index_sum_regn/ack)
  array_obj_ref_232_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_base_plus_offset/sum_rename_ack)
  array_obj_ref_232_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_word_addrgen/root_register_ack)
  array_obj_ref_232_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Update/array_obj_ref_232_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Update/array_obj_ref_232_Merge/merge_ack)
  array_obj_ref_232_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_232_Update/word_access_complete/word_0/ca)
  // 			xval_2 := x_2[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 99
  // x_2[Cr]
  // Cr
  array_obj_ref_236_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_index_resize_0/index_resize_ack)
  array_obj_ref_236_index_0_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_index_scale_0/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_index_scale_0/scale_rename_ack)
  array_obj_ref_236_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_final_index_sum_regn/ack)
  array_obj_ref_236_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_base_plus_offset/sum_rename_ack)
  array_obj_ref_236_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_word_addrgen/root_register_ack)
  array_obj_ref_236_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Update/array_obj_ref_236_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Update/array_obj_ref_236_Merge/merge_ack)
  array_obj_ref_236_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_236_Update/word_access_complete/word_0/ca)
  // 			xval_3 := x_3[Cr] $buffering 2// bits of buffering = 64. 
  //  file .Aa/mvp.opt.aa, line 100
  // x_3[Cr]
  // Cr
  array_obj_ref_240_index_0_resize <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_index_resize_0/index_resize_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_index_resize_0/index_resize_ack)
  array_obj_ref_240_index_0_rename <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_index_scale_0/scale_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_index_scale_0/scale_rename_ack)
  array_obj_ref_240_index_offset <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_final_index_sum_regn/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_final_index_sum_regn/ack)
  array_obj_ref_240_root_address_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_base_plus_offset/sum_rename_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_base_plus_offset/sum_rename_ack)
  array_obj_ref_240_addr_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_word_addrgen/root_register_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_word_addrgen/root_register_ack)
  array_obj_ref_240_gather_scatter <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Update/array_obj_ref_240_Merge/merge_req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Update/array_obj_ref_240_Merge/merge_ack)
  array_obj_ref_240_load_0 <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Sample/word_access_start/word_0/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Update/word_access_complete/word_0/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Sample/word_access_start/word_0/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/array_obj_ref_240_Update/word_access_complete/word_0/ca)
  // 			val_0_231_delayed_5_0 := val_0 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 101
  // val_0
  W_val_0_231_delayed_5_0_242_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_244_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_244_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_244_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_244_Update/ack)
  // 			$volatile nval_0 := (val_0_231_delayed_5_0 + (a_rc_0 * xval_0)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 102
  // (val_0_231_delayed_5_0 + (a_rc_0 * xval_0))
  // val_0_231_delayed_5_0
  // (a_rc_0 * xval_0)
  // a_rc_0
  // xval_0
  // 			val_1_243_delayed_5_0 := val_1 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 104
  // val_1
  W_val_1_243_delayed_5_0_257_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_259_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_259_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_259_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_259_Update/ack)
  // 			$volatile nval_1 := (val_1_243_delayed_5_0 + (a_rc_1 * xval_1)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 105
  // (val_1_243_delayed_5_0 + (a_rc_1 * xval_1))
  // val_1_243_delayed_5_0
  // (a_rc_1 * xval_1)
  // a_rc_1
  // xval_1
  // 			val_2_255_delayed_5_0 := val_2 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 107
  // val_2
  W_val_2_255_delayed_5_0_272_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_274_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_274_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_274_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_274_Update/ack)
  // 			$volatile nval_2 := (val_2_255_delayed_5_0 + (a_rc_2 * xval_2)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 108
  // (val_2_255_delayed_5_0 + (a_rc_2 * xval_2))
  // val_2_255_delayed_5_0
  // (a_rc_2 * xval_2)
  // a_rc_2
  // xval_2
  // 			val_3_267_delayed_5_0 := val_3 $buffering 5 $cut_through // bits of buffering = 160. 
  //  file .Aa/mvp.opt.aa, line 110
  // val_3
  W_val_3_267_delayed_5_0_287_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_289_Sample/req branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_289_Update/req) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_289_Sample/ack branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/assign_stmt_289_Update/ack)
  // 			$volatile nval_3 := (val_3_267_delayed_5_0 + (a_rc_3 * xval_3)) $buffering 1
  //  file .Aa/mvp.opt.aa, line 111
  // (val_3_267_delayed_5_0 + (a_rc_3 * xval_3))
  // val_3_267_delayed_5_0
  // (a_rc_3 * xval_3)
  // a_rc_3
  // xval_3
  // 			nC := (C + 4 ) $buffering 2// bits of buffering = 16. 
  //  file .Aa/mvp.opt.aa, line 113
  // (C + 4 )
  // C
  ADD_u8_u8_305_inst <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/ADD_u8_u8_305_Sample/rr branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/ADD_u8_u8_305_Update/cr) (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/ADD_u8_u8_305_Sample/ra branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/ADD_u8_u8_305_Update/ca)
  // (nC < 32 )
  // nC
  do_while_stmt_174_branch <=> (branch_block_stmt_173/do_while_stmt_174/do_while_stmt_174_loop_body/condition_evaluated) (branch_block_stmt_173/do_while_stmt_174/loop_exit/ack branch_block_stmt_173/do_while_stmt_174/loop_taken/ack)
  // 	result := (nval_0 + (nval_1 + (nval_2 + nval_3))) $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 117
  // (nval_0 + (nval_1 + (nval_2 + nval_3)))
  // nval_0
  // (nval_1 + (nval_2 + nval_3))
  // nval_1
  // (nval_2 + nval_3)
  // nval_2
  // nval_3
  ADD_u32_u32_319_inst <=> (assign_stmt_320/ADD_u32_u32_319_Sample/rr assign_stmt_320/ADD_u32_u32_319_Update/cr) (assign_stmt_320/ADD_u32_u32_319_Sample/ra assign_stmt_320/ADD_u32_u32_319_Update/ca)
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file .Aa/mvp.opt.aa, line 119
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_
    //  file .Aa/mvp.opt.aa, line 119
  }
  // end data-path
}
$module [multiplyMatrixVector] 
{
  // pipe-declarations for block %multiplyMatrixVector
  //  file .Aa/mvp.opt.aa, line 126
  // pipe-declarations for block %multiplyMatrixVector%mmloop
  //  file .Aa/mvp.opt.aa, line 131
  // pipe-declarations for block %multiplyMatrixVector%mmloop%
  //  file .Aa/mvp.opt.aa, line 133
  // memory-space 8 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_326] // Branch Block  file .Aa/mvp.opt.aa, line 131
    {
      $P [branch_block_stmt_326__entry__]
      branch_block_stmt_326__entry__ <-| ($entry)
      $P [branch_block_stmt_326__exit__]
      branch_block_stmt_326__exit__ |-> ($exit)
      $P [merge_stmt_327__entry__] 
      $P [merge_stmt_327__exit__] 
      $P [call_stmt_336_to_assign_stmt_356__entry__] 
      $P [call_stmt_336_to_assign_stmt_356__exit__] 
      $P [if_stmt_357__entry__] 
      $P [if_stmt_357__exit__] 
      ::[call_stmt_336_to_assign_stmt_356] 
      {
        // start: 		$call dotP_even (R ) (val_even ) 
        //  file .Aa/mvp.opt.aa, line 137
        $T[call_stmt_336_sample_start_] 
        $T[call_stmt_336_sample_completed_] 
        $T[call_stmt_336_update_start_] 
        $T[call_stmt_336_update_completed_] 
        // Call input argument 0
        // R
        // start: Forward dependencies from R to transition call_stmt_336_sample_start_
        // done: Forward dependencies from R to transition call_stmt_336_sample_start_
        ;;[call_stmt_336_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_336_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_336_sample_start_ &-> (call_stmt_336_Sample)
        call_stmt_336_sample_completed_ <-& (call_stmt_336_Sample)
        call_stmt_336_sample_completed_ &-> ($null)
        call_stmt_336_update_start_ &-> (call_stmt_336_Update)
        call_stmt_336_update_completed_ <-& (call_stmt_336_Update)
        // Call output argument 0
        // (as target) val_even
        // start: WAR dependencies for val_even
        // done: WAR dependencies for val_even
        // end: 		$call dotP_even (R ) (val_even ) 
        // start: 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
        //  file .Aa/mvp.opt.aa, line 138
        $T[call_stmt_341_sample_start_] 
        $T[call_stmt_341_sample_completed_] 
        $T[call_stmt_341_update_start_] 
        $T[call_stmt_341_update_completed_] 
        // Call input argument 0
        // (R + 1 )
        // R
        // start: Forward dependencies from (R + 1 ) to transition call_stmt_341_sample_start_
        // done: Forward dependencies from (R + 1 ) to transition call_stmt_341_sample_start_
        ;;[call_stmt_341_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_341_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_341_sample_start_ &-> (call_stmt_341_Sample)
        call_stmt_341_sample_completed_ <-& (call_stmt_341_Sample)
        call_stmt_341_sample_completed_ &-> ($null)
        call_stmt_341_update_start_ &-> (call_stmt_341_Update)
        call_stmt_341_update_completed_ <-& (call_stmt_341_Update)
        // Call output argument 0
        // (as target) val_odd
        // start: WAR dependencies for val_odd
        // done: WAR dependencies for val_odd
        // end: 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
        // start:  		y[R] := val_even $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 139
        // Source expression
        // val_even
        // Target expression
        // y[R]
        $T[array_obj_ref_343_sample_start_] 
        $T[array_obj_ref_343_sample_completed_] 
        $T[array_obj_ref_343_update_start_] 
        $T[array_obj_ref_343_update_completed_] 
        $T[array_obj_ref_343_word_address_calculated] 
        $T[array_obj_ref_343_root_address_calculated] 
        $T[array_obj_ref_343_offset_calculated] 
        $T[array_obj_ref_343_index_resized_0] 
        $T[array_obj_ref_343_index_scaled_0] 
        $T[array_obj_ref_343_index_computed_0] 
        // R
        // start: Forward dependencies from R to transition array_obj_ref_343_index_computed_0
        // done: Forward dependencies from R to transition array_obj_ref_343_index_computed_0
        ;;[array_obj_ref_343_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_343_index_computed_0 &-> (array_obj_ref_343_index_resize_0)
        array_obj_ref_343_index_resized_0 <-& (array_obj_ref_343_index_resize_0)
        ;;[array_obj_ref_343_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_343_index_resized_0 &-> (array_obj_ref_343_index_scale_0)
        array_obj_ref_343_index_scaled_0 <-& (array_obj_ref_343_index_scale_0)
        ;;[array_obj_ref_343_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_343_index_scaled_0 &-> (array_obj_ref_343_final_index_sum_regn)
        array_obj_ref_343_offset_calculated <-& (array_obj_ref_343_final_index_sum_regn)
        ;;[array_obj_ref_343_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_343_offset_calculated &-> (array_obj_ref_343_base_plus_offset)
        array_obj_ref_343_root_address_calculated <-& (array_obj_ref_343_base_plus_offset)
        ;;[array_obj_ref_343_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_343_root_address_calculated &-> (array_obj_ref_343_word_addrgen)
        array_obj_ref_343_word_address_calculated <-& (array_obj_ref_343_word_addrgen)
        ;;[array_obj_ref_343_Sample] 
        {
          ;;[array_obj_ref_343_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_343_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_343_sample_start_ <-& (array_obj_ref_343_word_address_calculated)
        array_obj_ref_343_sample_start_ &-> (array_obj_ref_343_Sample)
        array_obj_ref_343_sample_completed_ <-& (array_obj_ref_343_Sample)
        array_obj_ref_343_sample_completed_ &-> ($null)
        array_obj_ref_343_update_start_ &-> (array_obj_ref_343_Update)
        array_obj_ref_343_update_completed_ <-& (array_obj_ref_343_Update)
        // start: Forward dependencies from val_even to transition array_obj_ref_343_sample_start_
        array_obj_ref_343_sample_start_ <-& (call_stmt_336_update_completed_)
        // done: Forward dependencies from val_even to transition array_obj_ref_343_sample_start_
        // end:  		y[R] := val_even $buffering 1// bits of buffering = 32. 
        // start:  		y[(R + 1 )] := val_odd $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 140
        // Source expression
        // val_odd
        // Target expression
        // y[(R + 1 )]
        $T[array_obj_ref_349_sample_start_] 
        $T[array_obj_ref_349_sample_completed_] 
        $T[array_obj_ref_349_update_start_] 
        $T[array_obj_ref_349_update_completed_] 
        $T[array_obj_ref_349_word_address_calculated] 
        $T[array_obj_ref_349_root_address_calculated] 
        $T[array_obj_ref_349_offset_calculated] 
        $T[array_obj_ref_349_index_resized_0] 
        $T[array_obj_ref_349_index_scaled_0] 
        $T[array_obj_ref_349_index_computed_0] 
        // (R + 1 )
        // R
        // start: Forward dependencies from (R + 1 ) to transition array_obj_ref_349_index_computed_0
        // done: Forward dependencies from (R + 1 ) to transition array_obj_ref_349_index_computed_0
        ;;[array_obj_ref_349_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_349_index_computed_0 &-> (array_obj_ref_349_index_resize_0)
        array_obj_ref_349_index_resized_0 <-& (array_obj_ref_349_index_resize_0)
        ;;[array_obj_ref_349_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_349_index_resized_0 &-> (array_obj_ref_349_index_scale_0)
        array_obj_ref_349_index_scaled_0 <-& (array_obj_ref_349_index_scale_0)
        ;;[array_obj_ref_349_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_349_index_scaled_0 &-> (array_obj_ref_349_final_index_sum_regn)
        array_obj_ref_349_offset_calculated <-& (array_obj_ref_349_final_index_sum_regn)
        ;;[array_obj_ref_349_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_349_offset_calculated &-> (array_obj_ref_349_base_plus_offset)
        array_obj_ref_349_root_address_calculated <-& (array_obj_ref_349_base_plus_offset)
        ;;[array_obj_ref_349_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_349_root_address_calculated &-> (array_obj_ref_349_word_addrgen)
        array_obj_ref_349_word_address_calculated <-& (array_obj_ref_349_word_addrgen)
        ;;[array_obj_ref_349_Sample] 
        {
          ;;[array_obj_ref_349_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_349_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_349_sample_start_ <-& (array_obj_ref_349_word_address_calculated)
        array_obj_ref_349_sample_start_ &-> (array_obj_ref_349_Sample)
        array_obj_ref_349_sample_completed_ <-& (array_obj_ref_349_Sample)
        array_obj_ref_349_sample_completed_ &-> ($null)
        array_obj_ref_349_update_start_ &-> (array_obj_ref_349_Update)
        array_obj_ref_349_update_completed_ <-& (array_obj_ref_349_Update)
        // start: Forward dependencies from val_odd to transition array_obj_ref_349_sample_start_
        array_obj_ref_349_sample_start_ <-& (call_stmt_341_update_completed_)
        // done: Forward dependencies from val_odd to transition array_obj_ref_349_sample_start_
        // end:  		y[(R + 1 )] := val_odd $buffering 1// bits of buffering = 32. 
        // start:  		nR := (R + 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/mvp.opt.aa, line 141
        // Source expression
        // (R + 1 )
        $T[ADD_u8_u8_355_sample_start_] 
        $T[ADD_u8_u8_355_sample_completed_] 
        $T[ADD_u8_u8_355_update_start_] 
        $T[ADD_u8_u8_355_update_completed_] 
        // R
        // start: Forward dependencies from R to transition ADD_u8_u8_355_sample_start_
        // done: Forward dependencies from R to transition ADD_u8_u8_355_sample_start_
        ;;[ADD_u8_u8_355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u8_u8_355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u8_u8_355_sample_start_ &-> (ADD_u8_u8_355_Sample)
        ADD_u8_u8_355_sample_completed_ <-& (ADD_u8_u8_355_Sample)
        ADD_u8_u8_355_sample_completed_ &-> ($null)
        ADD_u8_u8_355_update_start_ &-> (ADD_u8_u8_355_Update)
        ADD_u8_u8_355_update_completed_ <-& (ADD_u8_u8_355_Update)
        // Target expression
        // (as target) nR
        // start: WAR dependencies for nR
        // done: WAR dependencies for nR
        // end:  		nR := (R + 1 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_5
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_1
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_0
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_4
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_8
        //  array_obj_ref_343 store
        //  array_obj_ref_349 store
        $T [array_obj_ref_343_array_obj_ref_349_delay] $delay
        // array_obj_ref_343(store) -> array_obj_ref_349(store)
        array_obj_ref_349_sample_start_ <-& (array_obj_ref_343_array_obj_ref_349_delay)
        array_obj_ref_343_array_obj_ref_349_delay <-& (array_obj_ref_343_sample_completed_)
        // memory-space  memory_space_7
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_6
        //  call_stmt_336 load
        //  call_stmt_341 load
        // memory-space  memory_space_3
        //  call_stmt_336 load
        //  call_stmt_341 load
      }
      call_stmt_336_to_assign_stmt_356__entry__ |-> (call_stmt_336_to_assign_stmt_356)
      call_stmt_336_to_assign_stmt_356__exit__ <-| (call_stmt_336_to_assign_stmt_356)
      // if-statement  
      //  file .Aa/mvp.opt.aa, line 1624353656
      ;;[if_stmt_357_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_357__entry__ |-> (if_stmt_357_dead_link)
      if_stmt_357__exit__ <-| (if_stmt_357_dead_link)
      ;;[if_stmt_357_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (nR < 32 )
        ;;[ULT_u8_u1_360] 
        {
          // binary expression 
          ||[ULT_u8_u1_360_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_357__entry__ |-> (if_stmt_357_eval_test)
      $P [ULT_u8_u1_360_place]
      ULT_u8_u1_360_place <-| (if_stmt_357_eval_test)
      ;;[if_stmt_357_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_357_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u8_u1_360_place |-> (if_stmt_357_if_link if_stmt_357_else_link)
      $P [loopback]
      loopback <-| (if_stmt_357_if_link)
      if_stmt_357__exit__ <-| (if_stmt_357_else_link)
      // control-path for merge  
      //  file .Aa/mvp.opt.aa, line 133
      ;;[merge_stmt_327_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_327__entry__ |-> (merge_stmt_327_dead_link)
      merge_stmt_327__exit__ <-| (merge_stmt_327_dead_link)
      //---------------------   merge statement  file .Aa/mvp.opt.aa, line 133  --------------------------
      ||[merge_stmt_327__entry___PhiReq] 
      {
        ;;[phi_stmt_328] 
        {
          ||[phi_stmt_328_sources] 
          {
            // sources for 			$phi R := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nR $on   loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_331_konst_delay_trans] $delay
          }
          $T [phi_stmt_328_req] 
        }
      }
      merge_stmt_327__entry__ |-> (merge_stmt_327__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_328] 
        {
          ||[phi_stmt_328_sources] 
          {
            // sources for 			$phi R := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nR $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_328_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_327_PhiReqMerge] 
      merge_stmt_327_PhiReqMerge <-| ( merge_stmt_327__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_327_PhiAck] 
      {
        $T [phi_stmt_328_ack] 
      }
      merge_stmt_327_PhiReqMerge |-> (merge_stmt_327_PhiAck)
      merge_stmt_327__exit__  <-| (merge_stmt_327_PhiAck)
      //---------------------  end of merge statement  file .Aa/mvp.opt.aa, line 133  --------------------------
      merge_stmt_327__entry__ <-| (branch_block_stmt_326__entry__)
      call_stmt_336_to_assign_stmt_356__entry__ <-| (merge_stmt_327__exit__)
      if_stmt_357__entry__ <-| (call_stmt_336_to_assign_stmt_356__exit__)
      if_stmt_357__exit__ |-> (branch_block_stmt_326__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %multiplyMatrixVector%mmloop%
    //  file .Aa/mvp.opt.aa, line 133
    // constant-object-declarations for block %multiplyMatrixVector%mmloop
    //  file .Aa/mvp.opt.aa, line 131
    // constant-object-declarations for block %multiplyMatrixVector
    //  file .Aa/mvp.opt.aa, line 126
    // constant-declarations for block %multiplyMatrixVector%mmloop
    //  file .Aa/mvp.opt.aa, line 131
    // constant-declarations for block %multiplyMatrixVector%mmloop%
    //  file .Aa/mvp.opt.aa, line 133
    // constant-declarations for phi:  			$phi R := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nR $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 134
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_331_wire_constant] : $int<8> := _b00000000// 0
    // 		$call dotP_even (R ) (val_even ) 
    //  file .Aa/mvp.opt.aa, line 137
    // 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
    //  file .Aa/mvp.opt.aa, line 138
    // 1 
    $constant $W[konst_338_wire_constant] : $int<8> := _b00000001// 1
    // y[R]
    $constant $W[array_obj_ref_343_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_343_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_343_word_offset_0] : $int<5> := _b00000// 0
    // y[(R + 1 )]
    // 1 
    $constant $W[konst_347_wire_constant] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_349_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_349_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_349_word_offset_0] : $int<5> := _b00000// 0
    // 1 
    $constant $W[konst_354_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/mvp.opt.aa, line 1624353656
    // 32 
    $constant $W[konst_359_wire_constant] : $int<8> := _b00100000// 32
    // block %multiplyMatrixVector%mmloop
    //  file .Aa/mvp.opt.aa, line 131
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 133
    // 			$phi R := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nR $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 134
    $W[nR_356_332_buffered] : $int<8>
    // R
    $W[R_328] : $int<8>
    // 		$call dotP_even (R ) (val_even ) 
    //  file .Aa/mvp.opt.aa, line 137
    // val_even
    $W[val_even_336] : $int<32>
    // 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
    //  file .Aa/mvp.opt.aa, line 138
    // (R + 1 )
    $intermediate $W[ADD_u8_u8_339_wire] : $int<8>
    // val_odd
    $W[val_odd_341] : $int<32>
    // 		y[R] := val_even $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 139
    // y[R]
    $intermediate $W[R_R_342_resized] : $int<5>
    $intermediate $W[R_R_342_scaled] : $int<5>
    $intermediate $W[array_obj_ref_343_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_343_root_address] : $int<5>
    $W[array_obj_ref_343_word_address_0] : $pointer<memory_space_8>
    $W[array_obj_ref_343_data_0] : $int<32>
    // 		y[(R + 1 )] := val_odd $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 140
    // y[(R + 1 )]
    // (R + 1 )
    $intermediate $W[ADD_u8_u8_348_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_348_resized] : $int<5>
    $intermediate $W[ADD_u8_u8_348_scaled] : $int<5>
    $intermediate $W[array_obj_ref_349_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_349_root_address] : $int<5>
    $W[array_obj_ref_349_word_address_0] : $pointer<memory_space_8>
    $W[array_obj_ref_349_data_0] : $int<32>
    // 		nR := (R + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 141
    // nR
    $W[nR_356] : $int<8>
    // if statement  
    //  file .Aa/mvp.opt.aa, line 1624353656
    // (nR < 32 )
    $intermediate $W[ULT_u8_u1_360_wire] : $int<1>
    // datapath-instances for block %multiplyMatrixVector%mmloop
    //  file .Aa/mvp.opt.aa, line 131
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 133
    // 			$phi R := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nR $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 134
    # := [nR_356_332_buf] (nR_356) (nR_356_332_buffered)    
    $phi [phi_stmt_328] (type_cast_331_wire_constant nR_356_332_buffered) ( R_328 ) 
    // 		$call dotP_even (R ) (val_even ) 
    //  file .Aa/mvp.opt.aa, line 137
    $call [call_stmt_336_call] $module dotP_even(R_328) (val_even_336)  
    $delay call_stmt_336_call 4
    $buffering  $in call_stmt_336_call R_328 1
    $buffering  $out call_stmt_336_call val_even_336 1
    // 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
    //  file .Aa/mvp.opt.aa, line 138
    // (R + 1 )
    +[ADD_u8_u8_339_inst] (R_328 konst_338_wire_constant) (ADD_u8_u8_339_wire)   $flowthrough 
    $delay ADD_u8_u8_339_inst 0
    $call [call_stmt_341_call] $module dotP_odd(ADD_u8_u8_339_wire) (val_odd_341)  
    $delay call_stmt_341_call 4
    $buffering  $in call_stmt_341_call ADD_u8_u8_339_wire 1
    $buffering  $out call_stmt_341_call val_odd_341 1
    // 		y[R] := val_even $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 139
    // y[R]
    &/ [array_obj_ref_343_index_0_resize] (R_328) (R_R_342_resized) 
    $flowthrough 
    &/ [array_obj_ref_343_index_0_rename] (R_R_342_resized) (R_R_342_scaled) 
    $flowthrough 
    &/ [array_obj_ref_343_index_offset] (R_R_342_scaled) (array_obj_ref_343_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_343_root_address_inst] (array_obj_ref_343_final_offset) (array_obj_ref_343_root_address) 
    $flowthrough 
    &/ [array_obj_ref_343_addr_0] (array_obj_ref_343_root_address) (array_obj_ref_343_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_343_store_0] $to memory_space_8 (array_obj_ref_343_word_address_0 array_obj_ref_343_data_0) 
    $delay array_obj_ref_343_store_0 4
    &/ [array_obj_ref_343_gather_scatter] (val_even_336) (array_obj_ref_343_data_0) 
    $flowthrough 
    // 		y[(R + 1 )] := val_odd $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 140
    // y[(R + 1 )]
    // (R + 1 )
    +[ADD_u8_u8_348_inst] (R_328 konst_347_wire_constant) (ADD_u8_u8_348_wire)   $flowthrough 
    $delay ADD_u8_u8_348_inst 0
    &/ [array_obj_ref_349_index_0_resize] (ADD_u8_u8_348_wire) (ADD_u8_u8_348_resized) 
    $flowthrough 
    &/ [array_obj_ref_349_index_0_rename] (ADD_u8_u8_348_resized) (ADD_u8_u8_348_scaled) 
    $flowthrough 
    &/ [array_obj_ref_349_index_offset] (ADD_u8_u8_348_scaled) (array_obj_ref_349_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_349_root_address_inst] (array_obj_ref_349_final_offset) (array_obj_ref_349_root_address) 
    $flowthrough 
    &/ [array_obj_ref_349_addr_0] (array_obj_ref_349_root_address) (array_obj_ref_349_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_349_store_0] $to memory_space_8 (array_obj_ref_349_word_address_0 array_obj_ref_349_data_0) 
    $delay array_obj_ref_349_store_0 4
    &/ [array_obj_ref_349_gather_scatter] (val_odd_341) (array_obj_ref_349_data_0) 
    $flowthrough 
    // 		nR := (R + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 141
    // (R + 1 )
    +[ADD_u8_u8_355_inst] (R_328 konst_354_wire_constant) (nR_356)   
    $buffering  $out ADD_u8_u8_355_inst nR_356 1
    $delay ADD_u8_u8_355_inst 1
    // datapath-instances for if  
    //  file .Aa/mvp.opt.aa, line 1624353656
    // (nR < 32 )
    <[ULT_u8_u1_360_inst] (nR_356 konst_359_wire_constant) (ULT_u8_u1_360_wire)   $flowthrough 
    $delay ULT_u8_u1_360_inst 0
    ==0? [if_stmt_357_branch] (ULT_u8_u1_360_wire)
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/mvp.opt.aa, line 133
  nR_356_332_buf <=> (branch_block_stmt_326/loopback_PhiReq/phi_stmt_328/phi_stmt_328_sources/Interlock/Sample/req branch_block_stmt_326/loopback_PhiReq/phi_stmt_328/phi_stmt_328_sources/Interlock/Update/req) (branch_block_stmt_326/loopback_PhiReq/phi_stmt_328/phi_stmt_328_sources/Interlock/Sample/ack branch_block_stmt_326/loopback_PhiReq/phi_stmt_328/phi_stmt_328_sources/Interlock/Update/ack)
  phi_stmt_328 <=> (branch_block_stmt_326/merge_stmt_327__entry___PhiReq/phi_stmt_328/phi_stmt_328_req branch_block_stmt_326/loopback_PhiReq/phi_stmt_328/phi_stmt_328_req) (branch_block_stmt_326/merge_stmt_327_PhiAck/phi_stmt_328_ack)
  // 		$call dotP_even (R ) (val_even ) 
  //  file .Aa/mvp.opt.aa, line 137
  // R
  call_stmt_336_call <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_336_Sample/crr branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_336_Update/ccr) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_336_Sample/cra branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_336_Update/cca)
  // 		$call dotP_odd ((R + 1 ) ) (val_odd ) 
  //  file .Aa/mvp.opt.aa, line 138
  // (R + 1 )
  // R
  call_stmt_341_call <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_341_Sample/crr branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_341_Update/ccr) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_341_Sample/cra branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/call_stmt_341_Update/cca)
  // 		y[R] := val_even $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 139
  // val_even
  // R
  array_obj_ref_343_index_0_resize <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_index_resize_0/index_resize_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_index_resize_0/index_resize_ack)
  array_obj_ref_343_index_0_rename <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_index_scale_0/scale_rename_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_index_scale_0/scale_rename_ack)
  array_obj_ref_343_index_offset <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_final_index_sum_regn/req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_final_index_sum_regn/ack)
  array_obj_ref_343_root_address_inst <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_base_plus_offset/sum_rename_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_base_plus_offset/sum_rename_ack)
  array_obj_ref_343_addr_0 <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_word_addrgen/root_register_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_word_addrgen/root_register_ack)
  array_obj_ref_343_gather_scatter <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Sample/array_obj_ref_343_Split/split_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Sample/array_obj_ref_343_Split/split_ack)
  array_obj_ref_343_store_0 <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Sample/word_access_start/word_0/rr branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Update/word_access_complete/word_0/cr) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Sample/word_access_start/word_0/ra branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_343_Update/word_access_complete/word_0/ca)
  // 		y[(R + 1 )] := val_odd $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 140
  // val_odd
  // (R + 1 )
  // R
  array_obj_ref_349_index_0_resize <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_index_resize_0/index_resize_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_index_resize_0/index_resize_ack)
  array_obj_ref_349_index_0_rename <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_index_scale_0/scale_rename_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_index_scale_0/scale_rename_ack)
  array_obj_ref_349_index_offset <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_final_index_sum_regn/req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_final_index_sum_regn/ack)
  array_obj_ref_349_root_address_inst <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_base_plus_offset/sum_rename_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_base_plus_offset/sum_rename_ack)
  array_obj_ref_349_addr_0 <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_word_addrgen/root_register_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_word_addrgen/root_register_ack)
  array_obj_ref_349_gather_scatter <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Sample/array_obj_ref_349_Split/split_req) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Sample/array_obj_ref_349_Split/split_ack)
  array_obj_ref_349_store_0 <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Sample/word_access_start/word_0/rr branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Update/word_access_complete/word_0/cr) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Sample/word_access_start/word_0/ra branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/array_obj_ref_349_Update/word_access_complete/word_0/ca)
  // 		nR := (R + 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/mvp.opt.aa, line 141
  // (R + 1 )
  // R
  ADD_u8_u8_355_inst <=> (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/ADD_u8_u8_355_Sample/rr branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/ADD_u8_u8_355_Update/cr) (branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/ADD_u8_u8_355_Sample/ra branch_block_stmt_326/call_stmt_336_to_assign_stmt_356/ADD_u8_u8_355_Update/ca)
  // CP-DP links for if  
  //  file .Aa/mvp.opt.aa, line 1624353656
  // (nR < 32 )
  if_stmt_357_branch <=> (branch_block_stmt_326/if_stmt_357_eval_test/branch_req) (branch_block_stmt_326/if_stmt_357_else_link/else_choice_transition branch_block_stmt_326/if_stmt_357_if_link/if_choice_transition)
}
$module [readMatrix] 
{
  // pipe-declarations for block %readMatrix
  //  file .Aa/mvp.opt.aa, line 147
  // pipe-declarations for block %readMatrix%mRead
  //  file .Aa/mvp.opt.aa, line 152
  // pipe-declarations for block %readMatrix%mRead%
  //  file .Aa/mvp.opt.aa, line 154
  // pipe-declarations for block %readMatrix%mRead%
  //  file .Aa/mvp.opt.aa, line 159
  // memory-space 2 is written into.
  // memory-space 1 is written into.
  // memory-space 0 is written into.
  // memory-space 3 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_366] // Branch Block  file .Aa/mvp.opt.aa, line 152
    {
      $P [branch_block_stmt_366__entry__]
      branch_block_stmt_366__entry__ <-| ($entry)
      $P [branch_block_stmt_366__exit__]
      branch_block_stmt_366__exit__ |-> ($exit)
      $P [merge_stmt_367__entry__] 
      $P [merge_stmt_367__exit__] 
      $P [assign_stmt_378__entry__] 
      $P [assign_stmt_378__exit__] 
      $P [merge_stmt_379__entry__] 
      $P [merge_stmt_379__exit__] 
      $P [assign_stmt_390_to_assign_stmt_464__entry__] 
      $P [assign_stmt_390_to_assign_stmt_464__exit__] 
      $P [if_stmt_471__entry__] 
      $P [if_stmt_471__exit__] 
      $P [if_stmt_477__entry__] 
      $P [if_stmt_477__exit__] 
      ::[assign_stmt_378] 
      {
        // start:  		nI := (I + 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/mvp.opt.aa, line 158
        // Source expression
        // (I + 1 )
        $T[ADD_u8_u8_377_sample_start_] 
        $T[ADD_u8_u8_377_sample_completed_] 
        $T[ADD_u8_u8_377_update_start_] 
        $T[ADD_u8_u8_377_update_completed_] 
        // I
        // start: Forward dependencies from I to transition ADD_u8_u8_377_sample_start_
        // done: Forward dependencies from I to transition ADD_u8_u8_377_sample_start_
        ;;[ADD_u8_u8_377_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u8_u8_377_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u8_u8_377_sample_start_ &-> (ADD_u8_u8_377_Sample)
        ADD_u8_u8_377_sample_completed_ <-& (ADD_u8_u8_377_Sample)
        ADD_u8_u8_377_sample_completed_ &-> ($null)
        ADD_u8_u8_377_update_start_ &-> (ADD_u8_u8_377_Update)
        ADD_u8_u8_377_update_completed_ <-& (ADD_u8_u8_377_Update)
        // Target expression
        // (as target) nI
        // start: WAR dependencies for nI
        // done: WAR dependencies for nI
        // end:  		nI := (I + 1 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_378__entry__ |-> (assign_stmt_378)
      assign_stmt_378__exit__ <-| (assign_stmt_378)
      ::[assign_stmt_390_to_assign_stmt_464] 
      {
        // start:  		nJ := (J + 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/mvp.opt.aa, line 163
        // Source expression
        // (J + 1 )
        $T[ADD_u8_u8_389_sample_start_] 
        $T[ADD_u8_u8_389_sample_completed_] 
        $T[ADD_u8_u8_389_update_start_] 
        $T[ADD_u8_u8_389_update_completed_] 
        // J
        // start: Forward dependencies from J to transition ADD_u8_u8_389_sample_start_
        // done: Forward dependencies from J to transition ADD_u8_u8_389_sample_start_
        ;;[ADD_u8_u8_389_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u8_u8_389_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u8_u8_389_sample_start_ &-> (ADD_u8_u8_389_Sample)
        ADD_u8_u8_389_sample_completed_ <-& (ADD_u8_u8_389_Sample)
        ADD_u8_u8_389_sample_completed_ &-> ($null)
        ADD_u8_u8_389_update_start_ &-> (ADD_u8_u8_389_Update)
        ADD_u8_u8_389_update_completed_ <-& (ADD_u8_u8_389_Update)
        // Target expression
        // (as target) nJ
        // start: WAR dependencies for nJ
        // done: WAR dependencies for nJ
        // end:  		nJ := (J + 1 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for J_idx
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx
        // start:  		$volatile J_idx := ( $slice J 1 0 )  $buffering 1
        //  file .Aa/mvp.opt.aa, line 164
        // volatile! 
        // Source expression
        // ( $slice J 1 0 ) 
        // J
        // Target expression
        // (as target) J_idx
        // start: WAR dependencies for J_idx
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx
        // end:  		$volatile J_idx := ( $slice J 1 0 )  $buffering 1
        // start:  		Jr := ( $slice J 7 2 )  $buffering 1// bits of buffering = 6. 
        //  file .Aa/mvp.opt.aa, line 165
        // Source expression
        // ( $slice J 7 2 ) 
        $T[slice_398_sample_start_] 
        $T[slice_398_sample_completed_] 
        $T[slice_398_update_start_] 
        $T[slice_398_update_completed_] 
        // J
        // start: Forward dependencies from J to transition slice_398_sample_start_
        // done: Forward dependencies from J to transition slice_398_sample_start_
        ;;[slice_398_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_398_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_398_sample_start_ &-> (slice_398_Sample)
        slice_398_sample_completed_ <-& (slice_398_Sample)
        slice_398_sample_completed_ &-> ($null)
        slice_398_update_start_ &-> (slice_398_Update)
        slice_398_update_completed_ <-& (slice_398_Update)
        // Target expression
        // (as target) Jr
        // start: WAR dependencies for Jr
        // done: WAR dependencies for Jr
        // end:  		Jr := ( $slice J 7 2 )  $buffering 1// bits of buffering = 6. 
        // start:  		aval := in_data $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 166
        // Source expression
        // in_data
        $T[RPIPE_in_data_401_sample_start_] 
        $T[RPIPE_in_data_401_sample_completed_] 
        $T[RPIPE_in_data_401_update_start_] 
        $T[RPIPE_in_data_401_update_completed_] 
        ;;[RPIPE_in_data_401_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_401_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_401_sample_start_ &-> (RPIPE_in_data_401_Sample)
        RPIPE_in_data_401_sample_completed_ <-& (RPIPE_in_data_401_Sample)
        RPIPE_in_data_401_update_start_ <-& (RPIPE_in_data_401_sample_completed_)
        RPIPE_in_data_401_update_start_ &-> (RPIPE_in_data_401_Update)
        RPIPE_in_data_401_update_completed_ <-& (RPIPE_in_data_401_Update)
        // Target expression
        // (as target) aval
        // start: WAR dependencies for aval
        // done: WAR dependencies for aval
        // end:  		aval := in_data $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for J_idx_0
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_0
        // start:  		$volatile J_idx_0 := (J_idx == 0 ) $buffering 1
        //  file .Aa/mvp.opt.aa, line 167
        // volatile! 
        // Source expression
        // (J_idx == 0 )
        // J_idx
        // Target expression
        // (as target) J_idx_0
        // start: WAR dependencies for J_idx_0
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_0
        // end:  		$volatile J_idx_0 := (J_idx == 0 ) $buffering 1
        // start: WAR dependencies for J_idx_1
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_1
        // start:  		$volatile J_idx_1 := (J_idx == 1 ) $buffering 1
        //  file .Aa/mvp.opt.aa, line 168
        // volatile! 
        // Source expression
        // (J_idx == 1 )
        // J_idx
        // Target expression
        // (as target) J_idx_1
        // start: WAR dependencies for J_idx_1
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_1
        // end:  		$volatile J_idx_1 := (J_idx == 1 ) $buffering 1
        // start: WAR dependencies for J_idx_2
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_2
        // start:  		$volatile J_idx_2 := (J_idx == 2 ) $buffering 1
        //  file .Aa/mvp.opt.aa, line 169
        // volatile! 
        // Source expression
        // (J_idx == 2 )
        // J_idx
        // Target expression
        // (as target) J_idx_2
        // start: WAR dependencies for J_idx_2
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_2
        // end:  		$volatile J_idx_2 := (J_idx == 2 ) $buffering 1
        // start: WAR dependencies for J_idx_3
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_3
        // start:  		$volatile J_idx_3 := (J_idx == 3 ) $buffering 1
        //  file .Aa/mvp.opt.aa, line 170
        // volatile! 
        // Source expression
        // (J_idx == 3 )
        // J_idx
        // Target expression
        // (as target) J_idx_3
        // start: WAR dependencies for J_idx_3
        // ignored out-of-scope w_root 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for J_idx_3
        // end:  		$volatile J_idx_3 := (J_idx == 3 ) $buffering 1
        // start:  		$guard (J_idx_0) A_0[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 171
        // Guard expression 
        // J_idx_0
        // Source expression
        // aval
        // Target expression
        // A_0[I][Jr]
        $T[array_obj_ref_426_sample_start_] 
        $T[array_obj_ref_426_sample_completed_] 
        $T[array_obj_ref_426_update_start_] 
        $T[array_obj_ref_426_update_completed_] 
        $T[array_obj_ref_426_word_address_calculated] 
        $T[array_obj_ref_426_root_address_calculated] 
        $T[array_obj_ref_426_offset_calculated] 
        $T[array_obj_ref_426_index_resized_0] 
        $T[array_obj_ref_426_index_scaled_0] 
        $T[array_obj_ref_426_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_426_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_426_index_computed_0
        ;;[array_obj_ref_426_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_426_index_computed_0 &-> (array_obj_ref_426_index_resize_0)
        array_obj_ref_426_index_resized_0 <-& (array_obj_ref_426_index_resize_0)
        $T[array_obj_ref_426_index_scale_0_sample_start] 
        $T[array_obj_ref_426_index_scale_0_sample_complete] 
        $T[array_obj_ref_426_index_scale_0_update_start] 
        $T[array_obj_ref_426_index_scale_0_update_complete] 
        ;;[array_obj_ref_426_index_scale_0_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_426_index_scale_0_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_426_index_resized_0 &-> (array_obj_ref_426_index_scale_0_sample_start)
        array_obj_ref_426_index_scale_0_sample_start &-> (array_obj_ref_426_index_scale_0_Sample)
        array_obj_ref_426_index_scale_0_sample_complete <-& (array_obj_ref_426_index_scale_0_Sample)
        array_obj_ref_426_index_scale_0_update_start &-> (array_obj_ref_426_index_scale_0_Update)
        array_obj_ref_426_index_scale_0_update_complete <-& (array_obj_ref_426_index_scale_0_Update)
        array_obj_ref_426_index_scaled_0 <-& (array_obj_ref_426_index_scale_0_update_complete)
        $T[array_obj_ref_426_index_resized_1] 
        $T[array_obj_ref_426_index_scaled_1] 
        $T[array_obj_ref_426_index_computed_1] 
        // Jr
        // start: Forward dependencies from Jr to transition array_obj_ref_426_index_computed_1
        array_obj_ref_426_index_computed_1 <-& (slice_398_update_completed_)
        // done: Forward dependencies from Jr to transition array_obj_ref_426_index_computed_1
        ;;[array_obj_ref_426_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_426_index_computed_1 &-> (array_obj_ref_426_index_resize_1)
        array_obj_ref_426_index_resized_1 <-& (array_obj_ref_426_index_resize_1)
        ;;[array_obj_ref_426_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_426_index_resized_1 &-> (array_obj_ref_426_index_scale_1)
        array_obj_ref_426_index_scaled_1 <-& (array_obj_ref_426_index_scale_1)
        $T[array_obj_ref_426_partial_sum_1_sample_start] 
        $T[array_obj_ref_426_partial_sum_1_sample_complete] 
        $T[array_obj_ref_426_partial_sum_1_update_start] 
        $T[array_obj_ref_426_partial_sum_1_update_complete] 
        ;;[array_obj_ref_426_partial_sum_1_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_426_partial_sum_1_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_426_partial_sum_1_sample_start &-> (array_obj_ref_426_partial_sum_1_Sample)
        array_obj_ref_426_partial_sum_1_sample_complete <-& (array_obj_ref_426_partial_sum_1_Sample)
        array_obj_ref_426_partial_sum_1_update_start &-> (array_obj_ref_426_partial_sum_1_Update)
        array_obj_ref_426_partial_sum_1_update_complete <-& (array_obj_ref_426_partial_sum_1_Update)
        array_obj_ref_426_partial_sum_1_sample_start <-& (array_obj_ref_426_index_scaled_0)
        array_obj_ref_426_partial_sum_1_sample_start <-& (array_obj_ref_426_index_scaled_1)
        array_obj_ref_426_offset_calculated <-& (array_obj_ref_426_partial_sum_1_update_complete)
        ;;[array_obj_ref_426_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_426_partial_sum_1_update_complete &-> (array_obj_ref_426_final_index_sum_regn)
        array_obj_ref_426_offset_calculated <-& (array_obj_ref_426_final_index_sum_regn)
        ;;[array_obj_ref_426_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_426_offset_calculated &-> (array_obj_ref_426_base_plus_offset)
        array_obj_ref_426_root_address_calculated <-& (array_obj_ref_426_base_plus_offset)
        ;;[array_obj_ref_426_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_426_root_address_calculated &-> (array_obj_ref_426_word_addrgen)
        array_obj_ref_426_word_address_calculated <-& (array_obj_ref_426_word_addrgen)
        ;;[array_obj_ref_426_Sample] 
        {
          ;;[array_obj_ref_426_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_426_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_426_sample_start_ <-& (array_obj_ref_426_word_address_calculated)
        array_obj_ref_426_sample_start_ &-> (array_obj_ref_426_Sample)
        array_obj_ref_426_sample_completed_ <-& (array_obj_ref_426_Sample)
        array_obj_ref_426_sample_completed_ &-> ($null)
        array_obj_ref_426_update_start_ &-> (array_obj_ref_426_Update)
        array_obj_ref_426_update_completed_ <-& (array_obj_ref_426_Update)
        // Guard dependency for expression array_obj_ref_426 with guard R_J_idx_0_423
        // root phi_stmt_380 of guard-expression not in visited elements.
        // start: Forward dependencies from aval to transition array_obj_ref_426_sample_start_
        array_obj_ref_426_sample_start_ <-& (RPIPE_in_data_401_update_completed_)
        // done: Forward dependencies from aval to transition array_obj_ref_426_sample_start_
        // end:  		$guard (J_idx_0) A_0[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        // start:  		$guard (J_idx_1) A_1[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 173
        // Guard expression 
        // J_idx_1
        // Source expression
        // aval
        // Target expression
        // A_1[I][Jr]
        $T[array_obj_ref_438_sample_start_] 
        $T[array_obj_ref_438_sample_completed_] 
        $T[array_obj_ref_438_update_start_] 
        $T[array_obj_ref_438_update_completed_] 
        $T[array_obj_ref_438_word_address_calculated] 
        $T[array_obj_ref_438_root_address_calculated] 
        $T[array_obj_ref_438_offset_calculated] 
        $T[array_obj_ref_438_index_resized_0] 
        $T[array_obj_ref_438_index_scaled_0] 
        $T[array_obj_ref_438_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_438_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_438_index_computed_0
        ;;[array_obj_ref_438_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_438_index_computed_0 &-> (array_obj_ref_438_index_resize_0)
        array_obj_ref_438_index_resized_0 <-& (array_obj_ref_438_index_resize_0)
        $T[array_obj_ref_438_index_scale_0_sample_start] 
        $T[array_obj_ref_438_index_scale_0_sample_complete] 
        $T[array_obj_ref_438_index_scale_0_update_start] 
        $T[array_obj_ref_438_index_scale_0_update_complete] 
        ;;[array_obj_ref_438_index_scale_0_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_438_index_scale_0_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_438_index_resized_0 &-> (array_obj_ref_438_index_scale_0_sample_start)
        array_obj_ref_438_index_scale_0_sample_start &-> (array_obj_ref_438_index_scale_0_Sample)
        array_obj_ref_438_index_scale_0_sample_complete <-& (array_obj_ref_438_index_scale_0_Sample)
        array_obj_ref_438_index_scale_0_update_start &-> (array_obj_ref_438_index_scale_0_Update)
        array_obj_ref_438_index_scale_0_update_complete <-& (array_obj_ref_438_index_scale_0_Update)
        array_obj_ref_438_index_scaled_0 <-& (array_obj_ref_438_index_scale_0_update_complete)
        $T[array_obj_ref_438_index_resized_1] 
        $T[array_obj_ref_438_index_scaled_1] 
        $T[array_obj_ref_438_index_computed_1] 
        // Jr
        // start: Forward dependencies from Jr to transition array_obj_ref_438_index_computed_1
        array_obj_ref_438_index_computed_1 <-& (slice_398_update_completed_)
        // done: Forward dependencies from Jr to transition array_obj_ref_438_index_computed_1
        ;;[array_obj_ref_438_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_438_index_computed_1 &-> (array_obj_ref_438_index_resize_1)
        array_obj_ref_438_index_resized_1 <-& (array_obj_ref_438_index_resize_1)
        ;;[array_obj_ref_438_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_438_index_resized_1 &-> (array_obj_ref_438_index_scale_1)
        array_obj_ref_438_index_scaled_1 <-& (array_obj_ref_438_index_scale_1)
        $T[array_obj_ref_438_partial_sum_1_sample_start] 
        $T[array_obj_ref_438_partial_sum_1_sample_complete] 
        $T[array_obj_ref_438_partial_sum_1_update_start] 
        $T[array_obj_ref_438_partial_sum_1_update_complete] 
        ;;[array_obj_ref_438_partial_sum_1_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_438_partial_sum_1_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_438_partial_sum_1_sample_start &-> (array_obj_ref_438_partial_sum_1_Sample)
        array_obj_ref_438_partial_sum_1_sample_complete <-& (array_obj_ref_438_partial_sum_1_Sample)
        array_obj_ref_438_partial_sum_1_update_start &-> (array_obj_ref_438_partial_sum_1_Update)
        array_obj_ref_438_partial_sum_1_update_complete <-& (array_obj_ref_438_partial_sum_1_Update)
        array_obj_ref_438_partial_sum_1_sample_start <-& (array_obj_ref_438_index_scaled_0)
        array_obj_ref_438_partial_sum_1_sample_start <-& (array_obj_ref_438_index_scaled_1)
        array_obj_ref_438_offset_calculated <-& (array_obj_ref_438_partial_sum_1_update_complete)
        ;;[array_obj_ref_438_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_438_partial_sum_1_update_complete &-> (array_obj_ref_438_final_index_sum_regn)
        array_obj_ref_438_offset_calculated <-& (array_obj_ref_438_final_index_sum_regn)
        ;;[array_obj_ref_438_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_438_offset_calculated &-> (array_obj_ref_438_base_plus_offset)
        array_obj_ref_438_root_address_calculated <-& (array_obj_ref_438_base_plus_offset)
        ;;[array_obj_ref_438_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_438_root_address_calculated &-> (array_obj_ref_438_word_addrgen)
        array_obj_ref_438_word_address_calculated <-& (array_obj_ref_438_word_addrgen)
        ;;[array_obj_ref_438_Sample] 
        {
          ;;[array_obj_ref_438_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_438_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_438_sample_start_ <-& (array_obj_ref_438_word_address_calculated)
        array_obj_ref_438_sample_start_ &-> (array_obj_ref_438_Sample)
        array_obj_ref_438_sample_completed_ <-& (array_obj_ref_438_Sample)
        array_obj_ref_438_sample_completed_ &-> ($null)
        array_obj_ref_438_update_start_ &-> (array_obj_ref_438_Update)
        array_obj_ref_438_update_completed_ <-& (array_obj_ref_438_Update)
        // Guard dependency for expression array_obj_ref_438 with guard R_J_idx_1_435
        // root phi_stmt_380 of guard-expression not in visited elements.
        // start: Forward dependencies from aval to transition array_obj_ref_438_sample_start_
        array_obj_ref_438_sample_start_ <-& (RPIPE_in_data_401_update_completed_)
        // done: Forward dependencies from aval to transition array_obj_ref_438_sample_start_
        // end:  		$guard (J_idx_1) A_1[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        // start:  		$guard (J_idx_2) A_2[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 175
        // Guard expression 
        // J_idx_2
        // Source expression
        // aval
        // Target expression
        // A_2[I][Jr]
        $T[array_obj_ref_450_sample_start_] 
        $T[array_obj_ref_450_sample_completed_] 
        $T[array_obj_ref_450_update_start_] 
        $T[array_obj_ref_450_update_completed_] 
        $T[array_obj_ref_450_word_address_calculated] 
        $T[array_obj_ref_450_root_address_calculated] 
        $T[array_obj_ref_450_offset_calculated] 
        $T[array_obj_ref_450_index_resized_0] 
        $T[array_obj_ref_450_index_scaled_0] 
        $T[array_obj_ref_450_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_450_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_450_index_computed_0
        ;;[array_obj_ref_450_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_450_index_computed_0 &-> (array_obj_ref_450_index_resize_0)
        array_obj_ref_450_index_resized_0 <-& (array_obj_ref_450_index_resize_0)
        $T[array_obj_ref_450_index_scale_0_sample_start] 
        $T[array_obj_ref_450_index_scale_0_sample_complete] 
        $T[array_obj_ref_450_index_scale_0_update_start] 
        $T[array_obj_ref_450_index_scale_0_update_complete] 
        ;;[array_obj_ref_450_index_scale_0_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_450_index_scale_0_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_450_index_resized_0 &-> (array_obj_ref_450_index_scale_0_sample_start)
        array_obj_ref_450_index_scale_0_sample_start &-> (array_obj_ref_450_index_scale_0_Sample)
        array_obj_ref_450_index_scale_0_sample_complete <-& (array_obj_ref_450_index_scale_0_Sample)
        array_obj_ref_450_index_scale_0_update_start &-> (array_obj_ref_450_index_scale_0_Update)
        array_obj_ref_450_index_scale_0_update_complete <-& (array_obj_ref_450_index_scale_0_Update)
        array_obj_ref_450_index_scaled_0 <-& (array_obj_ref_450_index_scale_0_update_complete)
        $T[array_obj_ref_450_index_resized_1] 
        $T[array_obj_ref_450_index_scaled_1] 
        $T[array_obj_ref_450_index_computed_1] 
        // Jr
        // start: Forward dependencies from Jr to transition array_obj_ref_450_index_computed_1
        array_obj_ref_450_index_computed_1 <-& (slice_398_update_completed_)
        // done: Forward dependencies from Jr to transition array_obj_ref_450_index_computed_1
        ;;[array_obj_ref_450_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_450_index_computed_1 &-> (array_obj_ref_450_index_resize_1)
        array_obj_ref_450_index_resized_1 <-& (array_obj_ref_450_index_resize_1)
        ;;[array_obj_ref_450_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_450_index_resized_1 &-> (array_obj_ref_450_index_scale_1)
        array_obj_ref_450_index_scaled_1 <-& (array_obj_ref_450_index_scale_1)
        $T[array_obj_ref_450_partial_sum_1_sample_start] 
        $T[array_obj_ref_450_partial_sum_1_sample_complete] 
        $T[array_obj_ref_450_partial_sum_1_update_start] 
        $T[array_obj_ref_450_partial_sum_1_update_complete] 
        ;;[array_obj_ref_450_partial_sum_1_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_450_partial_sum_1_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_450_partial_sum_1_sample_start &-> (array_obj_ref_450_partial_sum_1_Sample)
        array_obj_ref_450_partial_sum_1_sample_complete <-& (array_obj_ref_450_partial_sum_1_Sample)
        array_obj_ref_450_partial_sum_1_update_start &-> (array_obj_ref_450_partial_sum_1_Update)
        array_obj_ref_450_partial_sum_1_update_complete <-& (array_obj_ref_450_partial_sum_1_Update)
        array_obj_ref_450_partial_sum_1_sample_start <-& (array_obj_ref_450_index_scaled_0)
        array_obj_ref_450_partial_sum_1_sample_start <-& (array_obj_ref_450_index_scaled_1)
        array_obj_ref_450_offset_calculated <-& (array_obj_ref_450_partial_sum_1_update_complete)
        ;;[array_obj_ref_450_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_450_partial_sum_1_update_complete &-> (array_obj_ref_450_final_index_sum_regn)
        array_obj_ref_450_offset_calculated <-& (array_obj_ref_450_final_index_sum_regn)
        ;;[array_obj_ref_450_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_450_offset_calculated &-> (array_obj_ref_450_base_plus_offset)
        array_obj_ref_450_root_address_calculated <-& (array_obj_ref_450_base_plus_offset)
        ;;[array_obj_ref_450_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_450_root_address_calculated &-> (array_obj_ref_450_word_addrgen)
        array_obj_ref_450_word_address_calculated <-& (array_obj_ref_450_word_addrgen)
        ;;[array_obj_ref_450_Sample] 
        {
          ;;[array_obj_ref_450_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_450_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_450_sample_start_ <-& (array_obj_ref_450_word_address_calculated)
        array_obj_ref_450_sample_start_ &-> (array_obj_ref_450_Sample)
        array_obj_ref_450_sample_completed_ <-& (array_obj_ref_450_Sample)
        array_obj_ref_450_sample_completed_ &-> ($null)
        array_obj_ref_450_update_start_ &-> (array_obj_ref_450_Update)
        array_obj_ref_450_update_completed_ <-& (array_obj_ref_450_Update)
        // Guard dependency for expression array_obj_ref_450 with guard R_J_idx_2_447
        // root phi_stmt_380 of guard-expression not in visited elements.
        // start: Forward dependencies from aval to transition array_obj_ref_450_sample_start_
        array_obj_ref_450_sample_start_ <-& (RPIPE_in_data_401_update_completed_)
        // done: Forward dependencies from aval to transition array_obj_ref_450_sample_start_
        // end:  		$guard (J_idx_2) A_2[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        // start:  		$guard (J_idx_3) A_3[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        //  file .Aa/mvp.opt.aa, line 177
        // Guard expression 
        // J_idx_3
        // Source expression
        // aval
        // Target expression
        // A_3[I][Jr]
        $T[array_obj_ref_462_sample_start_] 
        $T[array_obj_ref_462_sample_completed_] 
        $T[array_obj_ref_462_update_start_] 
        $T[array_obj_ref_462_update_completed_] 
        $T[array_obj_ref_462_word_address_calculated] 
        $T[array_obj_ref_462_root_address_calculated] 
        $T[array_obj_ref_462_offset_calculated] 
        $T[array_obj_ref_462_index_resized_0] 
        $T[array_obj_ref_462_index_scaled_0] 
        $T[array_obj_ref_462_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_462_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_462_index_computed_0
        ;;[array_obj_ref_462_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_462_index_computed_0 &-> (array_obj_ref_462_index_resize_0)
        array_obj_ref_462_index_resized_0 <-& (array_obj_ref_462_index_resize_0)
        $T[array_obj_ref_462_index_scale_0_sample_start] 
        $T[array_obj_ref_462_index_scale_0_sample_complete] 
        $T[array_obj_ref_462_index_scale_0_update_start] 
        $T[array_obj_ref_462_index_scale_0_update_complete] 
        ;;[array_obj_ref_462_index_scale_0_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_462_index_scale_0_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_462_index_resized_0 &-> (array_obj_ref_462_index_scale_0_sample_start)
        array_obj_ref_462_index_scale_0_sample_start &-> (array_obj_ref_462_index_scale_0_Sample)
        array_obj_ref_462_index_scale_0_sample_complete <-& (array_obj_ref_462_index_scale_0_Sample)
        array_obj_ref_462_index_scale_0_update_start &-> (array_obj_ref_462_index_scale_0_Update)
        array_obj_ref_462_index_scale_0_update_complete <-& (array_obj_ref_462_index_scale_0_Update)
        array_obj_ref_462_index_scaled_0 <-& (array_obj_ref_462_index_scale_0_update_complete)
        $T[array_obj_ref_462_index_resized_1] 
        $T[array_obj_ref_462_index_scaled_1] 
        $T[array_obj_ref_462_index_computed_1] 
        // Jr
        // start: Forward dependencies from Jr to transition array_obj_ref_462_index_computed_1
        array_obj_ref_462_index_computed_1 <-& (slice_398_update_completed_)
        // done: Forward dependencies from Jr to transition array_obj_ref_462_index_computed_1
        ;;[array_obj_ref_462_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_462_index_computed_1 &-> (array_obj_ref_462_index_resize_1)
        array_obj_ref_462_index_resized_1 <-& (array_obj_ref_462_index_resize_1)
        ;;[array_obj_ref_462_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_462_index_resized_1 &-> (array_obj_ref_462_index_scale_1)
        array_obj_ref_462_index_scaled_1 <-& (array_obj_ref_462_index_scale_1)
        $T[array_obj_ref_462_partial_sum_1_sample_start] 
        $T[array_obj_ref_462_partial_sum_1_sample_complete] 
        $T[array_obj_ref_462_partial_sum_1_update_start] 
        $T[array_obj_ref_462_partial_sum_1_update_complete] 
        ;;[array_obj_ref_462_partial_sum_1_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_462_partial_sum_1_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_462_partial_sum_1_sample_start &-> (array_obj_ref_462_partial_sum_1_Sample)
        array_obj_ref_462_partial_sum_1_sample_complete <-& (array_obj_ref_462_partial_sum_1_Sample)
        array_obj_ref_462_partial_sum_1_update_start &-> (array_obj_ref_462_partial_sum_1_Update)
        array_obj_ref_462_partial_sum_1_update_complete <-& (array_obj_ref_462_partial_sum_1_Update)
        array_obj_ref_462_partial_sum_1_sample_start <-& (array_obj_ref_462_index_scaled_0)
        array_obj_ref_462_partial_sum_1_sample_start <-& (array_obj_ref_462_index_scaled_1)
        array_obj_ref_462_offset_calculated <-& (array_obj_ref_462_partial_sum_1_update_complete)
        ;;[array_obj_ref_462_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_462_partial_sum_1_update_complete &-> (array_obj_ref_462_final_index_sum_regn)
        array_obj_ref_462_offset_calculated <-& (array_obj_ref_462_final_index_sum_regn)
        ;;[array_obj_ref_462_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_462_offset_calculated &-> (array_obj_ref_462_base_plus_offset)
        array_obj_ref_462_root_address_calculated <-& (array_obj_ref_462_base_plus_offset)
        ;;[array_obj_ref_462_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_462_root_address_calculated &-> (array_obj_ref_462_word_addrgen)
        array_obj_ref_462_word_address_calculated <-& (array_obj_ref_462_word_addrgen)
        ;;[array_obj_ref_462_Sample] 
        {
          ;;[array_obj_ref_462_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_462_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_462_sample_start_ <-& (array_obj_ref_462_word_address_calculated)
        array_obj_ref_462_sample_start_ &-> (array_obj_ref_462_Sample)
        array_obj_ref_462_sample_completed_ <-& (array_obj_ref_462_Sample)
        array_obj_ref_462_sample_completed_ &-> ($null)
        array_obj_ref_462_update_start_ &-> (array_obj_ref_462_Update)
        array_obj_ref_462_update_completed_ <-& (array_obj_ref_462_Update)
        // Guard dependency for expression array_obj_ref_462 with guard R_J_idx_3_459
        // root phi_stmt_380 of guard-expression not in visited elements.
        // start: Forward dependencies from aval to transition array_obj_ref_462_sample_start_
        array_obj_ref_462_sample_start_ <-& (RPIPE_in_data_401_update_completed_)
        // done: Forward dependencies from aval to transition array_obj_ref_462_sample_start_
        // end:  		$guard (J_idx_3) A_3[I][Jr] := aval $buffering 1// bits of buffering = 32. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  array_obj_ref_450 store
        // memory-space  memory_space_1
        //  array_obj_ref_438 store
        // memory-space  memory_space_0
        //  array_obj_ref_426 store
        // memory-space  memory_space_3
        //  array_obj_ref_462 store
        // pipe read/write dependencies for pipe in_data
        // read-dependencies for pipe in_data
        // write-dependencies for pipe in_data
        // signal write dependencies for in_data
      }
      assign_stmt_390_to_assign_stmt_464__entry__ |-> (assign_stmt_390_to_assign_stmt_464)
      assign_stmt_390_to_assign_stmt_464__exit__ <-| (assign_stmt_390_to_assign_stmt_464)
      // if-statement  
      //  file .Aa/mvp.opt.aa, line 0
      ;;[if_stmt_471_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_471__entry__ |-> (if_stmt_471_dead_link)
      if_stmt_471__exit__ <-| (if_stmt_471_dead_link)
      ;;[if_stmt_471_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (nJ < 32 )
        ;;[ULT_u8_u1_474] 
        {
          // binary expression 
          ||[ULT_u8_u1_474_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_471__entry__ |-> (if_stmt_471_eval_test)
      $P [ULT_u8_u1_474_place]
      ULT_u8_u1_474_place <-| (if_stmt_471_eval_test)
      ;;[if_stmt_471_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_471_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u8_u1_474_place |-> (if_stmt_471_if_link if_stmt_471_else_link)
      $P [inner_loopback]
      inner_loopback <-| (if_stmt_471_if_link)
      if_stmt_471__exit__ <-| (if_stmt_471_else_link)
      // if-statement  
      //  file .Aa/mvp.opt.aa, line 0
      ;;[if_stmt_477_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_477__entry__ |-> (if_stmt_477_dead_link)
      if_stmt_477__exit__ <-| (if_stmt_477_dead_link)
      ;;[if_stmt_477_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (nI < 32 )
        ;;[ULT_u8_u1_480] 
        {
          // binary expression 
          ||[ULT_u8_u1_480_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_477__entry__ |-> (if_stmt_477_eval_test)
      $P [ULT_u8_u1_480_place]
      ULT_u8_u1_480_place <-| (if_stmt_477_eval_test)
      ;;[if_stmt_477_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_477_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u8_u1_480_place |-> (if_stmt_477_if_link if_stmt_477_else_link)
      $P [outer_loopback]
      outer_loopback <-| (if_stmt_477_if_link)
      if_stmt_477__exit__ <-| (if_stmt_477_else_link)
      // control-path for merge  
      //  file .Aa/mvp.opt.aa, line 154
      ;;[merge_stmt_367_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_367__entry__ |-> (merge_stmt_367_dead_link)
      merge_stmt_367__exit__ <-| (merge_stmt_367_dead_link)
      //---------------------   merge statement  file .Aa/mvp.opt.aa, line 154  --------------------------
      ||[merge_stmt_367__entry___PhiReq] 
      {
        ;;[phi_stmt_368] 
        {
          ||[phi_stmt_368_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   outer_loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_371_konst_delay_trans] $delay
          }
          $T [phi_stmt_368_req] 
        }
      }
      merge_stmt_367__entry__ |-> (merge_stmt_367__entry___PhiReq)
      ||[outer_loopback_PhiReq] 
      {
        ;;[phi_stmt_368] 
        {
          ||[phi_stmt_368_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   outer_loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_368_req] 
        }
      }
      outer_loopback |-> (outer_loopback_PhiReq)
      $P [merge_stmt_367_PhiReqMerge] 
      merge_stmt_367_PhiReqMerge <-| ( merge_stmt_367__entry___PhiReq  outer_loopback_PhiReq )
      ||[merge_stmt_367_PhiAck] 
      {
        $T [phi_stmt_368_ack] 
      }
      merge_stmt_367_PhiReqMerge |-> (merge_stmt_367_PhiAck)
      merge_stmt_367__exit__  <-| (merge_stmt_367_PhiAck)
      //---------------------  end of merge statement  file .Aa/mvp.opt.aa, line 154  --------------------------
      // control-path for merge  
      //  file .Aa/mvp.opt.aa, line 159
      ;;[merge_stmt_379_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_379__entry__ |-> (merge_stmt_379_dead_link)
      merge_stmt_379__exit__ <-| (merge_stmt_379_dead_link)
      //---------------------   merge statement  file .Aa/mvp.opt.aa, line 159  --------------------------
      ||[merge_stmt_379__entry___PhiReq] 
      {
        ;;[phi_stmt_380] 
        {
          ||[phi_stmt_380_sources] 
          {
            // sources for 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_383_konst_delay_trans] $delay
          }
          $T [phi_stmt_380_req] 
        }
      }
      merge_stmt_379__entry__ |-> (merge_stmt_379__entry___PhiReq)
      ||[inner_loopback_PhiReq] 
      {
        ;;[phi_stmt_380] 
        {
          ||[phi_stmt_380_sources] 
          {
            // sources for 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_380_req] 
        }
      }
      inner_loopback |-> (inner_loopback_PhiReq)
      $P [merge_stmt_379_PhiReqMerge] 
      merge_stmt_379_PhiReqMerge <-| ( merge_stmt_379__entry___PhiReq  inner_loopback_PhiReq )
      ||[merge_stmt_379_PhiAck] 
      {
        $T [phi_stmt_380_ack] 
      }
      merge_stmt_379_PhiReqMerge |-> (merge_stmt_379_PhiAck)
      merge_stmt_379__exit__  <-| (merge_stmt_379_PhiAck)
      //---------------------  end of merge statement  file .Aa/mvp.opt.aa, line 159  --------------------------
      merge_stmt_367__entry__ <-| (branch_block_stmt_366__entry__)
      assign_stmt_378__entry__ <-| (merge_stmt_367__exit__)
      merge_stmt_379__entry__ <-| (assign_stmt_378__exit__)
      assign_stmt_390_to_assign_stmt_464__entry__ <-| (merge_stmt_379__exit__)
      if_stmt_471__entry__ <-| (assign_stmt_390_to_assign_stmt_464__exit__)
      if_stmt_477__entry__ <-| (if_stmt_471__exit__)
      if_stmt_477__exit__ |-> (branch_block_stmt_366__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %readMatrix%mRead%
    //  file .Aa/mvp.opt.aa, line 154
    // constant-object-declarations for block %readMatrix%mRead%
    //  file .Aa/mvp.opt.aa, line 159
    // constant-object-declarations for block %readMatrix%mRead
    //  file .Aa/mvp.opt.aa, line 152
    // constant-object-declarations for block %readMatrix
    //  file .Aa/mvp.opt.aa, line 147
    // constant-declarations for block %readMatrix%mRead
    //  file .Aa/mvp.opt.aa, line 152
    // constant-declarations for block %readMatrix%mRead%
    //  file .Aa/mvp.opt.aa, line 154
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   outer_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 155
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_371_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_376_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %readMatrix%mRead%
    //  file .Aa/mvp.opt.aa, line 159
    // constant-declarations for phi:  			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 160
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_383_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_388_wire_constant] : $int<8> := _b00000001// 1
    // 0 
    $constant $W[konst_405_wire_constant] : $int<2> := _b00// 0
    // 1 
    $constant $W[konst_410_wire_constant] : $int<2> := _b01// 1
    // 2 
    $constant $W[konst_415_wire_constant] : $int<2> := _b10// 2
    // 3 
    $constant $W[konst_420_wire_constant] : $int<2> := _b11// 3
    // A_0[I][Jr]
    $constant $W[array_obj_ref_426_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_426_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_426_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_426_word_offset_0] : $int<8> := _b00000000// 0
    // A_1[I][Jr]
    $constant $W[array_obj_ref_438_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_438_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_438_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_438_word_offset_0] : $int<8> := _b00000000// 0
    // A_2[I][Jr]
    $constant $W[array_obj_ref_450_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_450_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_450_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_450_word_offset_0] : $int<8> := _b00000000// 0
    // A_3[I][Jr]
    $constant $W[array_obj_ref_462_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_462_offset_scale_factor_0] : $int<8> := _b00001000// 8
    $constant $W[array_obj_ref_462_offset_scale_factor_1] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_462_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/mvp.opt.aa, line 0
    // 32 
    $constant $W[konst_473_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/mvp.opt.aa, line 0
    // 32 
    $constant $W[konst_479_wire_constant] : $int<8> := _b00100000// 32
    // block %readMatrix%mRead
    //  file .Aa/mvp.opt.aa, line 152
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 154
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   outer_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 155
    $W[nI_378_372_buffered] : $int<8>
    // I
    $W[I_368] : $int<8>
    // 		nI := (I + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 158
    // nI
    $W[nI_378] : $int<8>
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 159
    // 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 160
    $W[nJ_390_384_buffered] : $int<8>
    // J
    $W[J_380] : $int<8>
    // 		nJ := (J + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 163
    // nJ
    $W[nJ_390] : $int<8>
    // 		$volatile J_idx := ( $slice J 1 0 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 164
    // J_idx
    $W[J_idx_395] : $int<2>
    // 		Jr := ( $slice J 7 2 )  $buffering 1// bits of buffering = 6. 
    //  file .Aa/mvp.opt.aa, line 165
    // Jr
    $W[Jr_399] : $int<6>
    // 		aval := in_data $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 166
    // aval
    $W[aval_402] : $int<32>
    // 		$volatile J_idx_0 := (J_idx == 0 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 167
    // J_idx_0
    $W[J_idx_0_407] : $int<1>
    // 		$volatile J_idx_1 := (J_idx == 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 168
    // J_idx_1
    $W[J_idx_1_412] : $int<1>
    // 		$volatile J_idx_2 := (J_idx == 2 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 169
    // J_idx_2
    $W[J_idx_2_417] : $int<1>
    // 		$volatile J_idx_3 := (J_idx == 3 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 170
    // J_idx_3
    $W[J_idx_3_422] : $int<1>
    // 		$guard (J_idx_0) A_0[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 171
    // A_0[I][Jr]
    $intermediate $W[R_I_424_resized] : $int<8>
    $intermediate $W[R_I_424_scaled] : $int<8>
    $intermediate $W[R_Jr_425_resized] : $int<8>
    $intermediate $W[R_Jr_425_scaled] : $int<8>
    $intermediate $W[array_obj_ref_426_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_426_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_426_root_address] : $int<8>
    $W[array_obj_ref_426_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_426_data_0] : $int<32>
    // 		$guard (J_idx_1) A_1[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 173
    // A_1[I][Jr]
    $intermediate $W[R_I_436_resized] : $int<8>
    $intermediate $W[R_I_436_scaled] : $int<8>
    $intermediate $W[R_Jr_437_resized] : $int<8>
    $intermediate $W[R_Jr_437_scaled] : $int<8>
    $intermediate $W[array_obj_ref_438_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_438_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_438_root_address] : $int<8>
    $W[array_obj_ref_438_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_438_data_0] : $int<32>
    // 		$guard (J_idx_2) A_2[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 175
    // A_2[I][Jr]
    $intermediate $W[R_I_448_resized] : $int<8>
    $intermediate $W[R_I_448_scaled] : $int<8>
    $intermediate $W[R_Jr_449_resized] : $int<8>
    $intermediate $W[R_Jr_449_scaled] : $int<8>
    $intermediate $W[array_obj_ref_450_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_450_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_450_root_address] : $int<8>
    $W[array_obj_ref_450_word_address_0] : $pointer<memory_space_2>
    $W[array_obj_ref_450_data_0] : $int<32>
    // 		$guard (J_idx_3) A_3[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 177
    // A_3[I][Jr]
    $intermediate $W[R_I_460_resized] : $int<8>
    $intermediate $W[R_I_460_scaled] : $int<8>
    $intermediate $W[R_Jr_461_resized] : $int<8>
    $intermediate $W[R_Jr_461_scaled] : $int<8>
    $intermediate $W[array_obj_ref_462_index_partial_sum_1] : $int<8>
    $intermediate $W[array_obj_ref_462_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_462_root_address] : $int<8>
    $W[array_obj_ref_462_word_address_0] : $pointer<memory_space_3>
    $W[array_obj_ref_462_data_0] : $int<32>
    // if statement  
    //  file .Aa/mvp.opt.aa, line 0
    // (nJ < 32 )
    $intermediate $W[ULT_u8_u1_474_wire] : $int<1>
    // if statement  
    //  file .Aa/mvp.opt.aa, line 0
    // (nI < 32 )
    $intermediate $W[ULT_u8_u1_480_wire] : $int<1>
    // datapath-instances for block %readMatrix%mRead
    //  file .Aa/mvp.opt.aa, line 152
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 154
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   outer_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 155
    # := [nI_378_372_buf] (nI_378) (nI_378_372_buffered)    
    $phi [phi_stmt_368] (type_cast_371_wire_constant nI_378_372_buffered) ( I_368 ) 
    // 		nI := (I + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 158
    // (I + 1 )
    +[ADD_u8_u8_377_inst] (I_368 konst_376_wire_constant) (nI_378)   
    $buffering  $out ADD_u8_u8_377_inst nI_378 1
    $delay ADD_u8_u8_377_inst 1
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 159
    // 			$phi J := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nJ $on   inner_loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 160
    # := [nJ_390_384_buf] (nJ_390) (nJ_390_384_buffered)    
    $phi [phi_stmt_380] (type_cast_383_wire_constant nJ_390_384_buffered) ( J_380 ) 
    // 		nJ := (J + 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/mvp.opt.aa, line 163
    // (J + 1 )
    +[ADD_u8_u8_389_inst] (J_380 konst_388_wire_constant) (nJ_390)   
    $buffering  $out ADD_u8_u8_389_inst nJ_390 1
    $delay ADD_u8_u8_389_inst 1
    // 		$volatile J_idx := ( $slice J 1 0 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 164
    // ( $slice J 1 0 ) 
    [:] [slice_394_inst] (J_380 1 0) (J_idx_395)  $flowthrough
    $delay slice_394_inst 0
    // 		Jr := ( $slice J 7 2 )  $buffering 1// bits of buffering = 6. 
    //  file .Aa/mvp.opt.aa, line 165
    // ( $slice J 7 2 ) 
    [:] [slice_398_inst] (J_380 7 2) (Jr_399) 
    $buffering  $out slice_398_inst Jr_399 1
    $delay slice_398_inst 1
    // 		aval := in_data $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 166
    // in_data
    $ioport $in [RPIPE_in_data_401_inst] (in_data) (aval_402) 
    $buffering $out RPIPE_in_data_401_inst aval_402 1
    // 		$volatile J_idx_0 := (J_idx == 0 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 167
    // (J_idx == 0 )
    ==[EQ_u2_u1_406_inst] (J_idx_395 konst_405_wire_constant) (J_idx_0_407)   $flowthrough 
    $delay EQ_u2_u1_406_inst 0
    // 		$volatile J_idx_1 := (J_idx == 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 168
    // (J_idx == 1 )
    ==[EQ_u2_u1_411_inst] (J_idx_395 konst_410_wire_constant) (J_idx_1_412)   $flowthrough 
    $delay EQ_u2_u1_411_inst 0
    // 		$volatile J_idx_2 := (J_idx == 2 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 169
    // (J_idx == 2 )
    ==[EQ_u2_u1_416_inst] (J_idx_395 konst_415_wire_constant) (J_idx_2_417)   $flowthrough 
    $delay EQ_u2_u1_416_inst 0
    // 		$volatile J_idx_3 := (J_idx == 3 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 170
    // (J_idx == 3 )
    ==[EQ_u2_u1_421_inst] (J_idx_395 konst_420_wire_constant) (J_idx_3_422)   $flowthrough 
    $delay EQ_u2_u1_421_inst 0
    // 		$guard (J_idx_0) A_0[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 171
    // A_0[I][Jr]
    &/ [array_obj_ref_426_index_0_resize] (I_368) (R_I_424_resized) $guard ( J_idx_0_407 ) 
    $flowthrough 
    *[array_obj_ref_426_index_0_scale] (R_I_424_resized array_obj_ref_426_offset_scale_factor_0) (R_I_424_scaled) $guard ( J_idx_0_407 )   
    $delay array_obj_ref_426_index_0_scale 2
    &/ [array_obj_ref_426_index_1_resize] (Jr_399) (R_Jr_425_resized) $guard ( J_idx_0_407 ) 
    $flowthrough 
    &/ [array_obj_ref_426_index_1_rename] (R_Jr_425_resized) (R_Jr_425_scaled) $guard ( J_idx_0_407 ) 
    $flowthrough 
    +[array_obj_ref_426_index_sum_1] (R_Jr_425_scaled R_I_424_scaled) (array_obj_ref_426_index_partial_sum_1) $guard ( J_idx_0_407 )   
    $delay array_obj_ref_426_index_sum_1 2
    &/ [array_obj_ref_426_index_offset] (array_obj_ref_426_index_partial_sum_1) (array_obj_ref_426_final_offset) $guard ( J_idx_0_407 ) 
    $flowthrough 
    &/ [array_obj_ref_426_root_address_inst] (array_obj_ref_426_final_offset) (array_obj_ref_426_root_address) $guard ( J_idx_0_407 ) 
    $flowthrough 
    &/ [array_obj_ref_426_addr_0] (array_obj_ref_426_root_address) (array_obj_ref_426_word_address_0) $guard ( J_idx_0_407 ) 
    $flowthrough 
    $store [array_obj_ref_426_store_0] $to memory_space_0 (array_obj_ref_426_word_address_0 array_obj_ref_426_data_0) $guard ( J_idx_0_407 ) 
    $delay array_obj_ref_426_store_0 4
    &/ [array_obj_ref_426_gather_scatter] (aval_402) (array_obj_ref_426_data_0) $guard ( J_idx_0_407 ) 
    $flowthrough 
    // 		$guard (J_idx_1) A_1[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 173
    // A_1[I][Jr]
    &/ [array_obj_ref_438_index_0_resize] (I_368) (R_I_436_resized) $guard ( J_idx_1_412 ) 
    $flowthrough 
    *[array_obj_ref_438_index_0_scale] (R_I_436_resized array_obj_ref_438_offset_scale_factor_0) (R_I_436_scaled) $guard ( J_idx_1_412 )   
    $delay array_obj_ref_438_index_0_scale 2
    &/ [array_obj_ref_438_index_1_resize] (Jr_399) (R_Jr_437_resized) $guard ( J_idx_1_412 ) 
    $flowthrough 
    &/ [array_obj_ref_438_index_1_rename] (R_Jr_437_resized) (R_Jr_437_scaled) $guard ( J_idx_1_412 ) 
    $flowthrough 
    +[array_obj_ref_438_index_sum_1] (R_Jr_437_scaled R_I_436_scaled) (array_obj_ref_438_index_partial_sum_1) $guard ( J_idx_1_412 )   
    $delay array_obj_ref_438_index_sum_1 2
    &/ [array_obj_ref_438_index_offset] (array_obj_ref_438_index_partial_sum_1) (array_obj_ref_438_final_offset) $guard ( J_idx_1_412 ) 
    $flowthrough 
    &/ [array_obj_ref_438_root_address_inst] (array_obj_ref_438_final_offset) (array_obj_ref_438_root_address) $guard ( J_idx_1_412 ) 
    $flowthrough 
    &/ [array_obj_ref_438_addr_0] (array_obj_ref_438_root_address) (array_obj_ref_438_word_address_0) $guard ( J_idx_1_412 ) 
    $flowthrough 
    $store [array_obj_ref_438_store_0] $to memory_space_1 (array_obj_ref_438_word_address_0 array_obj_ref_438_data_0) $guard ( J_idx_1_412 ) 
    $delay array_obj_ref_438_store_0 4
    &/ [array_obj_ref_438_gather_scatter] (aval_402) (array_obj_ref_438_data_0) $guard ( J_idx_1_412 ) 
    $flowthrough 
    // 		$guard (J_idx_2) A_2[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 175
    // A_2[I][Jr]
    &/ [array_obj_ref_450_index_0_resize] (I_368) (R_I_448_resized) $guard ( J_idx_2_417 ) 
    $flowthrough 
    *[array_obj_ref_450_index_0_scale] (R_I_448_resized array_obj_ref_450_offset_scale_factor_0) (R_I_448_scaled) $guard ( J_idx_2_417 )   
    $delay array_obj_ref_450_index_0_scale 2
    &/ [array_obj_ref_450_index_1_resize] (Jr_399) (R_Jr_449_resized) $guard ( J_idx_2_417 ) 
    $flowthrough 
    &/ [array_obj_ref_450_index_1_rename] (R_Jr_449_resized) (R_Jr_449_scaled) $guard ( J_idx_2_417 ) 
    $flowthrough 
    +[array_obj_ref_450_index_sum_1] (R_Jr_449_scaled R_I_448_scaled) (array_obj_ref_450_index_partial_sum_1) $guard ( J_idx_2_417 )   
    $delay array_obj_ref_450_index_sum_1 2
    &/ [array_obj_ref_450_index_offset] (array_obj_ref_450_index_partial_sum_1) (array_obj_ref_450_final_offset) $guard ( J_idx_2_417 ) 
    $flowthrough 
    &/ [array_obj_ref_450_root_address_inst] (array_obj_ref_450_final_offset) (array_obj_ref_450_root_address) $guard ( J_idx_2_417 ) 
    $flowthrough 
    &/ [array_obj_ref_450_addr_0] (array_obj_ref_450_root_address) (array_obj_ref_450_word_address_0) $guard ( J_idx_2_417 ) 
    $flowthrough 
    $store [array_obj_ref_450_store_0] $to memory_space_2 (array_obj_ref_450_word_address_0 array_obj_ref_450_data_0) $guard ( J_idx_2_417 ) 
    $delay array_obj_ref_450_store_0 4
    &/ [array_obj_ref_450_gather_scatter] (aval_402) (array_obj_ref_450_data_0) $guard ( J_idx_2_417 ) 
    $flowthrough 
    // 		$guard (J_idx_3) A_3[I][Jr] := aval $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 177
    // A_3[I][Jr]
    &/ [array_obj_ref_462_index_0_resize] (I_368) (R_I_460_resized) $guard ( J_idx_3_422 ) 
    $flowthrough 
    *[array_obj_ref_462_index_0_scale] (R_I_460_resized array_obj_ref_462_offset_scale_factor_0) (R_I_460_scaled) $guard ( J_idx_3_422 )   
    $delay array_obj_ref_462_index_0_scale 2
    &/ [array_obj_ref_462_index_1_resize] (Jr_399) (R_Jr_461_resized) $guard ( J_idx_3_422 ) 
    $flowthrough 
    &/ [array_obj_ref_462_index_1_rename] (R_Jr_461_resized) (R_Jr_461_scaled) $guard ( J_idx_3_422 ) 
    $flowthrough 
    +[array_obj_ref_462_index_sum_1] (R_Jr_461_scaled R_I_460_scaled) (array_obj_ref_462_index_partial_sum_1) $guard ( J_idx_3_422 )   
    $delay array_obj_ref_462_index_sum_1 2
    &/ [array_obj_ref_462_index_offset] (array_obj_ref_462_index_partial_sum_1) (array_obj_ref_462_final_offset) $guard ( J_idx_3_422 ) 
    $flowthrough 
    &/ [array_obj_ref_462_root_address_inst] (array_obj_ref_462_final_offset) (array_obj_ref_462_root_address) $guard ( J_idx_3_422 ) 
    $flowthrough 
    &/ [array_obj_ref_462_addr_0] (array_obj_ref_462_root_address) (array_obj_ref_462_word_address_0) $guard ( J_idx_3_422 ) 
    $flowthrough 
    $store [array_obj_ref_462_store_0] $to memory_space_3 (array_obj_ref_462_word_address_0 array_obj_ref_462_data_0) $guard ( J_idx_3_422 ) 
    $delay array_obj_ref_462_store_0 4
    &/ [array_obj_ref_462_gather_scatter] (aval_402) (array_obj_ref_462_data_0) $guard ( J_idx_3_422 ) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/mvp.opt.aa, line 0
    // (nJ < 32 )
    <[ULT_u8_u1_474_inst] (nJ_390 konst_473_wire_constant) (ULT_u8_u1_474_wire)   $flowthrough 
    $delay ULT_u8_u1_474_inst 0
    ==0? [if_stmt_471_branch] (ULT_u8_u1_474_wire)
    // datapath-instances for if  
    //  file .Aa/mvp.opt.aa, line 0
    // (nI < 32 )
    <[ULT_u8_u1_480_inst] (nI_378 konst_479_wire_constant) (ULT_u8_u1_480_wire)   $flowthrough 
    $delay ULT_u8_u1_480_inst 0
    ==0? [if_stmt_477_branch] (ULT_u8_u1_480_wire)
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/mvp.opt.aa, line 154
  nI_378_372_buf <=> (branch_block_stmt_366/outer_loopback_PhiReq/phi_stmt_368/phi_stmt_368_sources/Interlock/Sample/req branch_block_stmt_366/outer_loopback_PhiReq/phi_stmt_368/phi_stmt_368_sources/Interlock/Update/req) (branch_block_stmt_366/outer_loopback_PhiReq/phi_stmt_368/phi_stmt_368_sources/Interlock/Sample/ack branch_block_stmt_366/outer_loopback_PhiReq/phi_stmt_368/phi_stmt_368_sources/Interlock/Update/ack)
  phi_stmt_368 <=> (branch_block_stmt_366/merge_stmt_367__entry___PhiReq/phi_stmt_368/phi_stmt_368_req branch_block_stmt_366/outer_loopback_PhiReq/phi_stmt_368/phi_stmt_368_req) (branch_block_stmt_366/merge_stmt_367_PhiAck/phi_stmt_368_ack)
  // 		nI := (I + 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/mvp.opt.aa, line 158
  // (I + 1 )
  // I
  ADD_u8_u8_377_inst <=> (branch_block_stmt_366/assign_stmt_378/ADD_u8_u8_377_Sample/rr branch_block_stmt_366/assign_stmt_378/ADD_u8_u8_377_Update/cr) (branch_block_stmt_366/assign_stmt_378/ADD_u8_u8_377_Sample/ra branch_block_stmt_366/assign_stmt_378/ADD_u8_u8_377_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/mvp.opt.aa, line 159
  nJ_390_384_buf <=> (branch_block_stmt_366/inner_loopback_PhiReq/phi_stmt_380/phi_stmt_380_sources/Interlock/Sample/req branch_block_stmt_366/inner_loopback_PhiReq/phi_stmt_380/phi_stmt_380_sources/Interlock/Update/req) (branch_block_stmt_366/inner_loopback_PhiReq/phi_stmt_380/phi_stmt_380_sources/Interlock/Sample/ack branch_block_stmt_366/inner_loopback_PhiReq/phi_stmt_380/phi_stmt_380_sources/Interlock/Update/ack)
  phi_stmt_380 <=> (branch_block_stmt_366/merge_stmt_379__entry___PhiReq/phi_stmt_380/phi_stmt_380_req branch_block_stmt_366/inner_loopback_PhiReq/phi_stmt_380/phi_stmt_380_req) (branch_block_stmt_366/merge_stmt_379_PhiAck/phi_stmt_380_ack)
  // 		nJ := (J + 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/mvp.opt.aa, line 163
  // (J + 1 )
  // J
  ADD_u8_u8_389_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/ADD_u8_u8_389_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/ADD_u8_u8_389_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/ADD_u8_u8_389_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/ADD_u8_u8_389_Update/ca)
  // 		$volatile J_idx := ( $slice J 1 0 )  $buffering 1
  //  file .Aa/mvp.opt.aa, line 164
  // J
  // 		Jr := ( $slice J 7 2 )  $buffering 1// bits of buffering = 6. 
  //  file .Aa/mvp.opt.aa, line 165
  // J
  // ( $slice J 7 2 ) 
  slice_398_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/slice_398_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/slice_398_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/slice_398_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/slice_398_Update/ca)
  // 		aval := in_data $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 166
  // in_data
  RPIPE_in_data_401_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/RPIPE_in_data_401_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/RPIPE_in_data_401_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/RPIPE_in_data_401_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/RPIPE_in_data_401_Update/ca)
  // 		$volatile J_idx_0 := (J_idx == 0 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 167
  // (J_idx == 0 )
  // J_idx
  // 		$volatile J_idx_1 := (J_idx == 1 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 168
  // (J_idx == 1 )
  // J_idx
  // 		$volatile J_idx_2 := (J_idx == 2 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 169
  // (J_idx == 2 )
  // J_idx
  // 		$volatile J_idx_3 := (J_idx == 3 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 170
  // (J_idx == 3 )
  // J_idx
  // 		$guard (J_idx_0) A_0[I][Jr] := aval $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 171
  // aval
  // I
  array_obj_ref_426_index_0_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_resize_0/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_resize_0/index_resize_ack)
  array_obj_ref_426_index_0_scale <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_0_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_0_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_0_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_0_Update/ca)
  // Jr
  array_obj_ref_426_index_1_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_resize_1/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_resize_1/index_resize_ack)
  array_obj_ref_426_index_1_rename <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_1/scale_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_index_scale_1/scale_rename_ack)
  array_obj_ref_426_index_sum_1 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_partial_sum_1_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_partial_sum_1_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_partial_sum_1_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_partial_sum_1_Update/ca)
  array_obj_ref_426_index_offset <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_final_index_sum_regn/req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_final_index_sum_regn/ack)
  array_obj_ref_426_root_address_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_base_plus_offset/sum_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_base_plus_offset/sum_rename_ack)
  array_obj_ref_426_addr_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_word_addrgen/root_register_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_word_addrgen/root_register_ack)
  array_obj_ref_426_gather_scatter <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Sample/array_obj_ref_426_Split/split_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Sample/array_obj_ref_426_Split/split_ack)
  array_obj_ref_426_store_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Sample/word_access_start/word_0/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Update/word_access_complete/word_0/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Sample/word_access_start/word_0/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_426_Update/word_access_complete/word_0/ca)
  // 		$guard (J_idx_1) A_1[I][Jr] := aval $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 173
  // aval
  // I
  array_obj_ref_438_index_0_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_resize_0/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_resize_0/index_resize_ack)
  array_obj_ref_438_index_0_scale <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_0_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_0_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_0_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_0_Update/ca)
  // Jr
  array_obj_ref_438_index_1_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_resize_1/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_resize_1/index_resize_ack)
  array_obj_ref_438_index_1_rename <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_1/scale_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_index_scale_1/scale_rename_ack)
  array_obj_ref_438_index_sum_1 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_partial_sum_1_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_partial_sum_1_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_partial_sum_1_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_partial_sum_1_Update/ca)
  array_obj_ref_438_index_offset <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_final_index_sum_regn/req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_final_index_sum_regn/ack)
  array_obj_ref_438_root_address_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_base_plus_offset/sum_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_base_plus_offset/sum_rename_ack)
  array_obj_ref_438_addr_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_word_addrgen/root_register_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_word_addrgen/root_register_ack)
  array_obj_ref_438_gather_scatter <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Sample/array_obj_ref_438_Split/split_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Sample/array_obj_ref_438_Split/split_ack)
  array_obj_ref_438_store_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Sample/word_access_start/word_0/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Update/word_access_complete/word_0/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Sample/word_access_start/word_0/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_438_Update/word_access_complete/word_0/ca)
  // 		$guard (J_idx_2) A_2[I][Jr] := aval $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 175
  // aval
  // I
  array_obj_ref_450_index_0_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_resize_0/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_resize_0/index_resize_ack)
  array_obj_ref_450_index_0_scale <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_0_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_0_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_0_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_0_Update/ca)
  // Jr
  array_obj_ref_450_index_1_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_resize_1/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_resize_1/index_resize_ack)
  array_obj_ref_450_index_1_rename <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_1/scale_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_index_scale_1/scale_rename_ack)
  array_obj_ref_450_index_sum_1 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_partial_sum_1_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_partial_sum_1_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_partial_sum_1_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_partial_sum_1_Update/ca)
  array_obj_ref_450_index_offset <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_final_index_sum_regn/req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_final_index_sum_regn/ack)
  array_obj_ref_450_root_address_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_base_plus_offset/sum_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_base_plus_offset/sum_rename_ack)
  array_obj_ref_450_addr_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_word_addrgen/root_register_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_word_addrgen/root_register_ack)
  array_obj_ref_450_gather_scatter <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Sample/array_obj_ref_450_Split/split_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Sample/array_obj_ref_450_Split/split_ack)
  array_obj_ref_450_store_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Sample/word_access_start/word_0/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Update/word_access_complete/word_0/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Sample/word_access_start/word_0/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_450_Update/word_access_complete/word_0/ca)
  // 		$guard (J_idx_3) A_3[I][Jr] := aval $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 177
  // aval
  // I
  array_obj_ref_462_index_0_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_resize_0/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_resize_0/index_resize_ack)
  array_obj_ref_462_index_0_scale <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_0_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_0_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_0_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_0_Update/ca)
  // Jr
  array_obj_ref_462_index_1_resize <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_resize_1/index_resize_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_resize_1/index_resize_ack)
  array_obj_ref_462_index_1_rename <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_1/scale_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_index_scale_1/scale_rename_ack)
  array_obj_ref_462_index_sum_1 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_partial_sum_1_Sample/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_partial_sum_1_Update/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_partial_sum_1_Sample/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_partial_sum_1_Update/ca)
  array_obj_ref_462_index_offset <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_final_index_sum_regn/req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_final_index_sum_regn/ack)
  array_obj_ref_462_root_address_inst <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_base_plus_offset/sum_rename_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_base_plus_offset/sum_rename_ack)
  array_obj_ref_462_addr_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_word_addrgen/root_register_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_word_addrgen/root_register_ack)
  array_obj_ref_462_gather_scatter <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Sample/array_obj_ref_462_Split/split_req) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Sample/array_obj_ref_462_Split/split_ack)
  array_obj_ref_462_store_0 <=> (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Sample/word_access_start/word_0/rr branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Update/word_access_complete/word_0/cr) (branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Sample/word_access_start/word_0/ra branch_block_stmt_366/assign_stmt_390_to_assign_stmt_464/array_obj_ref_462_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/mvp.opt.aa, line 0
  // (nJ < 32 )
  if_stmt_471_branch <=> (branch_block_stmt_366/if_stmt_471_eval_test/branch_req) (branch_block_stmt_366/if_stmt_471_else_link/else_choice_transition branch_block_stmt_366/if_stmt_471_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/mvp.opt.aa, line 0
  // (nI < 32 )
  if_stmt_477_branch <=> (branch_block_stmt_366/if_stmt_477_eval_test/branch_req) (branch_block_stmt_366/if_stmt_477_else_link/else_choice_transition branch_block_stmt_366/if_stmt_477_if_link/if_choice_transition)
}
$module [readVector] 
{
  // pipe-declarations for block %readVector
  //  file .Aa/mvp.opt.aa, line 187
  // pipe-declarations for block %readVector%loop
  //  file .Aa/mvp.opt.aa, line 192
  // memory-space 5 is written into.
  // memory-space 4 is written into.
  // memory-space 7 is written into.
  // memory-space 6 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_486] // Branch Block  file .Aa/mvp.opt.aa, line 192
    {
      $P [branch_block_stmt_486__entry__]
      branch_block_stmt_486__entry__ <-| ($entry)
      $P [branch_block_stmt_486__exit__]
      branch_block_stmt_486__exit__ |-> ($exit)
      $P [do_while_stmt_487__entry__] 
      $P [do_while_stmt_487__exit__] 
      // do-while-statement  
      //  file .Aa/mvp.opt.aa, line 194
      <o> [do_while_stmt_487]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_487__entry__] 
        $P[do_while_stmt_487__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_487_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_489
          // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_489_sample_start_] 
          $T[phi_stmt_489_sample_completed_] 
          $T[phi_stmt_489_update_start_] 
          $T[phi_stmt_489_update_completed_] 
          $T[phi_stmt_489_sample_start__ps] 
          phi_stmt_489_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_489_sample_completed__ps] 
          phi_stmt_489_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_489_update_start__ps] 
          phi_stmt_489_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_489_update_completed__ps] 
          phi_stmt_489_update_completed_ <-& (phi_stmt_489_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_489_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_489_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_489_update_start_)
          $T[phi_stmt_489_loopback_trigger] 
          phi_stmt_489_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_489_loopback_sample_req] 
          $T[phi_stmt_489_loopback_sample_req_ps] 
          phi_stmt_489_loopback_sample_req <-& (phi_stmt_489_loopback_sample_req_ps)
          phi_stmt_489_loopback_sample_req &-> ($null)
          $T[phi_stmt_489_entry_trigger] 
          phi_stmt_489_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_489_entry_sample_req] 
          $T[phi_stmt_489_entry_sample_req_ps] 
          phi_stmt_489_entry_sample_req <-& (phi_stmt_489_entry_sample_req_ps)
          phi_stmt_489_entry_sample_req &-> ($null)
          phi_stmt_489_update_start_ o<-& (phi_stmt_489_update_completed_ 0)
          phi_stmt_489_sample_start_ o<-& (phi_stmt_489_sample_completed_ 1)
          $T[phi_stmt_489_merged_reqs] 
          $T[phi_stmt_489_phi_mux_ack] 
          $T[phi_stmt_489_phi_mux_ack_ps] 
          phi_stmt_489_phi_mux_ack_ps <-& (phi_stmt_489_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_489_update_completed_)
          $T[type_cast_492_sample_start__ps] 
          $T[type_cast_492_sample_completed__ps] 
          $T[type_cast_492_update_start__ps] 
          $T[type_cast_492_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_492_sample_start_] 
          $T[type_cast_492_sample_completed_] 
          type_cast_492_sample_completed_ <-& (type_cast_492_sample_start_)
          $T[type_cast_492_update_start_] 
          $T [type_cast_492_update_completed_] $delay 
          type_cast_492_update_completed_ <-& (type_cast_492_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_492_sample_start_ <-& (type_cast_492_sample_start__ps)
          type_cast_492_update_start_ <-& (type_cast_492_update_start__ps)
          // Phi complete dependency.
          type_cast_492_sample_completed__ps <-& (type_cast_492_sample_completed_)
          type_cast_492_update_completed__ps <-& (type_cast_492_update_completed_)
          $T[R_nI_493_sample_start__ps] 
          $T[R_nI_493_sample_completed__ps] 
          $T[R_nI_493_update_start__ps] 
          $T[R_nI_493_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nI_493_sample_start_] 
          $T[R_nI_493_sample_completed_] 
          $T[R_nI_493_update_start_] 
          $T[R_nI_493_update_completed_] 
          ;;[R_nI_493_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nI_493_sample_start_ &-> (R_nI_493_Sample)
          R_nI_493_sample_completed_ <-& (R_nI_493_Sample)
          ;;[R_nI_493_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nI_493_update_start_ &-> (R_nI_493_Update)
          R_nI_493_update_completed_ <-& (R_nI_493_Update)
          // RAW reenables for nI
          // Phi start dependency for implicit/constant alternative.
          R_nI_493_sample_start_ <-& (R_nI_493_sample_start__ps)
          R_nI_493_update_start_ <-& (R_nI_493_update_start__ps)
          // Phi complete dependency.
          R_nI_493_sample_completed__ps <-& (R_nI_493_sample_completed_)
          R_nI_493_update_completed__ps <-& (R_nI_493_update_completed_)
          $phisequencer [ phi_stmt_489_phi_seq] : 
          phi_stmt_489_entry_trigger type_cast_492_sample_start__ps type_cast_492_sample_completed__ps type_cast_492_update_start__ps type_cast_492_update_completed__ps phi_stmt_489_loopback_trigger R_nI_493_sample_start__ps R_nI_493_sample_completed__ps R_nI_493_update_start__ps R_nI_493_update_completed__ps :
          phi_stmt_489_sample_start__ps phi_stmt_489_sample_completed__ps phi_stmt_489_update_start__ps phi_stmt_489_update_completed__ps :
          phi_stmt_489_entry_sample_req_ps phi_stmt_489_loopback_sample_req_ps : 
          phi_stmt_489_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_489
          // start: WAR dependencies for I_idx
          // done: WAR dependencies for I_idx
          // start:  			$volatile I_idx := ( $slice I 1 0 )  $buffering 1
          //  file .Aa/mvp.opt.aa, line 200
          // volatile! 
          // Source expression
          // ( $slice I 1 0 ) 
          // I
          // Target expression
          // (as target) I_idx
          // start: WAR dependencies for I_idx
          // done: WAR dependencies for I_idx
          // end:  			$volatile I_idx := ( $slice I 1 0 )  $buffering 1
          // start: WAR dependencies for Ir
          // done: WAR dependencies for Ir
          // start:  			$volatile Ir := ( $slice I 7 2 )  $buffering 1
          //  file .Aa/mvp.opt.aa, line 201
          // volatile! 
          // Source expression
          // ( $slice I 7 2 ) 
          // I
          // Target expression
          // (as target) Ir
          // start: WAR dependencies for Ir
          // done: WAR dependencies for Ir
          // end:  			$volatile Ir := ( $slice I 7 2 )  $buffering 1
          // start:  			temp_val := in_data $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 202
          // Source expression
          // in_data
          $T[RPIPE_in_data_504_sample_start_] 
          $T[RPIPE_in_data_504_sample_completed_] 
          $T[RPIPE_in_data_504_update_start_] 
          $T[RPIPE_in_data_504_update_completed_] 
          ;;[RPIPE_in_data_504_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_in_data_504_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_in_data_504_sample_start_ &-> (RPIPE_in_data_504_Sample)
          RPIPE_in_data_504_sample_completed_ <-& (RPIPE_in_data_504_Sample)
          RPIPE_in_data_504_update_start_ <-& (RPIPE_in_data_504_sample_completed_)
          RPIPE_in_data_504_update_start_ &-> (RPIPE_in_data_504_Update)
          RPIPE_in_data_504_update_completed_ <-& (RPIPE_in_data_504_Update)
          RPIPE_in_data_504_sample_start_ o<-& (RPIPE_in_data_504_update_completed_ 0)
          // Target expression
          // (as target) temp_val
          // start: WAR dependencies for temp_val
          // done: WAR dependencies for temp_val
          // end:  			temp_val := in_data $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for I_idx_0
          // done: WAR dependencies for I_idx_0
          // start:  			$volatile I_idx_0 := (I_idx == 0 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 203
          // volatile! 
          // Source expression
          // (I_idx == 0 )
          // I_idx
          // Target expression
          // (as target) I_idx_0
          // start: WAR dependencies for I_idx_0
          // done: WAR dependencies for I_idx_0
          // end:  			$volatile I_idx_0 := (I_idx == 0 ) $buffering 1
          // start: WAR dependencies for I_idx_1
          // done: WAR dependencies for I_idx_1
          // start:  			$volatile I_idx_1 := (I_idx == 1 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 204
          // volatile! 
          // Source expression
          // (I_idx == 1 )
          // I_idx
          // Target expression
          // (as target) I_idx_1
          // start: WAR dependencies for I_idx_1
          // done: WAR dependencies for I_idx_1
          // end:  			$volatile I_idx_1 := (I_idx == 1 ) $buffering 1
          // start: WAR dependencies for I_idx_2
          // done: WAR dependencies for I_idx_2
          // start:  			$volatile I_idx_2 := (I_idx == 2 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 205
          // volatile! 
          // Source expression
          // (I_idx == 2 )
          // I_idx
          // Target expression
          // (as target) I_idx_2
          // start: WAR dependencies for I_idx_2
          // done: WAR dependencies for I_idx_2
          // end:  			$volatile I_idx_2 := (I_idx == 2 ) $buffering 1
          // start: WAR dependencies for I_idx_3
          // done: WAR dependencies for I_idx_3
          // start:  			$volatile I_idx_3 := (I_idx == 3 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 206
          // volatile! 
          // Source expression
          // (I_idx == 3 )
          // I_idx
          // Target expression
          // (as target) I_idx_3
          // start: WAR dependencies for I_idx_3
          // done: WAR dependencies for I_idx_3
          // end:  			$volatile I_idx_3 := (I_idx == 3 ) $buffering 1
          // start:  			$guard (I_idx_0) x_0[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 207
          // Guard expression 
          // I_idx_0
          // Source expression
          // temp_val
          // Target expression
          // x_0[Ir]
          $T[array_obj_ref_528_sample_start_] 
          $T[array_obj_ref_528_sample_completed_] 
          $T[array_obj_ref_528_update_start_] 
          $T[array_obj_ref_528_update_completed_] 
          $T[array_obj_ref_528_word_address_calculated] 
          $T[array_obj_ref_528_root_address_calculated] 
          $T[array_obj_ref_528_offset_calculated] 
          $T[array_obj_ref_528_index_resized_0] 
          $T[array_obj_ref_528_index_scaled_0] 
          $T[array_obj_ref_528_index_computed_0] 
          // Ir
          // start: Forward dependencies from Ir to transition array_obj_ref_528_index_computed_0
          array_obj_ref_528_index_computed_0 <-& (phi_stmt_489_update_completed_)
          // done: Forward dependencies from Ir to transition array_obj_ref_528_index_computed_0
          ;;[array_obj_ref_528_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_528_index_computed_0 &-> (array_obj_ref_528_index_resize_0)
          array_obj_ref_528_index_resized_0 <-& (array_obj_ref_528_index_resize_0)
          ;;[array_obj_ref_528_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_528_index_resized_0 &-> (array_obj_ref_528_index_scale_0)
          array_obj_ref_528_index_scaled_0 <-& (array_obj_ref_528_index_scale_0)
          ;;[array_obj_ref_528_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_528_index_scaled_0 &-> (array_obj_ref_528_final_index_sum_regn)
          array_obj_ref_528_offset_calculated <-& (array_obj_ref_528_final_index_sum_regn)
          ;;[array_obj_ref_528_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_528_offset_calculated &-> (array_obj_ref_528_base_plus_offset)
          array_obj_ref_528_root_address_calculated <-& (array_obj_ref_528_base_plus_offset)
          ;;[array_obj_ref_528_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_528_root_address_calculated &-> (array_obj_ref_528_word_addrgen)
          array_obj_ref_528_word_address_calculated <-& (array_obj_ref_528_word_addrgen)
          ;;[array_obj_ref_528_Sample] 
          {
            ;;[array_obj_ref_528_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_528_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_528_sample_start_ <-& (array_obj_ref_528_word_address_calculated)
          // reenable-joins
          phi_stmt_489_update_start_ o<-& (array_obj_ref_528_sample_completed_ 0)
          array_obj_ref_528_sample_start_ &-> (array_obj_ref_528_Sample)
          array_obj_ref_528_sample_completed_ <-& (array_obj_ref_528_Sample)
          array_obj_ref_528_sample_completed_ &-> ($null)
          array_obj_ref_528_update_start_ &-> (array_obj_ref_528_Update)
          array_obj_ref_528_update_completed_ <-& (array_obj_ref_528_Update)
          // Guard dependency for expression array_obj_ref_528 with guard R_I_idx_0_526
          array_obj_ref_528_sample_start_ <-& (phi_stmt_489_update_completed_)
          // RAW reenables for I_idx_0
          phi_stmt_489_update_start_ o<-& (array_obj_ref_528_sample_completed_ 0)
          // self-release: 
          array_obj_ref_528_sample_start_ o<-& (array_obj_ref_528_sample_completed_ 1)
          $null &-> (array_obj_ref_528_update_start_)
          array_obj_ref_528_update_start_ o<-& (array_obj_ref_528_update_completed_ 0)
          // start: Forward dependencies from temp_val to transition array_obj_ref_528_sample_start_
          array_obj_ref_528_sample_start_ <-& (RPIPE_in_data_504_update_completed_)
          // done: Forward dependencies from temp_val to transition array_obj_ref_528_sample_start_
          // RAW reenables for temp_val
          RPIPE_in_data_504_update_start_ o<-& (array_obj_ref_528_sample_completed_ 0)
          // end:  			$guard (I_idx_0) x_0[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          // start:  			$guard (I_idx_1) x_1[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 209
          // Guard expression 
          // I_idx_1
          // Source expression
          // temp_val
          // Target expression
          // x_1[Ir]
          $T[array_obj_ref_539_sample_start_] 
          $T[array_obj_ref_539_sample_completed_] 
          $T[array_obj_ref_539_update_start_] 
          $T[array_obj_ref_539_update_completed_] 
          $T[array_obj_ref_539_word_address_calculated] 
          $T[array_obj_ref_539_root_address_calculated] 
          $T[array_obj_ref_539_offset_calculated] 
          $T[array_obj_ref_539_index_resized_0] 
          $T[array_obj_ref_539_index_scaled_0] 
          $T[array_obj_ref_539_index_computed_0] 
          // Ir
          // start: Forward dependencies from Ir to transition array_obj_ref_539_index_computed_0
          array_obj_ref_539_index_computed_0 <-& (phi_stmt_489_update_completed_)
          // done: Forward dependencies from Ir to transition array_obj_ref_539_index_computed_0
          ;;[array_obj_ref_539_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_539_index_computed_0 &-> (array_obj_ref_539_index_resize_0)
          array_obj_ref_539_index_resized_0 <-& (array_obj_ref_539_index_resize_0)
          ;;[array_obj_ref_539_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_539_index_resized_0 &-> (array_obj_ref_539_index_scale_0)
          array_obj_ref_539_index_scaled_0 <-& (array_obj_ref_539_index_scale_0)
          ;;[array_obj_ref_539_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_539_index_scaled_0 &-> (array_obj_ref_539_final_index_sum_regn)
          array_obj_ref_539_offset_calculated <-& (array_obj_ref_539_final_index_sum_regn)
          ;;[array_obj_ref_539_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_539_offset_calculated &-> (array_obj_ref_539_base_plus_offset)
          array_obj_ref_539_root_address_calculated <-& (array_obj_ref_539_base_plus_offset)
          ;;[array_obj_ref_539_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_539_root_address_calculated &-> (array_obj_ref_539_word_addrgen)
          array_obj_ref_539_word_address_calculated <-& (array_obj_ref_539_word_addrgen)
          ;;[array_obj_ref_539_Sample] 
          {
            ;;[array_obj_ref_539_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_539_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_539_sample_start_ <-& (array_obj_ref_539_word_address_calculated)
          // reenable-joins
          phi_stmt_489_update_start_ o<-& (array_obj_ref_539_sample_completed_ 0)
          array_obj_ref_539_sample_start_ &-> (array_obj_ref_539_Sample)
          array_obj_ref_539_sample_completed_ <-& (array_obj_ref_539_Sample)
          array_obj_ref_539_sample_completed_ &-> ($null)
          array_obj_ref_539_update_start_ &-> (array_obj_ref_539_Update)
          array_obj_ref_539_update_completed_ <-& (array_obj_ref_539_Update)
          // Guard dependency for expression array_obj_ref_539 with guard R_I_idx_1_537
          array_obj_ref_539_sample_start_ <-& (phi_stmt_489_update_completed_)
          // RAW reenables for I_idx_1
          phi_stmt_489_update_start_ o<-& (array_obj_ref_539_sample_completed_ 0)
          // self-release: 
          array_obj_ref_539_sample_start_ o<-& (array_obj_ref_539_sample_completed_ 1)
          $null &-> (array_obj_ref_539_update_start_)
          array_obj_ref_539_update_start_ o<-& (array_obj_ref_539_update_completed_ 0)
          // start: Forward dependencies from temp_val to transition array_obj_ref_539_sample_start_
          array_obj_ref_539_sample_start_ <-& (RPIPE_in_data_504_update_completed_)
          // done: Forward dependencies from temp_val to transition array_obj_ref_539_sample_start_
          // RAW reenables for temp_val
          RPIPE_in_data_504_update_start_ o<-& (array_obj_ref_539_sample_completed_ 0)
          // end:  			$guard (I_idx_1) x_1[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          // start:  			$guard (I_idx_2) x_2[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 211
          // Guard expression 
          // I_idx_2
          // Source expression
          // temp_val
          // Target expression
          // x_2[Ir]
          $T[array_obj_ref_550_sample_start_] 
          $T[array_obj_ref_550_sample_completed_] 
          $T[array_obj_ref_550_update_start_] 
          $T[array_obj_ref_550_update_completed_] 
          $T[array_obj_ref_550_word_address_calculated] 
          $T[array_obj_ref_550_root_address_calculated] 
          $T[array_obj_ref_550_offset_calculated] 
          $T[array_obj_ref_550_index_resized_0] 
          $T[array_obj_ref_550_index_scaled_0] 
          $T[array_obj_ref_550_index_computed_0] 
          // Ir
          // start: Forward dependencies from Ir to transition array_obj_ref_550_index_computed_0
          array_obj_ref_550_index_computed_0 <-& (phi_stmt_489_update_completed_)
          // done: Forward dependencies from Ir to transition array_obj_ref_550_index_computed_0
          ;;[array_obj_ref_550_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_550_index_computed_0 &-> (array_obj_ref_550_index_resize_0)
          array_obj_ref_550_index_resized_0 <-& (array_obj_ref_550_index_resize_0)
          ;;[array_obj_ref_550_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_550_index_resized_0 &-> (array_obj_ref_550_index_scale_0)
          array_obj_ref_550_index_scaled_0 <-& (array_obj_ref_550_index_scale_0)
          ;;[array_obj_ref_550_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_550_index_scaled_0 &-> (array_obj_ref_550_final_index_sum_regn)
          array_obj_ref_550_offset_calculated <-& (array_obj_ref_550_final_index_sum_regn)
          ;;[array_obj_ref_550_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_550_offset_calculated &-> (array_obj_ref_550_base_plus_offset)
          array_obj_ref_550_root_address_calculated <-& (array_obj_ref_550_base_plus_offset)
          ;;[array_obj_ref_550_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_550_root_address_calculated &-> (array_obj_ref_550_word_addrgen)
          array_obj_ref_550_word_address_calculated <-& (array_obj_ref_550_word_addrgen)
          ;;[array_obj_ref_550_Sample] 
          {
            ;;[array_obj_ref_550_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_550_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_550_sample_start_ <-& (array_obj_ref_550_word_address_calculated)
          // reenable-joins
          phi_stmt_489_update_start_ o<-& (array_obj_ref_550_sample_completed_ 0)
          array_obj_ref_550_sample_start_ &-> (array_obj_ref_550_Sample)
          array_obj_ref_550_sample_completed_ <-& (array_obj_ref_550_Sample)
          array_obj_ref_550_sample_completed_ &-> ($null)
          array_obj_ref_550_update_start_ &-> (array_obj_ref_550_Update)
          array_obj_ref_550_update_completed_ <-& (array_obj_ref_550_Update)
          // Guard dependency for expression array_obj_ref_550 with guard R_I_idx_2_548
          array_obj_ref_550_sample_start_ <-& (phi_stmt_489_update_completed_)
          // RAW reenables for I_idx_2
          phi_stmt_489_update_start_ o<-& (array_obj_ref_550_sample_completed_ 0)
          // self-release: 
          array_obj_ref_550_sample_start_ o<-& (array_obj_ref_550_sample_completed_ 1)
          $null &-> (array_obj_ref_550_update_start_)
          array_obj_ref_550_update_start_ o<-& (array_obj_ref_550_update_completed_ 0)
          // start: Forward dependencies from temp_val to transition array_obj_ref_550_sample_start_
          array_obj_ref_550_sample_start_ <-& (RPIPE_in_data_504_update_completed_)
          // done: Forward dependencies from temp_val to transition array_obj_ref_550_sample_start_
          // RAW reenables for temp_val
          RPIPE_in_data_504_update_start_ o<-& (array_obj_ref_550_sample_completed_ 0)
          // end:  			$guard (I_idx_2) x_2[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          // start:  			$guard (I_idx_3) x_3[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 213
          // Guard expression 
          // I_idx_3
          // Source expression
          // temp_val
          // Target expression
          // x_3[Ir]
          $T[array_obj_ref_561_sample_start_] 
          $T[array_obj_ref_561_sample_completed_] 
          $T[array_obj_ref_561_update_start_] 
          $T[array_obj_ref_561_update_completed_] 
          $T[array_obj_ref_561_word_address_calculated] 
          $T[array_obj_ref_561_root_address_calculated] 
          $T[array_obj_ref_561_offset_calculated] 
          $T[array_obj_ref_561_index_resized_0] 
          $T[array_obj_ref_561_index_scaled_0] 
          $T[array_obj_ref_561_index_computed_0] 
          // Ir
          // start: Forward dependencies from Ir to transition array_obj_ref_561_index_computed_0
          array_obj_ref_561_index_computed_0 <-& (phi_stmt_489_update_completed_)
          // done: Forward dependencies from Ir to transition array_obj_ref_561_index_computed_0
          ;;[array_obj_ref_561_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_561_index_computed_0 &-> (array_obj_ref_561_index_resize_0)
          array_obj_ref_561_index_resized_0 <-& (array_obj_ref_561_index_resize_0)
          ;;[array_obj_ref_561_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_561_index_resized_0 &-> (array_obj_ref_561_index_scale_0)
          array_obj_ref_561_index_scaled_0 <-& (array_obj_ref_561_index_scale_0)
          ;;[array_obj_ref_561_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_561_index_scaled_0 &-> (array_obj_ref_561_final_index_sum_regn)
          array_obj_ref_561_offset_calculated <-& (array_obj_ref_561_final_index_sum_regn)
          ;;[array_obj_ref_561_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_561_offset_calculated &-> (array_obj_ref_561_base_plus_offset)
          array_obj_ref_561_root_address_calculated <-& (array_obj_ref_561_base_plus_offset)
          ;;[array_obj_ref_561_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_561_root_address_calculated &-> (array_obj_ref_561_word_addrgen)
          array_obj_ref_561_word_address_calculated <-& (array_obj_ref_561_word_addrgen)
          ;;[array_obj_ref_561_Sample] 
          {
            ;;[array_obj_ref_561_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_561_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_561_sample_start_ <-& (array_obj_ref_561_word_address_calculated)
          // reenable-joins
          phi_stmt_489_update_start_ o<-& (array_obj_ref_561_sample_completed_ 0)
          array_obj_ref_561_sample_start_ &-> (array_obj_ref_561_Sample)
          array_obj_ref_561_sample_completed_ <-& (array_obj_ref_561_Sample)
          array_obj_ref_561_sample_completed_ &-> ($null)
          array_obj_ref_561_update_start_ &-> (array_obj_ref_561_Update)
          array_obj_ref_561_update_completed_ <-& (array_obj_ref_561_Update)
          // Guard dependency for expression array_obj_ref_561 with guard R_I_idx_3_559
          array_obj_ref_561_sample_start_ <-& (phi_stmt_489_update_completed_)
          // RAW reenables for I_idx_3
          phi_stmt_489_update_start_ o<-& (array_obj_ref_561_sample_completed_ 0)
          // self-release: 
          array_obj_ref_561_sample_start_ o<-& (array_obj_ref_561_sample_completed_ 1)
          $null &-> (array_obj_ref_561_update_start_)
          array_obj_ref_561_update_start_ o<-& (array_obj_ref_561_update_completed_ 0)
          // start: Forward dependencies from temp_val to transition array_obj_ref_561_sample_start_
          array_obj_ref_561_sample_start_ <-& (RPIPE_in_data_504_update_completed_)
          // done: Forward dependencies from temp_val to transition array_obj_ref_561_sample_start_
          // RAW reenables for temp_val
          RPIPE_in_data_504_update_start_ o<-& (array_obj_ref_561_sample_completed_ 0)
          // end:  			$guard (I_idx_3) x_3[Ir] := temp_val $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for nI
          // WAR dependency: Read: nI before Write: 			$volatile nI := (I + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nI
          // start:  			$volatile nI := (I + 1 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 215
          // volatile! 
          // Source expression
          // (I + 1 )
          // I
          // Target expression
          // (as target) nI
          // start: WAR dependencies for nI
          // WAR dependency: Read: nI before Write: 			$volatile nI := (I + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nI
          // end:  			$volatile nI := (I + 1 ) $buffering 1
          // (nI < 32 )
          // nI
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (nI < 32 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_489_update_completed_)
          // done: Forward dependencies from (nI < 32 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_5
          //  array_obj_ref_539 store
          // reenable across ring for memory space memory_space_5
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_4
          //  array_obj_ref_528 store
          // reenable across ring for memory space memory_space_4
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_7
          //  array_obj_ref_561 store
          // reenable across ring for memory space memory_space_7
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_6
          //  array_obj_ref_550 store
          // reenable across ring for memory space memory_space_6
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe in_data
          // read-dependencies for pipe in_data
          // write-dependencies for pipe in_data
          // signal write dependencies for in_data
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_487__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_487_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_487__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_487_loop_body : condition_evaluated
        $bind do_while_stmt_487__entry__  => do_while_stmt_487_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_487_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_487__exit__)
      }
      do_while_stmt_487__entry__ |-> (do_while_stmt_487)
      do_while_stmt_487__exit__ <-| (do_while_stmt_487)
      do_while_stmt_487__entry__ <-| (branch_block_stmt_486__entry__)
      do_while_stmt_487__exit__ |-> (branch_block_stmt_486__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %readVector%loop%
    //  file .Aa/mvp.opt.aa, line 196
    // constant-object-declarations for block %readVector%loop
    //  file .Aa/mvp.opt.aa, line 192
    // constant-object-declarations for block %readVector
    //  file .Aa/mvp.opt.aa, line 187
    // constant-declarations for block %readVector%loop
    //  file .Aa/mvp.opt.aa, line 192
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 194
    // 32 
    $constant $W[konst_577_wire_constant] : $int<8> := _b00100000// 32
    // constant-declarations for block %readVector%loop%
    //  file .Aa/mvp.opt.aa, line 196
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 197
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_492_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_508_wire_constant] : $int<2> := _b00// 0
    // 1 
    $constant $W[konst_513_wire_constant] : $int<2> := _b01// 1
    // 2 
    $constant $W[konst_518_wire_constant] : $int<2> := _b10// 2
    // 3 
    $constant $W[konst_523_wire_constant] : $int<2> := _b11// 3
    // x_0[Ir]
    $constant $W[array_obj_ref_528_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_528_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_528_word_offset_0] : $int<3> := _b000// 0
    // x_1[Ir]
    $constant $W[array_obj_ref_539_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_539_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_539_word_offset_0] : $int<3> := _b000// 0
    // x_2[Ir]
    $constant $W[array_obj_ref_550_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_550_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_550_word_offset_0] : $int<3> := _b000// 0
    // x_3[Ir]
    $constant $W[array_obj_ref_561_resized_base_address] : $int<3> := _b000// 0
    $constant $W[array_obj_ref_561_offset_scale_factor_0] : $int<3> := _b001// 1
    $constant $W[array_obj_ref_561_word_offset_0] : $int<3> := _b000// 0
    // 1 
    $constant $W[konst_572_wire_constant] : $int<8> := _b00000001// 1
    // block %readVector%loop
    //  file .Aa/mvp.opt.aa, line 192
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 194
    // (nI < 32 )
    $intermediate $W[ULT_u8_u1_578_wire] : $int<1>
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 196
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 197
    $W[nI_574_493_buffered] : $int<8>
    // I
    $W[I_489] : $int<8>
    // 			$volatile I_idx := ( $slice I 1 0 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 200
    // I_idx
    $W[I_idx_498] : $int<2>
    // 			$volatile Ir := ( $slice I 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 201
    // Ir
    $W[Ir_502] : $int<6>
    // 			temp_val := in_data $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 202
    // temp_val
    $W[temp_val_505] : $int<32>
    // 			$volatile I_idx_0 := (I_idx == 0 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 203
    // I_idx_0
    $W[I_idx_0_510] : $int<1>
    // 			$volatile I_idx_1 := (I_idx == 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 204
    // I_idx_1
    $W[I_idx_1_515] : $int<1>
    // 			$volatile I_idx_2 := (I_idx == 2 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 205
    // I_idx_2
    $W[I_idx_2_520] : $int<1>
    // 			$volatile I_idx_3 := (I_idx == 3 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 206
    // I_idx_3
    $W[I_idx_3_525] : $int<1>
    // 			$guard (I_idx_0) x_0[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 207
    // x_0[Ir]
    $intermediate $W[R_Ir_527_resized] : $int<3>
    $intermediate $W[R_Ir_527_scaled] : $int<3>
    $intermediate $W[array_obj_ref_528_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_528_root_address] : $int<3>
    $W[array_obj_ref_528_word_address_0] : $pointer<memory_space_4>
    $W[array_obj_ref_528_data_0] : $int<32>
    // 			$guard (I_idx_1) x_1[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 209
    // x_1[Ir]
    $intermediate $W[R_Ir_538_resized] : $int<3>
    $intermediate $W[R_Ir_538_scaled] : $int<3>
    $intermediate $W[array_obj_ref_539_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_539_root_address] : $int<3>
    $W[array_obj_ref_539_word_address_0] : $pointer<memory_space_5>
    $W[array_obj_ref_539_data_0] : $int<32>
    // 			$guard (I_idx_2) x_2[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 211
    // x_2[Ir]
    $intermediate $W[R_Ir_549_resized] : $int<3>
    $intermediate $W[R_Ir_549_scaled] : $int<3>
    $intermediate $W[array_obj_ref_550_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_550_root_address] : $int<3>
    $W[array_obj_ref_550_word_address_0] : $pointer<memory_space_6>
    $W[array_obj_ref_550_data_0] : $int<32>
    // 			$guard (I_idx_3) x_3[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 213
    // x_3[Ir]
    $intermediate $W[R_Ir_560_resized] : $int<3>
    $intermediate $W[R_Ir_560_scaled] : $int<3>
    $intermediate $W[array_obj_ref_561_final_offset] : $int<3>
    $intermediate $W[array_obj_ref_561_root_address] : $int<3>
    $W[array_obj_ref_561_word_address_0] : $pointer<memory_space_7>
    $W[array_obj_ref_561_data_0] : $int<32>
    // 			$volatile nI := (I + 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 215
    // nI
    $W[nI_574] : $int<8>
    // datapath-instances for block %readVector%loop
    //  file .Aa/mvp.opt.aa, line 192
    // datapath-instances for do-while  
    //  file .Aa/mvp.opt.aa, line 194
    // (nI < 32 )
    <[ULT_u8_u1_578_inst] (nI_574 konst_577_wire_constant) (ULT_u8_u1_578_wire)   $flowthrough 
    $delay ULT_u8_u1_578_inst 0
    ==0? [do_while_stmt_487_branch] (ULT_u8_u1_578_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 196
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 197
    # := [nI_574_493_buf] (nI_574) (nI_574_493_buffered)     $fullrate
    $buffering $out nI_574_493_buf nI_574_493_buffered  1
    # $phi [phi_stmt_489] (type_cast_492_wire_constant nI_574_493_buffered) ( I_489 ) $fullrate
    // $buffering  $out phi_stmt_489 I_489 2
    // 			$volatile I_idx := ( $slice I 1 0 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 200
    // ( $slice I 1 0 ) 
    [:] [slice_497_inst] (I_489 1 0) (I_idx_498)  $flowthrough
    $delay slice_497_inst 0
    // 			$volatile Ir := ( $slice I 7 2 )  $buffering 1
    //  file .Aa/mvp.opt.aa, line 201
    // ( $slice I 7 2 ) 
    [:] [slice_501_inst] (I_489 7 2) (Ir_502)  $flowthrough
    $delay slice_501_inst 0
    // 			temp_val := in_data $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 202
    // in_data
    $ioport $in [RPIPE_in_data_504_inst] (in_data) (temp_val_505)  $fullrate 
    $buffering $out RPIPE_in_data_504_inst temp_val_505 1
    // 			$volatile I_idx_0 := (I_idx == 0 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 203
    // (I_idx == 0 )
    ==[EQ_u2_u1_509_inst] (I_idx_498 konst_508_wire_constant) (I_idx_0_510)   $flowthrough 
    $delay EQ_u2_u1_509_inst 0
    // 			$volatile I_idx_1 := (I_idx == 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 204
    // (I_idx == 1 )
    ==[EQ_u2_u1_514_inst] (I_idx_498 konst_513_wire_constant) (I_idx_1_515)   $flowthrough 
    $delay EQ_u2_u1_514_inst 0
    // 			$volatile I_idx_2 := (I_idx == 2 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 205
    // (I_idx == 2 )
    ==[EQ_u2_u1_519_inst] (I_idx_498 konst_518_wire_constant) (I_idx_2_520)   $flowthrough 
    $delay EQ_u2_u1_519_inst 0
    // 			$volatile I_idx_3 := (I_idx == 3 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 206
    // (I_idx == 3 )
    ==[EQ_u2_u1_524_inst] (I_idx_498 konst_523_wire_constant) (I_idx_3_525)   $flowthrough 
    $delay EQ_u2_u1_524_inst 0
    // 			$guard (I_idx_0) x_0[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 207
    // x_0[Ir]
    &/ [array_obj_ref_528_index_0_resize] (Ir_502) (R_Ir_527_resized) $guard ( I_idx_0_510 ) 
    $flowthrough 
    &/ [array_obj_ref_528_index_0_rename] (R_Ir_527_resized) (R_Ir_527_scaled) $guard ( I_idx_0_510 ) 
    $flowthrough 
    &/ [array_obj_ref_528_index_offset] (R_Ir_527_scaled) (array_obj_ref_528_final_offset) $guard ( I_idx_0_510 ) 
    $flowthrough 
    &/ [array_obj_ref_528_root_address_inst] (array_obj_ref_528_final_offset) (array_obj_ref_528_root_address) $guard ( I_idx_0_510 ) 
    $flowthrough 
    &/ [array_obj_ref_528_addr_0] (array_obj_ref_528_root_address) (array_obj_ref_528_word_address_0) $guard ( I_idx_0_510 ) 
    $flowthrough 
    $store [array_obj_ref_528_store_0] $to memory_space_4 (array_obj_ref_528_word_address_0 array_obj_ref_528_data_0) $guard ( I_idx_0_510 ) 
    $buffering  $in array_obj_ref_528_store_0 array_obj_ref_528_word_address_0 2
    $buffering  $in array_obj_ref_528_store_0 array_obj_ref_528_data_0 2
    $delay array_obj_ref_528_store_0 4
    &/ [array_obj_ref_528_gather_scatter] (temp_val_505) (array_obj_ref_528_data_0) $guard ( I_idx_0_510 ) 
    $flowthrough 
    // 			$guard (I_idx_1) x_1[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 209
    // x_1[Ir]
    &/ [array_obj_ref_539_index_0_resize] (Ir_502) (R_Ir_538_resized) $guard ( I_idx_1_515 ) 
    $flowthrough 
    &/ [array_obj_ref_539_index_0_rename] (R_Ir_538_resized) (R_Ir_538_scaled) $guard ( I_idx_1_515 ) 
    $flowthrough 
    &/ [array_obj_ref_539_index_offset] (R_Ir_538_scaled) (array_obj_ref_539_final_offset) $guard ( I_idx_1_515 ) 
    $flowthrough 
    &/ [array_obj_ref_539_root_address_inst] (array_obj_ref_539_final_offset) (array_obj_ref_539_root_address) $guard ( I_idx_1_515 ) 
    $flowthrough 
    &/ [array_obj_ref_539_addr_0] (array_obj_ref_539_root_address) (array_obj_ref_539_word_address_0) $guard ( I_idx_1_515 ) 
    $flowthrough 
    $store [array_obj_ref_539_store_0] $to memory_space_5 (array_obj_ref_539_word_address_0 array_obj_ref_539_data_0) $guard ( I_idx_1_515 ) 
    $buffering  $in array_obj_ref_539_store_0 array_obj_ref_539_word_address_0 2
    $buffering  $in array_obj_ref_539_store_0 array_obj_ref_539_data_0 2
    $delay array_obj_ref_539_store_0 4
    &/ [array_obj_ref_539_gather_scatter] (temp_val_505) (array_obj_ref_539_data_0) $guard ( I_idx_1_515 ) 
    $flowthrough 
    // 			$guard (I_idx_2) x_2[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 211
    // x_2[Ir]
    &/ [array_obj_ref_550_index_0_resize] (Ir_502) (R_Ir_549_resized) $guard ( I_idx_2_520 ) 
    $flowthrough 
    &/ [array_obj_ref_550_index_0_rename] (R_Ir_549_resized) (R_Ir_549_scaled) $guard ( I_idx_2_520 ) 
    $flowthrough 
    &/ [array_obj_ref_550_index_offset] (R_Ir_549_scaled) (array_obj_ref_550_final_offset) $guard ( I_idx_2_520 ) 
    $flowthrough 
    &/ [array_obj_ref_550_root_address_inst] (array_obj_ref_550_final_offset) (array_obj_ref_550_root_address) $guard ( I_idx_2_520 ) 
    $flowthrough 
    &/ [array_obj_ref_550_addr_0] (array_obj_ref_550_root_address) (array_obj_ref_550_word_address_0) $guard ( I_idx_2_520 ) 
    $flowthrough 
    $store [array_obj_ref_550_store_0] $to memory_space_6 (array_obj_ref_550_word_address_0 array_obj_ref_550_data_0) $guard ( I_idx_2_520 ) 
    $buffering  $in array_obj_ref_550_store_0 array_obj_ref_550_word_address_0 2
    $buffering  $in array_obj_ref_550_store_0 array_obj_ref_550_data_0 2
    $delay array_obj_ref_550_store_0 4
    &/ [array_obj_ref_550_gather_scatter] (temp_val_505) (array_obj_ref_550_data_0) $guard ( I_idx_2_520 ) 
    $flowthrough 
    // 			$guard (I_idx_3) x_3[Ir] := temp_val $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 213
    // x_3[Ir]
    &/ [array_obj_ref_561_index_0_resize] (Ir_502) (R_Ir_560_resized) $guard ( I_idx_3_525 ) 
    $flowthrough 
    &/ [array_obj_ref_561_index_0_rename] (R_Ir_560_resized) (R_Ir_560_scaled) $guard ( I_idx_3_525 ) 
    $flowthrough 
    &/ [array_obj_ref_561_index_offset] (R_Ir_560_scaled) (array_obj_ref_561_final_offset) $guard ( I_idx_3_525 ) 
    $flowthrough 
    &/ [array_obj_ref_561_root_address_inst] (array_obj_ref_561_final_offset) (array_obj_ref_561_root_address) $guard ( I_idx_3_525 ) 
    $flowthrough 
    &/ [array_obj_ref_561_addr_0] (array_obj_ref_561_root_address) (array_obj_ref_561_word_address_0) $guard ( I_idx_3_525 ) 
    $flowthrough 
    $store [array_obj_ref_561_store_0] $to memory_space_7 (array_obj_ref_561_word_address_0 array_obj_ref_561_data_0) $guard ( I_idx_3_525 ) 
    $buffering  $in array_obj_ref_561_store_0 array_obj_ref_561_word_address_0 2
    $buffering  $in array_obj_ref_561_store_0 array_obj_ref_561_data_0 2
    $delay array_obj_ref_561_store_0 4
    &/ [array_obj_ref_561_gather_scatter] (temp_val_505) (array_obj_ref_561_data_0) $guard ( I_idx_3_525 ) 
    $flowthrough 
    // 			$volatile nI := (I + 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 215
    // (I + 1 )
    +[ADD_u8_u8_573_inst] (I_489 konst_572_wire_constant) (nI_574)   $flowthrough 
    $delay ADD_u8_u8_573_inst 0
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_487
  //  file .Aa/mvp.opt.aa, line 194
  phi_stmt_489 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/phi_stmt_489_entry_sample_req branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/phi_stmt_489_loopback_sample_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/phi_stmt_489_phi_mux_ack)
  nI_574_493_buf <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/R_nI_493_Sample/req branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/R_nI_493_Update/req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/R_nI_493_Sample/ack branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/R_nI_493_Update/ack)
  // 			$volatile I_idx := ( $slice I 1 0 )  $buffering 1
  //  file .Aa/mvp.opt.aa, line 200
  // I
  // 			$volatile Ir := ( $slice I 7 2 )  $buffering 1
  //  file .Aa/mvp.opt.aa, line 201
  // I
  // 			temp_val := in_data $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 202
  // in_data
  RPIPE_in_data_504_inst <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/RPIPE_in_data_504_Sample/rr branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/RPIPE_in_data_504_Update/cr) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/RPIPE_in_data_504_Sample/ra branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/RPIPE_in_data_504_Update/ca)
  // 			$volatile I_idx_0 := (I_idx == 0 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 203
  // (I_idx == 0 )
  // I_idx
  // 			$volatile I_idx_1 := (I_idx == 1 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 204
  // (I_idx == 1 )
  // I_idx
  // 			$volatile I_idx_2 := (I_idx == 2 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 205
  // (I_idx == 2 )
  // I_idx
  // 			$volatile I_idx_3 := (I_idx == 3 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 206
  // (I_idx == 3 )
  // I_idx
  // 			$guard (I_idx_0) x_0[Ir] := temp_val $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 207
  // temp_val
  // Ir
  array_obj_ref_528_index_0_resize <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_index_resize_0/index_resize_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_index_resize_0/index_resize_ack)
  array_obj_ref_528_index_0_rename <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_index_scale_0/scale_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_index_scale_0/scale_rename_ack)
  array_obj_ref_528_index_offset <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_final_index_sum_regn/req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_final_index_sum_regn/ack)
  array_obj_ref_528_root_address_inst <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_base_plus_offset/sum_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_base_plus_offset/sum_rename_ack)
  array_obj_ref_528_addr_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_word_addrgen/root_register_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_word_addrgen/root_register_ack)
  array_obj_ref_528_gather_scatter <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Sample/array_obj_ref_528_Split/split_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Sample/array_obj_ref_528_Split/split_ack)
  array_obj_ref_528_store_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Sample/word_access_start/word_0/rr branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Update/word_access_complete/word_0/cr) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Sample/word_access_start/word_0/ra branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_528_Update/word_access_complete/word_0/ca)
  // 			$guard (I_idx_1) x_1[Ir] := temp_val $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 209
  // temp_val
  // Ir
  array_obj_ref_539_index_0_resize <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_index_resize_0/index_resize_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_index_resize_0/index_resize_ack)
  array_obj_ref_539_index_0_rename <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_index_scale_0/scale_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_index_scale_0/scale_rename_ack)
  array_obj_ref_539_index_offset <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_final_index_sum_regn/req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_final_index_sum_regn/ack)
  array_obj_ref_539_root_address_inst <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_base_plus_offset/sum_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_base_plus_offset/sum_rename_ack)
  array_obj_ref_539_addr_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_word_addrgen/root_register_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_word_addrgen/root_register_ack)
  array_obj_ref_539_gather_scatter <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Sample/array_obj_ref_539_Split/split_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Sample/array_obj_ref_539_Split/split_ack)
  array_obj_ref_539_store_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Sample/word_access_start/word_0/rr branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Update/word_access_complete/word_0/cr) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Sample/word_access_start/word_0/ra branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_539_Update/word_access_complete/word_0/ca)
  // 			$guard (I_idx_2) x_2[Ir] := temp_val $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 211
  // temp_val
  // Ir
  array_obj_ref_550_index_0_resize <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_index_resize_0/index_resize_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_index_resize_0/index_resize_ack)
  array_obj_ref_550_index_0_rename <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_index_scale_0/scale_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_index_scale_0/scale_rename_ack)
  array_obj_ref_550_index_offset <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_final_index_sum_regn/req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_final_index_sum_regn/ack)
  array_obj_ref_550_root_address_inst <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_base_plus_offset/sum_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_base_plus_offset/sum_rename_ack)
  array_obj_ref_550_addr_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_word_addrgen/root_register_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_word_addrgen/root_register_ack)
  array_obj_ref_550_gather_scatter <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Sample/array_obj_ref_550_Split/split_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Sample/array_obj_ref_550_Split/split_ack)
  array_obj_ref_550_store_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Sample/word_access_start/word_0/rr branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Update/word_access_complete/word_0/cr) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Sample/word_access_start/word_0/ra branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_550_Update/word_access_complete/word_0/ca)
  // 			$guard (I_idx_3) x_3[Ir] := temp_val $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 213
  // temp_val
  // Ir
  array_obj_ref_561_index_0_resize <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_index_resize_0/index_resize_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_index_resize_0/index_resize_ack)
  array_obj_ref_561_index_0_rename <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_index_scale_0/scale_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_index_scale_0/scale_rename_ack)
  array_obj_ref_561_index_offset <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_final_index_sum_regn/req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_final_index_sum_regn/ack)
  array_obj_ref_561_root_address_inst <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_base_plus_offset/sum_rename_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_base_plus_offset/sum_rename_ack)
  array_obj_ref_561_addr_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_word_addrgen/root_register_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_word_addrgen/root_register_ack)
  array_obj_ref_561_gather_scatter <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Sample/array_obj_ref_561_Split/split_req) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Sample/array_obj_ref_561_Split/split_ack)
  array_obj_ref_561_store_0 <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Sample/word_access_start/word_0/rr branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Update/word_access_complete/word_0/cr) (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Sample/word_access_start/word_0/ra branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/array_obj_ref_561_Update/word_access_complete/word_0/ca)
  // 			$volatile nI := (I + 1 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 215
  // (I + 1 )
  // I
  // (nI < 32 )
  // nI
  do_while_stmt_487_branch <=> (branch_block_stmt_486/do_while_stmt_487/do_while_stmt_487_loop_body/condition_evaluated) (branch_block_stmt_486/do_while_stmt_487/loop_exit/ack branch_block_stmt_486/do_while_stmt_487/loop_taken/ack)
}
$module [sendVector] 
{
  // pipe-declarations for block %sendVector
  //  file .Aa/mvp.opt.aa, line 219
  // pipe-declarations for block %sendVector%loop
  //  file .Aa/mvp.opt.aa, line 224
  // memory-space 8 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_582] // Branch Block  file .Aa/mvp.opt.aa, line 224
    {
      $P [branch_block_stmt_582__entry__]
      branch_block_stmt_582__entry__ <-| ($entry)
      $P [branch_block_stmt_582__exit__]
      branch_block_stmt_582__exit__ |-> ($exit)
      $P [do_while_stmt_583__entry__] 
      $P [do_while_stmt_583__exit__] 
      // do-while-statement  
      //  file .Aa/mvp.opt.aa, line 226
      <o> [do_while_stmt_583]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_583__entry__] 
        $P[do_while_stmt_583__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_583_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_585
          // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_585_sample_start_] 
          $T[phi_stmt_585_sample_completed_] 
          $T[phi_stmt_585_update_start_] 
          $T[phi_stmt_585_update_completed_] 
          $T[phi_stmt_585_sample_start__ps] 
          phi_stmt_585_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_585_sample_completed__ps] 
          phi_stmt_585_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_585_update_start__ps] 
          phi_stmt_585_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_585_update_completed__ps] 
          phi_stmt_585_update_completed_ <-& (phi_stmt_585_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_585_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_585_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_585_update_start_)
          $T[phi_stmt_585_loopback_trigger] 
          phi_stmt_585_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_585_loopback_sample_req] 
          $T[phi_stmt_585_loopback_sample_req_ps] 
          phi_stmt_585_loopback_sample_req <-& (phi_stmt_585_loopback_sample_req_ps)
          phi_stmt_585_loopback_sample_req &-> ($null)
          $T[phi_stmt_585_entry_trigger] 
          phi_stmt_585_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_585_entry_sample_req] 
          $T[phi_stmt_585_entry_sample_req_ps] 
          phi_stmt_585_entry_sample_req <-& (phi_stmt_585_entry_sample_req_ps)
          phi_stmt_585_entry_sample_req &-> ($null)
          phi_stmt_585_update_start_ o<-& (phi_stmt_585_update_completed_ 0)
          phi_stmt_585_sample_start_ o<-& (phi_stmt_585_sample_completed_ 1)
          $T[phi_stmt_585_merged_reqs] 
          $T[phi_stmt_585_phi_mux_ack] 
          $T[phi_stmt_585_phi_mux_ack_ps] 
          phi_stmt_585_phi_mux_ack_ps <-& (phi_stmt_585_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_585_update_completed_)
          $T[type_cast_588_sample_start__ps] 
          $T[type_cast_588_sample_completed__ps] 
          $T[type_cast_588_update_start__ps] 
          $T[type_cast_588_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_588_sample_start_] 
          $T[type_cast_588_sample_completed_] 
          type_cast_588_sample_completed_ <-& (type_cast_588_sample_start_)
          $T[type_cast_588_update_start_] 
          $T [type_cast_588_update_completed_] $delay 
          type_cast_588_update_completed_ <-& (type_cast_588_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_588_sample_start_ <-& (type_cast_588_sample_start__ps)
          type_cast_588_update_start_ <-& (type_cast_588_update_start__ps)
          // Phi complete dependency.
          type_cast_588_sample_completed__ps <-& (type_cast_588_sample_completed_)
          type_cast_588_update_completed__ps <-& (type_cast_588_update_completed_)
          $T[R_nI_589_sample_start__ps] 
          $T[R_nI_589_sample_completed__ps] 
          $T[R_nI_589_update_start__ps] 
          $T[R_nI_589_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nI_589_sample_start_] 
          $T[R_nI_589_sample_completed_] 
          $T[R_nI_589_update_start_] 
          $T[R_nI_589_update_completed_] 
          ;;[R_nI_589_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nI_589_sample_start_ &-> (R_nI_589_Sample)
          R_nI_589_sample_completed_ <-& (R_nI_589_Sample)
          ;;[R_nI_589_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nI_589_update_start_ &-> (R_nI_589_Update)
          R_nI_589_update_completed_ <-& (R_nI_589_Update)
          // RAW reenables for nI
          // Phi start dependency for implicit/constant alternative.
          R_nI_589_sample_start_ <-& (R_nI_589_sample_start__ps)
          R_nI_589_update_start_ <-& (R_nI_589_update_start__ps)
          // Phi complete dependency.
          R_nI_589_sample_completed__ps <-& (R_nI_589_sample_completed_)
          R_nI_589_update_completed__ps <-& (R_nI_589_update_completed_)
          $phisequencer [ phi_stmt_585_phi_seq] : 
          phi_stmt_585_entry_trigger type_cast_588_sample_start__ps type_cast_588_sample_completed__ps type_cast_588_update_start__ps type_cast_588_update_completed__ps phi_stmt_585_loopback_trigger R_nI_589_sample_start__ps R_nI_589_sample_completed__ps R_nI_589_update_start__ps R_nI_589_update_completed__ps :
          phi_stmt_585_sample_start__ps phi_stmt_585_sample_completed__ps phi_stmt_585_update_start__ps phi_stmt_585_update_completed__ps :
          phi_stmt_585_entry_sample_req_ps phi_stmt_585_loopback_sample_req_ps : 
          phi_stmt_585_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_585
          // start:  			out_data := y[I] $buffering 1// bits of buffering = 32. 
          //  file .Aa/mvp.opt.aa, line 232
          // Source expression
          // y[I]
          $T[array_obj_ref_593_base_address_calculated] 
          $T[array_obj_ref_593_sample_start_] 
          $T[array_obj_ref_593_sample_completed_] 
          $T[array_obj_ref_593_update_start_] 
          $T[array_obj_ref_593_update_completed_] 
          $T[array_obj_ref_593_word_address_calculated] 
          $T[array_obj_ref_593_root_address_calculated] 
          $T[array_obj_ref_593_offset_calculated] 
          $T[array_obj_ref_593_index_resized_0] 
          $T[array_obj_ref_593_index_scaled_0] 
          $T[array_obj_ref_593_index_computed_0] 
          // I
          // start: Forward dependencies from I to transition array_obj_ref_593_index_computed_0
          array_obj_ref_593_index_computed_0 <-& (phi_stmt_585_update_completed_)
          // done: Forward dependencies from I to transition array_obj_ref_593_index_computed_0
          ;;[array_obj_ref_593_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_593_index_computed_0 &-> (array_obj_ref_593_index_resize_0)
          array_obj_ref_593_index_resized_0 <-& (array_obj_ref_593_index_resize_0)
          ;;[array_obj_ref_593_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_593_index_resized_0 &-> (array_obj_ref_593_index_scale_0)
          array_obj_ref_593_index_scaled_0 <-& (array_obj_ref_593_index_scale_0)
          ;;[array_obj_ref_593_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_593_index_scaled_0 &-> (array_obj_ref_593_final_index_sum_regn)
          array_obj_ref_593_offset_calculated <-& (array_obj_ref_593_final_index_sum_regn)
          ;;[array_obj_ref_593_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_593_offset_calculated &-> (array_obj_ref_593_base_plus_offset)
          array_obj_ref_593_root_address_calculated <-& (array_obj_ref_593_base_plus_offset)
          ;;[array_obj_ref_593_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_593_root_address_calculated &-> (array_obj_ref_593_word_addrgen)
          array_obj_ref_593_word_address_calculated <-& (array_obj_ref_593_word_addrgen)
          ;;[array_obj_ref_593_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_593_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[array_obj_ref_593_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          array_obj_ref_593_sample_start_ <-& (array_obj_ref_593_word_address_calculated)
          // reenable-joins
          phi_stmt_585_update_start_ o<-& (array_obj_ref_593_sample_completed_ 0)
          array_obj_ref_593_sample_start_ &-> (array_obj_ref_593_Sample)
          array_obj_ref_593_sample_completed_ <-& (array_obj_ref_593_Sample)
          array_obj_ref_593_sample_completed_ &-> ($null)
          array_obj_ref_593_update_start_ &-> (array_obj_ref_593_Update)
          array_obj_ref_593_update_completed_ <-& (array_obj_ref_593_Update)
          // self-release: 
          array_obj_ref_593_sample_start_ o<-& (array_obj_ref_593_sample_completed_ 1)
          $null &-> (array_obj_ref_593_update_start_)
          array_obj_ref_593_update_start_ o<-& (array_obj_ref_593_update_completed_ 0)
          // Target expression
          // (as target) out_data
          $T[WPIPE_out_data_591_sample_start_] 
          $T[WPIPE_out_data_591_sample_completed_] 
          $T[WPIPE_out_data_591_update_start_] 
          $T[WPIPE_out_data_591_update_completed_] 
          ;;[WPIPE_out_data_591_Sample] 
          {
            // pipe write sample-start out_data
            $T [req] $T [ack] 
          }
          ;;[WPIPE_out_data_591_Update] 
          {
            // pipe write update (complete) out_data
            $T [req] $T [ack] 
          }
          WPIPE_out_data_591_sample_start_ &-> (WPIPE_out_data_591_Sample)
          WPIPE_out_data_591_sample_completed_ <-& (WPIPE_out_data_591_Sample)
          WPIPE_out_data_591_update_start_ <-& (WPIPE_out_data_591_sample_completed_)
          WPIPE_out_data_591_update_start_ &-> (WPIPE_out_data_591_Update)
          WPIPE_out_data_591_update_completed_ <-& (WPIPE_out_data_591_Update)
          WPIPE_out_data_591_sample_start_ o<-& (WPIPE_out_data_591_update_completed_ 0)
          // start: Forward dependencies from y[I] to transition WPIPE_out_data_591_sample_start_
          WPIPE_out_data_591_sample_start_ <-& (array_obj_ref_593_update_completed_)
          // done: Forward dependencies from y[I] to transition WPIPE_out_data_591_sample_start_
          // RAW reenables for y[I]
          array_obj_ref_593_update_start_ o<-& (WPIPE_out_data_591_sample_completed_ 0)
          // end:  			out_data := y[I] $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for nI
          // WAR dependency: Read: nI before Write: 			$volatile nI := (I + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nI
          // start:  			$volatile nI := (I + 1 ) $buffering 1
          //  file .Aa/mvp.opt.aa, line 233
          // volatile! 
          // Source expression
          // (I + 1 )
          // I
          // Target expression
          // (as target) nI
          // start: WAR dependencies for nI
          // WAR dependency: Read: nI before Write: 			$volatile nI := (I + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nI
          // end:  			$volatile nI := (I + 1 ) $buffering 1
          // (nI < 32 )
          // nI
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (nI < 32 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_585_update_completed_)
          // done: Forward dependencies from (nI < 32 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_8
          //  array_obj_ref_593 load
          // reenable across ring for memory space memory_space_8
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe out_data
          // read-dependencies for pipe out_data
          // write-dependencies for pipe out_data
          // signal write dependencies for out_data
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_583__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_583_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_583__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_583_loop_body : condition_evaluated
        $bind do_while_stmt_583__entry__  => do_while_stmt_583_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_583_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_583__exit__)
      }
      do_while_stmt_583__entry__ |-> (do_while_stmt_583)
      do_while_stmt_583__exit__ <-| (do_while_stmt_583)
      do_while_stmt_583__entry__ <-| (branch_block_stmt_582__entry__)
      do_while_stmt_583__exit__ |-> (branch_block_stmt_582__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sendVector%loop%
    //  file .Aa/mvp.opt.aa, line 228
    // constant-object-declarations for block %sendVector%loop
    //  file .Aa/mvp.opt.aa, line 224
    // constant-object-declarations for block %sendVector
    //  file .Aa/mvp.opt.aa, line 219
    // constant-declarations for block %sendVector%loop
    //  file .Aa/mvp.opt.aa, line 224
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 226
    // 32 
    $constant $W[konst_602_wire_constant] : $int<8> := _b00100000// 32
    // constant-declarations for block %sendVector%loop%
    //  file .Aa/mvp.opt.aa, line 228
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 229
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_588_wire_constant] : $int<8> := _b00000000// 0
    // y[I]
    $constant $W[array_obj_ref_593_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_593_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_593_word_offset_0] : $int<5> := _b00000// 0
    // 1 
    $constant $W[konst_597_wire_constant] : $int<8> := _b00000001// 1
    // block %sendVector%loop
    //  file .Aa/mvp.opt.aa, line 224
    // do-while statement  
    //  file .Aa/mvp.opt.aa, line 226
    // (nI < 32 )
    $intermediate $W[ULT_u8_u1_603_wire] : $int<1>
    // merge-statement  
    //  file .Aa/mvp.opt.aa, line 228
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 229
    $W[nI_599_589_buffered] : $int<8>
    // I
    $W[I_585] : $int<8>
    // 			out_data := y[I] $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 232
    // y[I]
    $intermediate $W[R_I_592_resized] : $int<5>
    $intermediate $W[R_I_592_scaled] : $int<5>
    $intermediate $W[array_obj_ref_593_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_593_root_address] : $int<5>
    $W[array_obj_ref_593_word_address_0] : $pointer<memory_space_8>
    $W[array_obj_ref_593_data_0] : $int<32>
    $W[array_obj_ref_593_wire] : $int<32>
    // out_data
    // 			$volatile nI := (I + 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 233
    // nI
    $W[nI_599] : $int<8>
    // datapath-instances for block %sendVector%loop
    //  file .Aa/mvp.opt.aa, line 224
    // datapath-instances for do-while  
    //  file .Aa/mvp.opt.aa, line 226
    // (nI < 32 )
    <[ULT_u8_u1_603_inst] (nI_599 konst_602_wire_constant) (ULT_u8_u1_603_wire)   $flowthrough 
    $delay ULT_u8_u1_603_inst 0
    ==0? [do_while_stmt_583_branch] (ULT_u8_u1_603_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/mvp.opt.aa, line 228
    // 			$phi I := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  nI $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/mvp.opt.aa, line 229
    # := [nI_599_589_buf] (nI_599) (nI_599_589_buffered)     $fullrate
    $buffering $out nI_599_589_buf nI_599_589_buffered  1
    # $phi [phi_stmt_585] (type_cast_588_wire_constant nI_599_589_buffered) ( I_585 ) $fullrate
    // $buffering  $out phi_stmt_585 I_585 2
    // 			out_data := y[I] $buffering 1// bits of buffering = 32. 
    //  file .Aa/mvp.opt.aa, line 232
    // y[I]
    &/ [array_obj_ref_593_index_0_resize] (I_585) (R_I_592_resized) 
    $flowthrough 
    &/ [array_obj_ref_593_index_0_rename] (R_I_592_resized) (R_I_592_scaled) 
    $flowthrough 
    &/ [array_obj_ref_593_index_offset] (R_I_592_scaled) (array_obj_ref_593_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_593_root_address_inst] (array_obj_ref_593_final_offset) (array_obj_ref_593_root_address) 
    $flowthrough 
    &/ [array_obj_ref_593_addr_0] (array_obj_ref_593_root_address) (array_obj_ref_593_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_593_load_0] $from memory_space_8 (array_obj_ref_593_word_address_0) (array_obj_ref_593_data_0) 
    $buffering  $in array_obj_ref_593_load_0 array_obj_ref_593_word_address_0 2
    $buffering  $out array_obj_ref_593_load_0 array_obj_ref_593_data_0 2
    $delay array_obj_ref_593_load_0 4
    &/ [array_obj_ref_593_gather_scatter] (array_obj_ref_593_data_0) (array_obj_ref_593_wire) 
    $flowthrough 
    // out_data
    $ioport $out [WPIPE_out_data_591_inst]  (array_obj_ref_593_wire) (out_data)  $fullrate 
    // 			$volatile nI := (I + 1 ) $buffering 1
    //  file .Aa/mvp.opt.aa, line 233
    // (I + 1 )
    +[ADD_u8_u8_598_inst] (I_585 konst_597_wire_constant) (nI_599)   $flowthrough 
    $delay ADD_u8_u8_598_inst 0
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_583
  //  file .Aa/mvp.opt.aa, line 226
  phi_stmt_585 <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/phi_stmt_585_entry_sample_req branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/phi_stmt_585_loopback_sample_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/phi_stmt_585_phi_mux_ack)
  nI_599_589_buf <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/R_nI_589_Sample/req branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/R_nI_589_Update/req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/R_nI_589_Sample/ack branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/R_nI_589_Update/ack)
  // 			out_data := y[I] $buffering 1// bits of buffering = 32. 
  //  file .Aa/mvp.opt.aa, line 232
  // y[I]
  // I
  array_obj_ref_593_index_0_resize <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_index_resize_0/index_resize_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_index_resize_0/index_resize_ack)
  array_obj_ref_593_index_0_rename <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_index_scale_0/scale_rename_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_index_scale_0/scale_rename_ack)
  array_obj_ref_593_index_offset <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_final_index_sum_regn/req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_final_index_sum_regn/ack)
  array_obj_ref_593_root_address_inst <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_base_plus_offset/sum_rename_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_base_plus_offset/sum_rename_ack)
  array_obj_ref_593_addr_0 <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_word_addrgen/root_register_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_word_addrgen/root_register_ack)
  array_obj_ref_593_gather_scatter <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Update/array_obj_ref_593_Merge/merge_req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Update/array_obj_ref_593_Merge/merge_ack)
  array_obj_ref_593_load_0 <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Sample/word_access_start/word_0/rr branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Update/word_access_complete/word_0/cr) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Sample/word_access_start/word_0/ra branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/array_obj_ref_593_Update/word_access_complete/word_0/ca)
  // out_data
  WPIPE_out_data_591_inst <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/WPIPE_out_data_591_Sample/req branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/WPIPE_out_data_591_Update/req) (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/WPIPE_out_data_591_Sample/ack branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/WPIPE_out_data_591_Update/ack)
  // 			$volatile nI := (I + 1 ) $buffering 1
  //  file .Aa/mvp.opt.aa, line 233
  // (I + 1 )
  // I
  // (nI < 32 )
  // nI
  do_while_stmt_583_branch <=> (branch_block_stmt_582/do_while_stmt_583/do_while_stmt_583_loop_body/condition_evaluated) (branch_block_stmt_582/do_while_stmt_583/loop_exit/ack branch_block_stmt_582/do_while_stmt_583/loop_taken/ack)
}
$module [mvp_daemon] 
{
  // pipe-declarations for block %mvp_daemon
  //  file .Aa/mvp.opt.aa, line 237
  // pipe-declarations for block %mvp_daemon%loop
  //  file .Aa/mvp.opt.aa, line 243
  // pipe-declarations for block %mvp_daemon%loop%
  //  file .Aa/mvp.opt.aa, line 245
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_607] 
    {
      // start: 	$call readMatrix () () 
      //  file .Aa/mvp.opt.aa, line 242
      $T[call_stmt_607_sample_start_] 
      $T[call_stmt_607_sample_completed_] 
      $T[call_stmt_607_update_start_] 
      $T[call_stmt_607_update_completed_] 
      ;;[call_stmt_607_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_607_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_607_sample_start_ &-> (call_stmt_607_Sample)
      call_stmt_607_sample_completed_ <-& (call_stmt_607_Sample)
      call_stmt_607_sample_completed_ &-> ($null)
      call_stmt_607_update_start_ &-> (call_stmt_607_Update)
      call_stmt_607_update_completed_ <-& (call_stmt_607_Update)
      // end: 	$call readMatrix () () 
      // load-store dependencies..
      // memory-space  memory_space_2
      //  call_stmt_607 store
      // memory-space  memory_space_1
      //  call_stmt_607 store
      // memory-space  memory_space_0
      //  call_stmt_607 store
      // memory-space  memory_space_3
      //  call_stmt_607 store
      // pipe read/write dependencies for pipe in_data
      // read-dependencies for pipe in_data
      // write-dependencies for pipe in_data
      // signal write dependencies for in_data
    }
    <>[branch_block_stmt_608] // Branch Block  file .Aa/mvp.opt.aa, line 243
    {
      $P [branch_block_stmt_608__entry__]
      branch_block_stmt_608__entry__ <-| ($entry)
      $P [branch_block_stmt_608__exit__]
      branch_block_stmt_608__exit__ |-> ($exit)
      $P [merge_stmt_609__entry__] 
      $P [merge_stmt_609__exit__] 
      $P [call_stmt_610_to_call_stmt_612__entry__] 
      $P [call_stmt_610_to_call_stmt_612__exit__] 
      $P [loopback]
      ::[call_stmt_610_to_call_stmt_612] 
      {
        // start: 		$call readVector () () 
        //  file .Aa/mvp.opt.aa, line 247
        $T[call_stmt_610_sample_start_] 
        $T[call_stmt_610_sample_completed_] 
        $T[call_stmt_610_update_start_] 
        $T[call_stmt_610_update_completed_] 
        ;;[call_stmt_610_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_610_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_610_sample_start_ &-> (call_stmt_610_Sample)
        call_stmt_610_sample_completed_ <-& (call_stmt_610_Sample)
        call_stmt_610_sample_completed_ &-> ($null)
        call_stmt_610_update_start_ &-> (call_stmt_610_Update)
        call_stmt_610_update_completed_ <-& (call_stmt_610_Update)
        // end: 		$call readVector () () 
        // start: 		$call multiplyMatrixVector () () 
        //  file .Aa/mvp.opt.aa, line 248
        $T[call_stmt_611_sample_start_] 
        $T[call_stmt_611_sample_completed_] 
        $T[call_stmt_611_update_start_] 
        $T[call_stmt_611_update_completed_] 
        ;;[call_stmt_611_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_611_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_611_sample_start_ &-> (call_stmt_611_Sample)
        call_stmt_611_sample_completed_ <-& (call_stmt_611_Sample)
        call_stmt_611_sample_completed_ &-> ($null)
        call_stmt_611_update_start_ &-> (call_stmt_611_Update)
        call_stmt_611_update_completed_ <-& (call_stmt_611_Update)
        // end: 		$call multiplyMatrixVector () () 
        // start: 		$call sendVector () () 
        //  file .Aa/mvp.opt.aa, line 249
        $T[call_stmt_612_sample_start_] 
        $T[call_stmt_612_sample_completed_] 
        $T[call_stmt_612_update_start_] 
        $T[call_stmt_612_update_completed_] 
        ;;[call_stmt_612_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_612_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_612_sample_start_ &-> (call_stmt_612_Sample)
        call_stmt_612_sample_completed_ <-& (call_stmt_612_Sample)
        call_stmt_612_sample_completed_ &-> ($null)
        call_stmt_612_update_start_ &-> (call_stmt_612_Update)
        call_stmt_612_update_completed_ <-& (call_stmt_612_Update)
        // end: 		$call sendVector () () 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  call_stmt_611 load
        // memory-space  memory_space_5
        //  call_stmt_610 store
        //  call_stmt_611 load
        $T [call_stmt_610_call_stmt_611_delay] $delay
        // call_stmt_610(store) -> call_stmt_611(load)
        call_stmt_611_sample_start_ <-& (call_stmt_610_call_stmt_611_delay)
        call_stmt_610_call_stmt_611_delay <-& (call_stmt_610_update_completed_)
        // memory-space  memory_space_1
        //  call_stmt_611 load
        // memory-space  memory_space_0
        //  call_stmt_611 load
        // memory-space  memory_space_4
        //  call_stmt_610 store
        //  call_stmt_611 load
        $T [call_stmt_610_call_stmt_611_delay] $delay
        // call_stmt_610(store) -> call_stmt_611(load)
        call_stmt_611_sample_start_ <-& (call_stmt_610_call_stmt_611_delay)
        call_stmt_610_call_stmt_611_delay <-& (call_stmt_610_update_completed_)
        // memory-space  memory_space_8
        //  call_stmt_611 store
        //  call_stmt_612 load
        $T [call_stmt_611_call_stmt_612_delay] $delay
        // call_stmt_611(store) -> call_stmt_612(load)
        call_stmt_612_sample_start_ <-& (call_stmt_611_call_stmt_612_delay)
        call_stmt_611_call_stmt_612_delay <-& (call_stmt_611_update_completed_)
        // memory-space  memory_space_7
        //  call_stmt_610 store
        //  call_stmt_611 load
        $T [call_stmt_610_call_stmt_611_delay] $delay
        // call_stmt_610(store) -> call_stmt_611(load)
        call_stmt_611_sample_start_ <-& (call_stmt_610_call_stmt_611_delay)
        call_stmt_610_call_stmt_611_delay <-& (call_stmt_610_update_completed_)
        // memory-space  memory_space_6
        //  call_stmt_610 store
        //  call_stmt_611 load
        $T [call_stmt_610_call_stmt_611_delay] $delay
        // call_stmt_610(store) -> call_stmt_611(load)
        call_stmt_611_sample_start_ <-& (call_stmt_610_call_stmt_611_delay)
        call_stmt_610_call_stmt_611_delay <-& (call_stmt_610_update_completed_)
        // memory-space  memory_space_3
        //  call_stmt_611 load
        // pipe read/write dependencies for pipe in_data
        // read-dependencies for pipe in_data
        // write-dependencies for pipe in_data
        // signal write dependencies for in_data
        // pipe read/write dependencies for pipe out_data
        // read-dependencies for pipe out_data
        // write-dependencies for pipe out_data
        // signal write dependencies for out_data
      }
      call_stmt_610_to_call_stmt_612__entry__ |-> (call_stmt_610_to_call_stmt_612)
      call_stmt_610_to_call_stmt_612__exit__ <-| (call_stmt_610_to_call_stmt_612)
      // control-path for merge  
      //  file .Aa/mvp.opt.aa, line 245
      ;;[merge_stmt_609_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_609__entry__ |-> (merge_stmt_609_dead_link)
      merge_stmt_609__exit__ <-| (merge_stmt_609_dead_link)
      //---------------------   merge statement  file .Aa/mvp.opt.aa, line 245  --------------------------
      ||[merge_stmt_609__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_609__entry__ |-> (merge_stmt_609__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_609_PhiReqMerge] 
      merge_stmt_609_PhiReqMerge <-| ( merge_stmt_609__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_609_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_609_PhiReqMerge |-> (merge_stmt_609_PhiAck)
      merge_stmt_609__exit__  <-| (merge_stmt_609_PhiAck)
      //---------------------  end of merge statement  file .Aa/mvp.opt.aa, line 245  --------------------------
      merge_stmt_609__entry__ <-| (branch_block_stmt_608__entry__)
      call_stmt_610_to_call_stmt_612__entry__ <-| (merge_stmt_609__exit__)
      loopback <-| (call_stmt_610_to_call_stmt_612__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %mvp_daemon%loop%
    //  file .Aa/mvp.opt.aa, line 245
    // constant-object-declarations for block %mvp_daemon%loop
    //  file .Aa/mvp.opt.aa, line 243
    // constant-object-declarations for block %mvp_daemon
    //  file .Aa/mvp.opt.aa, line 237
    // 	$call readMatrix () () 
    //  file .Aa/mvp.opt.aa, line 242
    // constant-declarations for block %mvp_daemon%loop
    //  file .Aa/mvp.opt.aa, line 243
    // constant-declarations for block %mvp_daemon%loop%
    //  file .Aa/mvp.opt.aa, line 245
    // 		$call readVector () () 
    //  file .Aa/mvp.opt.aa, line 247
    // 		$call multiplyMatrixVector () () 
    //  file .Aa/mvp.opt.aa, line 248
    // 		$call sendVector () () 
    //  file .Aa/mvp.opt.aa, line 249
    // 	$call readMatrix () () 
    //  file .Aa/mvp.opt.aa, line 242
    // block %mvp_daemon%loop
    //  file .Aa/mvp.opt.aa, line 243
    // 		$call readVector () () 
    //  file .Aa/mvp.opt.aa, line 247
    // 		$call multiplyMatrixVector () () 
    //  file .Aa/mvp.opt.aa, line 248
    // 		$call sendVector () () 
    //  file .Aa/mvp.opt.aa, line 249
    // 	$call readMatrix () () 
    //  file .Aa/mvp.opt.aa, line 242
    $call [call_stmt_607_call] $module readMatrix() ()  
    $delay call_stmt_607_call 4
    // datapath-instances for block %mvp_daemon%loop
    //  file .Aa/mvp.opt.aa, line 243
    // 		$call readVector () () 
    //  file .Aa/mvp.opt.aa, line 247
    $call [call_stmt_610_call] $module readVector() ()  
    $delay call_stmt_610_call 4
    // 		$call multiplyMatrixVector () () 
    //  file .Aa/mvp.opt.aa, line 248
    $call [call_stmt_611_call] $module multiplyMatrixVector() ()  
    $delay call_stmt_611_call 4
    // 		$call sendVector () () 
    //  file .Aa/mvp.opt.aa, line 249
    $call [call_stmt_612_call] $module sendVector() ()  
    $delay call_stmt_612_call 4
  }
  // end data-path
  // 	$call readMatrix () () 
  //  file .Aa/mvp.opt.aa, line 242
  call_stmt_607_call <=> (call_stmt_607/call_stmt_607_Sample/crr call_stmt_607/call_stmt_607_Update/ccr) (call_stmt_607/call_stmt_607_Sample/cra call_stmt_607/call_stmt_607_Update/cca)
  // CP-DP links for merge  
  //  file .Aa/mvp.opt.aa, line 245
  // 		$call readVector () () 
  //  file .Aa/mvp.opt.aa, line 247
  call_stmt_610_call <=> (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_610_Sample/crr branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_610_Update/ccr) (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_610_Sample/cra branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_610_Update/cca)
  // 		$call multiplyMatrixVector () () 
  //  file .Aa/mvp.opt.aa, line 248
  call_stmt_611_call <=> (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_611_Sample/crr branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_611_Update/ccr) (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_611_Sample/cra branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_611_Update/cca)
  // 		$call sendVector () () 
  //  file .Aa/mvp.opt.aa, line 249
  call_stmt_612_call <=> (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_612_Sample/crr branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_612_Update/ccr) (branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_612_Sample/cra branch_block_stmt_608/call_stmt_610_to_call_stmt_612/call_stmt_612_Update/cca)
}
